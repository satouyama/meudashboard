{"version":3,"sources":["../node_modules/lodash/_root.js","../node_modules/lodash/isObjectLike.js","../node_modules/lodash/_baseGetTag.js","../node_modules/lodash/isObject.js","../node_modules/lodash/_getNative.js","../node_modules/lodash/_Symbol.js","../node_modules/lodash/isFunction.js","../node_modules/react-chartjs-2/es/index.js","../node_modules/lodash/isSymbol.js","../node_modules/lodash/keys.js","../node_modules/webpack/buildin/module.js","../node_modules/lodash/isArrayLike.js","../node_modules/lodash/_toKey.js","../node_modules/moment/moment.js","../node_modules/lodash/isEqual.js","../node_modules/lodash/keyBy.js","../node_modules/lodash/_baseIteratee.js","../node_modules/lodash/_ListCache.js","../node_modules/lodash/_assocIndexOf.js","../node_modules/lodash/eq.js","../node_modules/lodash/_nativeCreate.js","../node_modules/lodash/_getMapData.js","../node_modules/lodash/_castPath.js","../node_modules/lodash/_arrayMap.js","../node_modules/lodash/identity.js","../node_modules/lodash/isArguments.js","../node_modules/lodash/isBuffer.js","../node_modules/lodash/toString.js","../node_modules/lodash/_Stack.js","../node_modules/lodash/_Map.js","../node_modules/lodash/_freeGlobal.js","../node_modules/lodash/_MapCache.js","../node_modules/lodash/_isIndex.js","../node_modules/lodash/isTypedArray.js","../node_modules/lodash/isLength.js","../node_modules/lodash/_isPrototype.js","../node_modules/lodash/_getTag.js","../node_modules/lodash/_baseGet.js","../node_modules/lodash/_isKey.js","../node_modules/lodash/_baseEach.js","../node_modules/lodash/_baseIsEqual.js","../node_modules/lodash/_baseUnary.js","../node_modules/lodash/_overArg.js","../node_modules/lodash/_baseAssignValue.js","../node_modules/lodash/_getRawTag.js","../node_modules/lodash/_objectToString.js","../node_modules/lodash/_toSource.js","../node_modules/lodash/_equalArrays.js","../node_modules/lodash/_setToArray.js","../node_modules/lodash/_arrayPush.js","../node_modules/lodash/_getSymbols.js","../node_modules/lodash/_nodeUtil.js","../node_modules/lodash/_isStrictComparable.js","../node_modules/lodash/_matchesStrictComparable.js","../node_modules/lodash/_baseToString.js","../node_modules/lodash/_SetCache.js","../node_modules/lodash/_cacheHas.js","../node_modules/lodash/_Uint8Array.js","../node_modules/lodash/_getAllKeys.js","../node_modules/lodash/_baseGetAllKeys.js","../node_modules/lodash/_arrayFilter.js","../node_modules/lodash/stubArray.js","../node_modules/lodash/_arrayLikeKeys.js","../node_modules/lodash/_baseKeys.js","../node_modules/lodash/_Set.js","../node_modules/lodash/hasIn.js","../node_modules/lodash/_defineProperty.js","../node_modules/lodash/_baseFor.js","../node_modules/lodash/_baseMatches.js","../node_modules/lodash/_baseIsMatch.js","../node_modules/lodash/_listCacheClear.js","../node_modules/lodash/_listCacheDelete.js","../node_modules/lodash/_listCacheGet.js","../node_modules/lodash/_listCacheHas.js","../node_modules/lodash/_listCacheSet.js","../node_modules/lodash/_stackClear.js","../node_modules/lodash/_stackDelete.js","../node_modules/lodash/_stackGet.js","../node_modules/lodash/_stackHas.js","../node_modules/lodash/_stackSet.js","../node_modules/lodash/_baseIsNative.js","../node_modules/lodash/_isMasked.js","../node_modules/lodash/_coreJsData.js","../node_modules/lodash/_getValue.js","../node_modules/lodash/_mapCacheClear.js","../node_modules/lodash/_Hash.js","../node_modules/lodash/_hashClear.js","../node_modules/lodash/_hashDelete.js","../node_modules/lodash/_hashGet.js","../node_modules/lodash/_hashHas.js","../node_modules/lodash/_hashSet.js","../node_modules/lodash/_mapCacheDelete.js","../node_modules/lodash/_isKeyable.js","../node_modules/lodash/_mapCacheGet.js","../node_modules/lodash/_mapCacheHas.js","../node_modules/lodash/_mapCacheSet.js","../node_modules/lodash/_baseIsEqualDeep.js","../node_modules/lodash/_setCacheAdd.js","../node_modules/lodash/_setCacheHas.js","../node_modules/lodash/_arraySome.js","../node_modules/lodash/_equalByTag.js","../node_modules/lodash/_mapToArray.js","../node_modules/lodash/_equalObjects.js","../node_modules/lodash/_baseTimes.js","../node_modules/lodash/_baseIsArguments.js","../node_modules/lodash/stubFalse.js","../node_modules/lodash/_baseIsTypedArray.js","../node_modules/lodash/_nativeKeys.js","../node_modules/lodash/_DataView.js","../node_modules/lodash/_Promise.js","../node_modules/lodash/_WeakMap.js","../node_modules/lodash/_getMatchData.js","../node_modules/lodash/_baseMatchesProperty.js","../node_modules/lodash/get.js","../node_modules/lodash/_stringToPath.js","../node_modules/lodash/_memoizeCapped.js","../node_modules/lodash/memoize.js","../node_modules/lodash/_baseHasIn.js","../node_modules/lodash/_hasPath.js","../node_modules/lodash/property.js","../node_modules/lodash/_baseProperty.js","../node_modules/lodash/_basePropertyDeep.js","../node_modules/lodash/_baseForOwn.js","../node_modules/lodash/_createBaseFor.js","../node_modules/lodash/_createBaseEach.js","../node_modules/lodash/_createAggregator.js","../node_modules/lodash/_arrayAggregator.js","../node_modules/lodash/_baseAggregator.js","../node_modules/reactstrap/es/CardBody.js","../node_modules/reactstrap/es/Card.js","../node_modules/reactstrap/es/CardHeader.js","../node_modules/chart.js/dist/Chart.js","../node_modules/lodash/isArray.js"],"names":["freeGlobal","__webpack_require__","freeSelf","self","Object","root","Function","module","exports","value","Symbol","getRawTag","objectToString","nullTag","undefinedTag","symToStringTag","toStringTag","undefined","type","baseIsNative","getValue","object","key","baseGetTag","isObject","asyncTag","funcTag","genTag","proxyTag","tag","process","d","__webpack_exports__","Doughnut","Pie","Line","Bar","HorizontalBar","Radar","react__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_0___default","n","prop_types__WEBPACK_IMPORTED_MODULE_1__","prop_types__WEBPACK_IMPORTED_MODULE_1___default","chart_js__WEBPACK_IMPORTED_MODULE_2__","chart_js__WEBPACK_IMPORTED_MODULE_2___default","lodash_isEqual__WEBPACK_IMPORTED_MODULE_3__","lodash_isEqual__WEBPACK_IMPORTED_MODULE_3___default","lodash_keyBy__WEBPACK_IMPORTED_MODULE_4__","lodash_keyBy__WEBPACK_IMPORTED_MODULE_4___default","_extends","assign","target","i","arguments","length","source","prototype","hasOwnProperty","call","_objectWithoutProperties","obj","keys","indexOf","_classCallCheck","instance","Constructor","TypeError","_possibleConstructorReturn","ReferenceError","_inherits","subClass","superClass","create","constructor","enumerable","writable","configurable","setPrototypeOf","__proto__","NODE_ENV","PUBLIC_URL","ChartComponent","_React$Component","_temp","_this","this","_len","args","Array","_key","apply","concat","handleOnClick","event","chartInstance","_this$props","props","getDatasetAtEvent","getElementAtEvent","getElementsAtEvent","onElementsClick","ref","element","componentWillMount","componentDidMount","renderChart","componentDidUpdate","redraw","destroyChart","updateChart","shouldComponentUpdate","nextProps","_props","options","plugins","legend","height","width","nextData","transformDataProp","shadowDataProp","componentWillUnmount","data","memoizeDataProps","datasets","map","set","saveCurrentDatasets","checkDatasets","isDev","usingCustomKeyProvider","datasetKeyProvider","getLabelAsKey","multipleDatasets","shouldWarn","forEach","dataset","label","console","error","getCurrentDatasets","config","_this2","_this3","a","helpers","configMerge","currentDatasets","nextDatasets","currentDatasetsIndexed","next","current","splice","point","pid","otherProps","rest","update","_props2","node","defaultProps","values","destroy","render","_props3","id","createElement","onClick","Component","propTypes","oneOfType","func","isRequired","number","arrayOf","bool","propName","componentName","controllers","Error","display","position","_React$Component2","_this5","_ref","_React$Component3","_this7","_ref2","_React$Component4","_this9","_ref3","_React$Component5","_this11","_ref4","_React$Component6","_this13","_ref5","_React$Component7","_this15","_ref6","_React$Component8","Polar","_this17","_ref7","_React$Component9","Bubble","_this19","_ref8","_React$Component10","Scatter","_this21","_ref9","defaults","isObjectLike","symbolTag","arrayLikeKeys","baseKeys","isArrayLike","webpackPolyfill","deprecate","paths","children","defineProperty","get","l","isFunction","isLength","isSymbol","INFINITY","result","hookCallback","some","hooks","isArray","input","toString","isUndefined","isNumber","isDate","Date","arr","fn","res","push","hasOwnProp","b","extend","valueOf","createUTC","format","locale","strict","createLocalOrUTC","utc","getParsingFlags","m","_pf","empty","unusedTokens","unusedInput","overflow","charsLeftOver","nullInput","invalidMonth","invalidFormat","userInvalidated","iso","parsedDateParts","meridiem","rfc2822","weekdayMismatch","isValid","_isValid","flags","parsedParts","isNowValid","isNaN","_d","getTime","invalidWeekday","_strict","bigHour","isFrozen","createInvalid","NaN","fun","t","len","momentProperties","copyConfig","to","from","prop","val","_isAMomentObject","_i","_f","_l","_tzm","_isUTC","_offset","_locale","updateInProgress","Moment","updateOffset","isMoment","absFloor","Math","ceil","floor","toInt","argumentForCoercion","coercedNumber","isFinite","compareArrays","array1","array2","dontConvert","min","lengthDiff","abs","diffs","warn","msg","suppressDeprecationWarnings","firstTime","deprecationHandler","arg","slice","join","stack","deprecations","deprecateSimple","name","mergeConfigs","parentConfig","childConfig","Locale","aliases","addUnitAlias","unit","shorthand","lowerCase","toLowerCase","normalizeUnits","units","normalizeObjectUnits","inputObject","normalizedProp","normalizedInput","priorities","addUnitPriority","priority","zeroFill","targetLength","forceSign","absNumber","zerosToFill","sign","pow","max","substr","formattingTokens","localFormattingTokens","formatFunctions","formatTokenFunctions","addFormatToken","token","padded","ordinal","callback","localeData","formatMoment","expandFormat","array","match","replace","mom","output","makeFormatFunction","invalidDate","replaceLongDateFormatTokens","longDateFormat","lastIndex","test","match1","match2","match3","match4","match6","match1to2","match3to4","match5to6","match1to3","match1to4","match1to6","matchUnsigned","matchSigned","matchOffset","matchShortOffset","matchWord","regexes","addRegexToken","regex","strictRegex","isStrict","getParseRegexForToken","RegExp","regexEscape","matched","p1","p2","p3","p4","s","tokens","addParseToken","addWeekParseToken","_w","addTimeToArrayFromToken","_a","YEAR","MONTH","DATE","HOUR","MINUTE","SECOND","MILLISECOND","WEEK","WEEKDAY","daysInYear","year","isLeapYear","y","parseTwoDigitYear","parseInt","getSetYear","makeGetSet","keepTime","set$1","month","date","daysInMonth","x","modMonth","o","monthsShort","months","monthsShortRegex","monthsRegex","monthsParse","MONTHS_IN_FORMAT","defaultLocaleMonths","split","defaultLocaleMonthsShort","setMonth","dayOfMonth","getSetMonth","defaultMonthsShortRegex","defaultMonthsRegex","computeMonthsParse","cmpLenRev","shortPieces","longPieces","mixedPieces","sort","_monthsRegex","_monthsShortRegex","_monthsStrictRegex","_monthsShortStrictRegex","createUTCDate","UTC","getUTCFullYear","setUTCFullYear","firstWeekOffset","dow","doy","fwd","fwdlw","getUTCDay","dayOfYearFromWeeks","week","weekday","resYear","resDayOfYear","localWeekday","weekOffset","dayOfYear","weekOfYear","resWeek","weeksInYear","weekOffsetNext","shiftWeekdays","ws","weekdaysMin","weekdaysShort","weekdays","weekdaysMinRegex","weekdaysShortRegex","weekdaysRegex","weekdaysParse","defaultLocaleWeekdays","defaultLocaleWeekdaysShort","defaultLocaleWeekdaysMin","defaultWeekdaysRegex","defaultWeekdaysShortRegex","defaultWeekdaysMinRegex","computeWeekdaysParse","minp","shortp","longp","minPieces","day","_weekdaysRegex","_weekdaysShortRegex","_weekdaysMinRegex","_weekdaysStrictRegex","_weekdaysShortStrictRegex","_weekdaysMinStrictRegex","hFormat","hours","lowercase","minutes","matchMeridiem","_meridiemParse","seconds","kInput","_isPm","isPM","_meridiem","pos","pos1","pos2","globalLocale","getSetHour","baseConfig","calendar","sameDay","nextDay","nextWeek","lastDay","lastWeek","sameElse","LTS","LT","L","LL","LLL","LLLL","dayOfMonthOrdinalParse","relativeTime","future","past","ss","mm","h","hh","dd","M","MM","yy","meridiemParse","locales","localeFamilies","normalizeLocale","loadLocale","oldLocale","_abbr","e","code","getSetGlobalLocale","getLocale","defineLocale","abbr","_config","parentLocale","names","j","chooseLocale","checkOverflow","_overflowDayOfYear","_overflowWeeks","_overflowWeekday","c","configFromArray","currentDate","expectedWeekday","yearToUse","nowValue","now","_useUTC","getUTCMonth","getUTCDate","getFullYear","getMonth","getDate","currentDateArray","w","weekYear","temp","weekdayOverflow","GG","W","E","createLocal","_week","curWeek","gg","_dayOfYear","dayOfYearFromWeekInfo","_nextDay","ms","setFullYear","getDay","setUTCMinutes","getUTCMinutes","extendedIsoRegex","basicIsoRegex","tzRegex","isoDates","isoTimes","aspNetJsonRegex","configFromISO","allowTime","dateFormat","timeFormat","tzFormat","string","exec","configFromStringAndFormat","untruncateYear","yearStr","obsOffsets","UT","GMT","EDT","EST","CDT","CST","MDT","MST","PDT","PST","configFromRFC2822","parsedArray","monthStr","dayStr","hourStr","minuteStr","secondStr","extractFromRFC2822Strings","weekdayStr","parsedInput","weekdayProvided","weekdayActual","checkWeekday","obsOffset","militaryOffset","numOffset","hm","calculateOffset","ISO_8601","RFC_2822","skipped","stringLength","totalParsedInputLength","hour","isPm","meridiemHour","meridiemFixWrap","prepareConfig","preparse","tempConfig","bestMoment","scoreToBeat","currentScore","score","configFromStringAndArray","createFromInputFallback","configFromString","minute","second","millisecond","configFromObject","configFromInput","isUTC","getOwnPropertyNames","k","isObjectEmpty","add","createFromConfig","prototypeMin","other","prototypeMax","pickBy","moments","ordering","Duration","duration","years","quarters","quarter","weeks","isoWeek","days","milliseconds","unitHasDecimal","parseFloat","isDurationValid","_milliseconds","_days","_months","_data","_bubble","isDuration","absRound","round","offset","separator","utcOffset","offsetFromString","chunkOffset","matcher","matches","chunk","parts","cloneWithOffset","model","diff","clone","setTime","local","getDateOffset","getTimezoneOffset","isUtc","aspNetRegex","isoRegex","createDuration","ret","diffRes","parseIso","base","isBefore","positiveMomentsDifference","momentsDifference","inp","isAfter","createAdder","direction","period","tmp","addSubtract","isAdding","invalid","subtract","monthDiff","anchor2","adjust","wholeMonthDiff","anchor","newLocaleData","defaultFormat","defaultFormatUtc","lang","MS_PER_SECOND","MS_PER_MINUTE","MS_PER_HOUR","MS_PER_400_YEARS","mod$1","dividend","divisor","localStartOfDate","utcStartOfDate","addWeekYearFormatToken","getter","getSetWeekYearHelper","weeksTarget","dayOfYearData","isoWeekYear","_dayOfMonthOrdinalParse","_ordinalParse","_dayOfMonthOrdinalParseLenient","getSetDayOfMonth","getSetMinute","getSetSecond","parseMs","getSetMillisecond","proto","preParsePostFormat","time","formats","sod","startOf","calendarFormat","asFloat","that","zoneDelta","endOf","startOfDate","isoWeekday","inputString","postformat","withoutSuffix","humanize","fromNow","toNow","invalidAt","localInput","isBetween","inclusivity","localFrom","localTo","isSame","inputMs","isSameOrAfter","isSameOrBefore","parsingFlags","prioritized","unitsObj","u","getPrioritizedUnits","toArray","toObject","toDate","toISOString","keepOffset","inspect","zone","isLocal","prefix","suffix","toJSON","unix","creationData","isoWeeks","weekInfo","isoWeeksInYear","parseWeekday","parseIsoWeekday","keepLocalTime","keepMinutes","localAdjust","_changeInProgress","parseZone","tZone","hasAlignedHourOffset","isDST","isUtcOffset","zoneAbbr","zoneName","dates","isDSTShifted","_isDSTShifted","proto$1","get$1","index","field","setter","listMonthsImpl","out","listWeekdaysImpl","localeSorted","shift","_calendar","_longDateFormat","formatUpper","toUpperCase","_invalidDate","_ordinal","isFuture","_relativeTime","pastFuture","isFormat","_monthsShort","monthName","_monthsParseExact","ii","llc","toLocaleLowerCase","_monthsParse","_longMonthsParse","_shortMonthsParse","firstDayOfYear","firstDayOfWeek","_weekdays","_weekdaysMin","_weekdaysShort","weekdayName","_weekdaysParseExact","_weekdaysParse","_shortWeekdaysParse","_minWeekdaysParse","_fullWeekdaysParse","charAt","isLower","langData","mathAbs","addSubtract$1","absCeil","daysToMonths","monthsToDays","makeAs","alias","as","asMilliseconds","asSeconds","asMinutes","asHours","asDays","asWeeks","asMonths","asQuarters","asYears","makeGetter","thresholds","abs$1","toISOString$1","Y","D","toFixed","total","totalSign","ymSign","daysSign","hmsSign","proto$2","monthsFromDays","withSuffix","posNegDuration","relativeTime$1","toIsoString","version","updateLocale","tmpLocale","relativeTimeRounding","roundingFunction","relativeTimeThreshold","threshold","limit","myMoment","HTML5_FMT","DATETIME_LOCAL","DATETIME_LOCAL_SECONDS","DATETIME_LOCAL_MS","TIME","TIME_SECONDS","TIME_MS","factory","baseIsEqual","baseAssignValue","keyBy","createAggregator","baseMatches","baseMatchesProperty","identity","property","listCacheClear","listCacheDelete","listCacheGet","listCacheHas","listCacheSet","ListCache","entries","clear","entry","has","eq","nativeCreate","getNative","isKeyable","__data__","isKey","stringToPath","iteratee","baseIsArguments","objectProto","propertyIsEnumerable","isArguments","stubFalse","freeExports","nodeType","freeModule","Buffer","isBuffer","baseToString","stackClear","stackDelete","stackGet","stackHas","stackSet","Stack","size","Map","global","mapCacheClear","mapCacheDelete","mapCacheGet","mapCacheHas","mapCacheSet","MapCache","MAX_SAFE_INTEGER","reIsUint","baseIsTypedArray","baseUnary","nodeUtil","nodeIsTypedArray","isTypedArray","Ctor","DataView","Promise","Set","WeakMap","toSource","dataViewCtorString","mapCtorString","promiseCtorString","setCtorString","weakMapCtorString","getTag","ArrayBuffer","resolve","ctorString","castPath","toKey","path","reIsDeepProp","reIsPlainProp","baseForOwn","baseEach","createBaseEach","baseIsEqualDeep","bitmask","customizer","transform","nativeObjectToString","isOwn","unmasked","funcToString","SetCache","arraySome","cacheHas","COMPARE_PARTIAL_FLAG","COMPARE_UNORDERED_FLAG","equalFunc","isPartial","arrLength","othLength","stacked","seen","arrValue","othValue","compared","othIndex","arrayFilter","stubArray","nativeGetSymbols","getOwnPropertySymbols","getSymbols","symbol","freeProcess","types","require","binding","srcValue","arrayMap","symbolProto","symbolToString","setCacheAdd","setCacheHas","cache","Uint8Array","baseGetAllKeys","arrayPush","keysFunc","symbolsFunc","predicate","resIndex","baseTimes","isIndex","inherited","isArr","isArg","isBuff","isType","skipIndexes","String","isPrototype","nativeKeys","baseHasIn","hasPath","baseFor","createBaseFor","baseIsMatch","getMatchData","matchesStrictComparable","matchData","noCustomizer","objValue","assocIndexOf","pop","LARGE_ARRAY_SIZE","pairs","isMasked","reIsHostCtor","funcProto","reIsNative","coreJsData","maskSrcKey","uid","IE_PROTO","Hash","hash","hashClear","hashDelete","hashGet","hashHas","hashSet","HASH_UNDEFINED","getMapData","equalArrays","equalByTag","equalObjects","argsTag","arrayTag","objectTag","objIsArr","othIsArr","objTag","othTag","objIsObj","othIsObj","isSameTag","objIsWrapped","othIsWrapped","objUnwrapped","othUnwrapped","mapToArray","setToArray","boolTag","dateTag","errorTag","mapTag","numberTag","regexpTag","setTag","stringTag","arrayBufferTag","dataViewTag","symbolValueOf","byteLength","byteOffset","buffer","message","convert","getAllKeys","objProps","objLength","skipCtor","objCtor","othCtor","typedArrayTags","overArg","isStrictComparable","hasIn","baseGet","defaultValue","memoizeCapped","rePropName","reEscapeChar","charCodeAt","quote","subString","memoize","MAX_MEMOIZE_SIZE","FUNC_ERROR_TEXT","resolver","memoized","Cache","hasFunc","baseProperty","basePropertyDeep","fromRight","iterable","eachFunc","collection","arrayAggregator","baseAggregator","baseIteratee","initializer","accumulator","_babel_runtime_helpers_esm_extends__WEBPACK_IMPORTED_MODULE_0__","_babel_runtime_helpers_esm_objectWithoutPropertiesLoose__WEBPACK_IMPORTED_MODULE_1__","react__WEBPACK_IMPORTED_MODULE_2__","react__WEBPACK_IMPORTED_MODULE_2___default","prop_types__WEBPACK_IMPORTED_MODULE_3__","prop_types__WEBPACK_IMPORTED_MODULE_3___default","classnames__WEBPACK_IMPORTED_MODULE_4__","classnames__WEBPACK_IMPORTED_MODULE_4___default","_utils__WEBPACK_IMPORTED_MODULE_5__","className","cssModule","innerRef","CardBody","Tag","attributes","classes","inverse","color","body","outline","Card","CardHeader","moment","conversions","rgb2hsl","rgb2hsv","rgb2hwb","rgb2cmyk","rgb2keyword","rgb2xyz","rgb2lab","rgb2lch","lab2lch","hsl2rgb","hsl2hsv","hsl","hsl2hwb","hsl2cmyk","hsl2keyword","hsv2rgb","hsv2hsl","hsv","sl","v","hsv2hwb","hsv2cmyk","hsv2keyword","hwb2rgb","hwb2hsl","hwb2hsv","hwb2cmyk","hwb2keyword","cmyk2rgb","cmyk2hsl","cmyk2hsv","cmyk2hwb","cmyk2keyword","keyword2rgb","keyword2hsl","keyword2hsv","keyword2hwb","keyword2cmyk","keyword2lab","keyword2xyz","xyz2rgb","xyz2lab","xyz2lch","lab2xyz","lab2rgb","lch2lab","lch2xyz","lch2rgb","rgb","r","g","delta","reverseKeywords","JSON","stringify","z","xyz","t1","t2","t3","hi","f","p","q","hwb","wh","bl","ratio","cmyk","lab","y2","hr","atan2","PI","sqrt","lch","cos","sin","keyword","cssKeywords","aliceblue","antiquewhite","aqua","aquamarine","azure","beige","bisque","black","blanchedalmond","blue","blueviolet","brown","burlywood","cadetblue","chartreuse","chocolate","coral","cornflowerblue","cornsilk","crimson","cyan","darkblue","darkcyan","darkgoldenrod","darkgray","darkgreen","darkgrey","darkkhaki","darkmagenta","darkolivegreen","darkorange","darkorchid","darkred","darksalmon","darkseagreen","darkslateblue","darkslategray","darkslategrey","darkturquoise","darkviolet","deeppink","deepskyblue","dimgray","dimgrey","dodgerblue","firebrick","floralwhite","forestgreen","fuchsia","gainsboro","ghostwhite","gold","goldenrod","gray","green","greenyellow","grey","honeydew","hotpink","indianred","indigo","ivory","khaki","lavender","lavenderblush","lawngreen","lemonchiffon","lightblue","lightcoral","lightcyan","lightgoldenrodyellow","lightgray","lightgreen","lightgrey","lightpink","lightsalmon","lightseagreen","lightskyblue","lightslategray","lightslategrey","lightsteelblue","lightyellow","lime","limegreen","linen","magenta","maroon","mediumaquamarine","mediumblue","mediumorchid","mediumpurple","mediumseagreen","mediumslateblue","mediumspringgreen","mediumturquoise","mediumvioletred","midnightblue","mintcream","mistyrose","moccasin","navajowhite","navy","oldlace","olive","olivedrab","orange","orangered","orchid","palegoldenrod","palegreen","paleturquoise","palevioletred","papayawhip","peachpuff","peru","pink","plum","powderblue","purple","rebeccapurple","red","rosybrown","royalblue","saddlebrown","salmon","sandybrown","seagreen","seashell","sienna","silver","skyblue","slateblue","slategray","slategrey","snow","springgreen","steelblue","tan","teal","thistle","tomato","turquoise","violet","wheat","white","whitesmoke","yellow","yellowgreen","Converter","pair","convs","routeSpace","space","getValues","setValues","vals","fspace","colorConvert","colorName","colorString","getRgba","getHsla","getRgb","rgba","getHsl","hsla","getHwb","getAlpha","hexString","hexDouble","rgbString","alpha","rgbaString","percentString","percentaString","hslString","hslaString","hwbString","reverseNames","hexAlpha","scale","num","str","Color","valid","lightness","whiteness","setSpace","rgbArray","hslArray","hsvArray","hwbArray","cmykArray","rgbaArray","hslaArray","setChannel","hue","saturation","saturationv","blackness","rgbNumber","luminosity","lum","chan","contrast","color2","lum1","lum2","level","contrastRatio","dark","light","negate","lighten","darken","saturate","desaturate","whiten","blacken","greyscale","clearer","opaquer","rotate","degrees","mix","mixinColor","weight","w1","w2","spaces","maxes","capped","chans","sname","svalues","window","chartjsColor","noop","isNullOrUndef","_isFinite","_x","Number","valueOrDefault","valueAtIndexOrDefault","thisArg","each","loopable","reverse","arrayEquals","a0","a1","ilen","v0","v1","klen","_merger","tval","sval","merge","_mergerIf","mergeIf","sources","merger","setFn","inherits","extensions","me","ChartElement","Surrogate","__super__","helpers_core","callCallback","item","fromIndex","getValueOrDefault","getValueAtIndexOrDefault","effects","linear","easeInQuad","easeOutQuad","easeInOutQuad","easeInCubic","easeOutCubic","easeInOutCubic","easeInQuart","easeOutQuart","easeInOutQuart","easeInQuint","easeOutQuint","easeInOutQuint","easeInSine","easeOutSine","easeInOutSine","easeInExpo","easeOutExpo","easeInOutExpo","easeInCirc","easeOutCirc","easeInOutCirc","easeInElastic","asin","easeOutElastic","easeInOutElastic","easeInBack","easeOutBack","easeInOutBack","easeInBounce","easeOutBounce","easeInOutBounce","helpers_easing","easingEffects","RAD_PER_DEG","DOUBLE_PI","HALF_PI","QUARTER_PI","TWO_THIRDS_PI","exports$1","chart","ctx","clearRect","roundedRect","radius","left","top","right","bottom","moveTo","arc","closePath","rect","drawPoint","style","rotation","xOffset","yOffset","cornerRadius","rad","beginPath","lineTo","SQRT1_2","fill","stroke","drawImage","_isPointInArea","area","clipArea","save","clip","unclipArea","restore","previous","flip","stepped","steppedLine","midpoint","tension","bezierCurveTo","controlPointPreviousX","controlPointNextX","controlPointPreviousY","controlPointNextY","helpers_canvas","drawRoundedRectangle","_set","scope","defaultColor","defaultFontColor","defaultFontFamily","defaultFontSize","defaultFontStyle","defaultLineHeight","showLines","core_defaults","helpers_options","toLineHeight","toPadding","_parseFont","globalDefaults","fontSize","font","family","fontFamily","lineHeight","fontStyle","toFontString","inputs","context","helpers$1","easing","canvas","Element","configuration","initialize","hidden","pivot","_view","_model","_start","transition","ease","start","view","actual","origin","c0","c1","interpolate","tooltipPosition","hasValue","core_element","exports$2","currentStep","numSteps","onAnimationProgress","onAnimationComplete","core_animation","animation","onProgress","onComplete","core_animations","animations","request","addAnimation","lazy","startTime","animating","requestAnimationFrame","cancelAnimation","findIndex","requestAnimFrame","startDigest","advance","nextStep","arrayEvents","unlistenArrayEvents","listener","stub","_chartjs","listeners","DatasetController","datasetIndex","datasetElementType","dataElementType","linkScales","addElements","updateIndex","meta","getMeta","getDataset","xAxisID","scales","xAxes","yAxisID","yAxes","getDatasetMeta","getScaleForId","scaleID","_getValueScaleId","_getIndexScaleId","_getValueScale","_getIndexScale","reset","createMetaDataset","_chart","_datasetIndex","createMetaData","_index","metaData","addElementAndReset","updateElement","buildOrUpdateElements","isExtensible","method","resyncElements","easingValue","elements","draw","removeHoverStyle","$previousStyle","setHoverStyle","custom","getHoverColor","backgroundColor","borderColor","borderWidth","hoverBackgroundColor","hoverBorderColor","hoverBorderWidth","numMeta","numData","insertElements","count","onDataPush","onDataPop","onDataShift","onDataSplice","onDataUnshift","core_datasetController","borderAlign","element_arc","inLabelRange","mouseX","vm","hoverRadius","inRange","chartX","chartY","pointRelativePosition","getAngleFromPoint","angle","distance","startAngle","endAngle","betweenAngles","withinRadius","innerRadius","outerRadius","getCenterPoint","halfAngle","halfRadius","getArea","centreAngle","rangeFromCentre","angleMargin","sA","eA","pixelMargin","fillStyle","lineWidth","lineJoin","strokeStyle","valueOrDefault$1","line","borderCapStyle","borderDash","borderDashOffset","borderJoinStyle","capBezierPoints","element_line","currentVM","spanGaps","points","_children","globalOptionLineElements","lastDrawnIndex","_loop","lineCap","setLineDash","lineDashOffset","previousItem","skip","valueOrDefault$2","defaultColor$1","xRange","hitRadius","pointStyle","element_point","mouseY","inXRange","inYRange","padding","chartArea","defaultColor$2","isVertical","getBarBounds","x1","x2","y1","half","swap","orig","v2","parseBorderWidth","maxW","maxH","edge","borderSkipped","horizontal","parseBorderSkipped","_inRange","skipX","skipY","bounds","rectangle","element_rectangle","rects","border","outer","inner","boundingRects","fillRect","Arc","Point","Rectangle","resolve$1","hover","mode","categoryPercentage","barPercentage","gridLines","offsetGridLines","controller_bar","bar","_ruler","getRuler","_resolveElementOptions","_xScale","_yScale","datasetLabel","labels","_updateElementGeometry","vscale","getBasePixel","isHorizontal","ruler","vpixels","calculateBarValuePixels","ipixels","calculateBarIndexPixels","head","center","_getStacks","last","stacks","isDatasetVisible","getStackCount","getStackIndex","stackCount","end","pixels","getPixelForValue","barThickness","prev","curr","ticks","getTicks","getPixelForTick","computeMinSampleSize","imeta","ivalue","getRightValue","minBarLength","controller","range","percent","computeFlexCategoryTraits","thickness","computeFitCategoryTraits","stackIndex","maxBarThickness","Infinity","dataIndex","valueOrDefault$3","resolve$2","tooltips","callbacks","title","dataPoint","xLabel","yLabel","controller_bubble","xScale","yScale","dsIndex","getPixelForDecimal","_options","resolve$3","valueOrDefault$4","animateRotate","animateScale","legendCallback","text","generateLabels","ds","arcOpts","bw","legendItem","cutoutPercentage","circumference","tooltipItem","dataLabel","controller_doughnut","getRingIndex","ringIndex","opts","availableWidth","availableHeight","minSize","arcs","chartWeight","_getRingWeight","contains0","contains90","contains180","contains270","cutout","getMaxBorderWidth","radiusLength","_getVisibleDatasetWeightTotal","offsetX","offsetY","calculateTotal","_getRingWeightOffset","animationOpts","centerX","centerY","calculateCircumference","hoverWidth","ringWeightOffset","dataSetIndex","axis","controller_horizontalBar","valueOrDefault$5","resolve$4","isPointInArea","lineEnabled","showLine","controller_line","lineTension","_scale","_resolveLineOptions","updateBezierControlPoints","lineModel","_resolvePointOptions","calculatePointY","ELEMENT_OPTIONS","elementOptions","dsMeta","sumPos","sumNeg","stackedRightValue","rightValue","controlPoints","capControlPoint","pt","filter","cubicInterpolationMode","splineCurveMonotone","splineCurve","nextItem","halfBorderWidth","resolve$5","angleLines","circular","pointLabels","beginAtZero","controller_polarArea","starts","_starts","angles","_angles","_updateRadius","countVisibleElements","_computeAngle","getVisibleDatasetCount","xCenter","yCenter","datasetStartAngle","getDistanceFromCenterForValue","resetRadius","doughnut","controller_pie","valueOrDefault$6","resolve$6","controller_radar","pointPosition","getPointPositionForValue","bubble","horizontalBar","polarArea","pie","radar","scatter","getRelativePosition","native","parseVisibleItems","handler","jlen","getIntersectItems","getNearestItems","intersect","distanceMetric","minDistance","POSITIVE_INFINITY","nearestItems","getDistanceMetricForAxis","useX","useY","pt1","pt2","deltaX","deltaY","indexMode","items","core_interaction","modes","single","x-axis","nearest","intersectsItem","filterByPosition","where","sortByWeight","_tmpIndex_","addSizeByPosition","boxes","box","layout","core_layouts","addBox","fullWidth","removeBox","layoutItem","configure","layoutOptions","leftPadding","rightPadding","topPadding","bottomPadding","leftBoxes","rightBoxes","topBoxes","bottomBoxes","chartAreaBoxes","maxPadding","verticalBoxes","horizontalBoxes","outerBoxes","chartWidth","chartHeight","chartAreaWidth","verticalBoxWidth","maxChartAreaWidth","maxChartAreaHeight","outerBoxSizes","minBoxSizes","getPadding","boxPadding","findMaxPadding","fitBox","minBoxSize","findNextWhere","scaleMargin","leftPaddingAddition","topPaddingAddition","newMaxChartAreaHeight","newMaxChartAreaWidth","placeBox","minBox","stylesheet","freeze","default","EXPANDO_KEY","CSS_SIZE_MONITOR","CSS_PREFIX","CSS_RENDER_MONITOR","CSS_RENDER_ANIMATION","ANIMATION_START_EVENTS","EVENT_TYPES","touchstart","touchmove","touchend","pointerenter","pointerdown","pointermove","pointerup","pointerleave","pointerout","readUsedSize","getStyle","eventListenerOptions","supports","addEventListener","passive","addListener","removeListener","removeEventListener","createEvent","nativeEvent","createDiv","cls","el","document","addResizeListener","expando","resizer","expand","shrink","appendChild","_reset","scrollLeft","scrollTop","onScroll","bind","createResizer","ticking","throttled","container","maintainAspectRatio","parentNode","clientWidth","proxy","renderProxy","animationName","reflow","offsetParent","classList","watchForRender","insertBefore","firstChild","removeResizeListener","remove","unwatchForRender","removeChild","platform_dom$2","disableCSSInjection","_enabled","_ensureLoaded","_loaded","platform","css","_style","setAttribute","getElementsByTagName","createTextNode","injectCSS","acquireContext","getElementById","getContext","renderHeight","getAttribute","renderWidth","initial","displayWidth","aspectRatio","displayHeight","initCanvas","releaseContext","removeAttribute","proxies","fromNativeEvent","addEvent","removeEvent","implementation","core_plugins","_plugins","_cacheId","register","plugin","unregister","idx","getAll","notify","hook","descriptor","params","descriptors","$plugins","_invalidate","core_scaleService","constructors","registerScaleType","scaleConstructor","scaleDefaults","getScaleConstructor","getScaleDefaults","updateScaleDefaults","additions","addScalesToLayout","valueOrDefault$7","enabled","titleFontStyle","titleSpacing","titleMarginBottom","titleFontColor","titleAlign","bodySpacing","bodyFontColor","bodyAlign","footerFontStyle","footerSpacing","footerMarginTop","footerFontColor","footerAlign","yPadding","xPadding","caretPadding","caretSize","multiKeyBackground","displayColors","beforeTitle","tooltipItems","labelCount","afterTitle","beforeBody","beforeLabel","labelColor","activeElement","labelTextColor","afterLabel","afterBody","beforeFooter","footer","afterFooter","positioners","average","eventPosition","nearestElement","distanceBetweenPoints","tp","pushOrConcat","toPush","splitNewlines","createTooltipItem","indexScale","valueScale","getLabelForIndex","getBaseModel","tooltipOpts","xAlign","yAlign","_bodyFontFamily","bodyFontFamily","_bodyFontStyle","bodyFontStyle","_bodyAlign","bodyFontSize","_titleFontFamily","titleFontFamily","_titleFontStyle","titleFontSize","_titleAlign","_footerFontFamily","footerFontFamily","_footerFontStyle","footerFontSize","_footerAlign","opacity","legendColorBackground","getAlignedX","align","getBeforeAfterBodyLines","exports$3","_lastActive","getTitle","lines","getBeforeBody","getBody","bodyItems","bodyItem","before","after","getAfterBody","getFooter","changed","existingModel","active","_active","alignment","backgroundPoint","tooltipSize","caretX","caretY","labelColors","labelTextColors","_eventPosition","itemSort","dataPoints","tooltip","combinedBodyLength","reduce","titleLineCount","footerLineCount","widthPadding","maxLineWidth","measureText","fontString","getTooltipSize","lf","rf","olf","orf","yf","midX","midY","determineAlignment","paddingAndSize","radiusAndPadding","getBackgroundPoint","drawCaret","tooltipPoint","caretPosition","getCaretPosition","x3","y3","ptX","ptY","drawTitle","textAlign","textBaseline","fillText","drawBody","textColor","drawColorBoxes","xLinePadding","colorX","fillLineOfText","strokeRect","drawFooter","drawBackground","quadraticCurveTo","hasTooltipContent","globalAlpha","handleEvent","getElementsAtEventForMode","positioners_1","core_tooltip","valueOrDefault$8","mergeScaleConfig","slen","mergeConfig","positionIsHorizontal","events","onHover","animationDuration","responsive","responsiveAnimationDuration","Chart","construct","initConfig","_bufferedRender","instances","retinaScale","devicePixelRatio","bindEvents","resize","ensureScalesHaveIDs","buildOrUpdateScales","initToolTip","stop","silent","newWidth","getMaximumWidth","newHeight","getMaximumHeight","newSize","onResize","scalesOptions","scaleOptions","xAxisOptions","yAxisOptions","updated","dtype","dposition","isDefault","scaleType","scaleClass","mergeTicksOptions","hasUpdated","buildOrUpdateControllers","newControllers","destroyDatasetMeta","ControllerClass","resetElements","newOptions","updateConfig","updateLayout","updateDatasets","lastActive","_bufferedRequest","updateDataset","animationOptions","animationObject","easingFunction","stepDecimal","drawDatasets","_drawTooltip","drawDataset","getElementsAtXAxis","_meta","generateLegend","unbindEvents","toBase64Image","toDataURL","_chartInstance","_listeners","eventHandler","updateHoverStyle","bufferedRequest","hoverOptions","core_controller","abstract","DateAdapter","Controller","scaleMerge","parse","_create","override","members","core_adapters","_date","core_ticks","formatters","tickValue","logDelta","log10","tickString","maxTick","logTick","toExponential","numDecimal","logarithmic","remain","valueOrDefault$9","labelsFromTicks","computeTextSize","tick","longestText","drawBorder","drawOnChartArea","drawTicks","tickMarkLength","zeroLineWidth","zeroLineColor","zeroLineBorderDash","zeroLineBorderDashOffset","scaleLabel","labelString","minRotation","maxRotation","mirror","autoSkip","autoSkipPadding","labelOffset","minor","major","core_scale","paddingLeft","paddingTop","paddingRight","paddingBottom","_ticks","beforeUpdate","maxWidth","maxHeight","margins","_maxLabelLines","longestLabelWidth","longestTextCache","beforeSetDimensions","setDimensions","afterSetDimensions","beforeDataLimits","determineDataLimits","afterDataLimits","beforeBuildTicks","buildTicks","afterBuildTicks","beforeTickToLabelConversion","convertTicksToLabels","afterTickToLabelConversion","beforeCalculateTickRotation","calculateTickRotation","afterCalculateTickRotation","beforeFit","fit","afterFit","afterUpdate","tickOpts","userCallback","tickFont","labelRotation","cosRotation","originalLabelWidth","labelWidth","tickWidth","angleRadians","toRadians","scaleLabelOpts","gridLineOpts","_isVisible","parseFont","isFullWidth","scaleLabelFont","scaleLabelPadding","deltaHeight","largestTextWidth","tallestLabelHeightInLines","numberOfLabelLines","lineSpace","tickPadding","sinRotation","labelHeight","firstLabelWidth","lastLabelWidth","offsetLeft","offsetRight","handleMargins","rawValue","getValueForPixel","innerWidth","pixel","finalVal","innerHeight","decimal","valueOffset","getBaseValue","_autoSkip","optionTicks","tickCount","skipRatio","maxTicks","maxTicksLimit","ticksLength","_tickSize","axisLength","PaddingBottom","rot","borderValue","tickStart","tickEnd","optionMajorTicks","isRotated","isMirrored","tickFontColor","fontColor","majorTickFontColor","majorTickFont","tl","scaleLabelFontColor","labelRotationRadians","itemsToDraw","axisWidth","alignPixel","_alignPixel","lineColor","tx1","ty1","tx2","ty2","labelX","labelY","textOffset","zeroLineIndex","lineValue","getPixelForGridLine","labelYOffset","labelXOffset","glWidth","glColor","glBorderDash","glBorderDashOffset","itemToDraw","translate","scaleLabelX","scaleLabelY","halfLineHeight","isLeft","firstLineWidth","lastLineWidth","scale_category","getLabels","xLabels","yLabels","minIndex","maxIndex","valueCategory","offsetAmt","valueWidth","widthOffset","valueHeight","heightOffset","horz","valueDimension","_defaults","scale_linearbase","handleTickRangeOptions","minSign","maxSign","setMin","suggestedMin","setMax","suggestedMax","getTickLimit","stepSize","_computeTickLimit","handleDirectionalChanges","numericGeneratorOptions","precision","fixedStepSize","generationOptions","dataRange","factor","niceMin","niceMax","numSpaces","maxNumSpaces","rmin","rmax","spacing","niceNum","_decimalPlaces","almostWhole","almostEquals","generateTicks","ticksAsNumbers","defaultConfig$1","scale_linear","IDMatches","hasStacks","valuesPerStack","positiveValues","negativeValues","relativePoints","valuesForType","minVal","maxVal","innerDimension","_defaults$1","valueOrDefault$a","defaultConfig$2","nonNegativeOrDefault","scale_logarithmic","minNotZero","exp","significand","tickVal","endExp","endSignificand","lastTick","generateTicks$1","tickValues","_getFirstTickValue","firstTickValue","_defaults$2","valueOrDefault$b","valueAtIndexOrDefault$1","resolve$7","defaultConfig$3","animate","showLabelBackdrop","backdropColor","backdropPaddingY","backdropPaddingX","getValueCount","getTickBackdropHeight","determineLimits","getTextAlignForAngle","adjustPointPositionForLabelHeight","textSize","numberOrZero","param","scale_radialLinear","drawingArea","NEGATIVE_INFINITY","plFont","furthestLimits","furthestAngles","_pointLabelSizes","valueCount","getPointPosition","getIndexAngle","toDegrees","hLimits","vLimits","setReductions","fitWithPointLabels","setCenterPoint","largestPossibleRadius","radiusReductionLeft","radiusReductionRight","radiusReductionTop","radiusReductionBottom","leftMovement","rightMovement","topMovement","bottomMovement","maxRight","maxLeft","maxTop","maxBottom","angleMultiplier","startAngleRadians","scalingFactor","distanceFromCenter","thisAngle","getBasePosition","angleLineOpts","pointLabelOpts","tickBackdropHeight","outerDistance","outerPosition","extra","pointLabelPosition","pointLabelFontColor","drawPointLabels","yCenterOffset","drawRadiusLine","_defaults$3","valueOrDefault$c","MIN_INTEGER","MIN_SAFE_INTEGER","MAX_INTEGER","INTERVALS","common","steps","UNITS","sorter","arrayUnique","interpolate$1","table","skey","tkey","mid","i0","i1","lo","lookup","span","toTimestamp","adapter","_adapter","parser","determineMajorUnit","generate","capacity","timeOpts","minUnit","interval","determineUnitForAutoTicks","unitStepSize","majorTicksEnabled","first","determineStepSize","scale_time","adapters","displayFormats","timestamp","timestamps","dataLabels","_horizontal","_table","_timestamps","getLabelCapacity","_unit","determineUnitForFormatting","_majorUnit","distribution","buildLookupTable","_offsets","computeOffsets","majorUnit","ticksFromTimestamps","tooltipFormat","datetime","tickFormatFunction","minorFormat","majorFormat","majorTime","majorTickOpts","formatter","getPixelForOffset","isReverse","getLabelWidth","ticksOpts","tickLabelWidth","tickFontSize","exampleTime","exampleLabel","_defaults$4","displayFormat","category","radialLinear","FORMATS","_id","_format","amount","filler","propagate","mappers","visible","boundary","decodeFill","computeBoundary","scaleBottom","scaleTop","scaleZero","resolveTarget","visited","createMapper","isDrawable","drawArea","curve0","curve1","len0","len1","plugin_filler","afterDatasetsUpdate","$filler","mapper","beforeDatasetDraw","loop","p0","d0","d1","doFill","noop$1","valueOrDefault$d","getBoxWidth","labelOpts","usePointStyle","boxWidth","ci","onLeave","lineDash","Legend","legendHitBoxes","_hoveredItem","doughnutMode","beforeBuildLabels","buildLabels","afterBuildLabels","legendItems","labelFont","hitboxes","lineWidths","totalHeight","vPadding","columnWidths","totalWidth","currentColWidth","currentColHeight","itemHeight","itemWidth","lineDefault","legendWidth","cursor","textWidth","SQRT2","drawLegendBox","halfFontSize","xLeft","yMiddle","_getLegendItemAt","hitBox","lh","hoveredItem","createNewLegendAndAttach","legendOpts","plugin_legend","_element","beforeInit","afterEvent","noop$2","Title","lineCount","fontOpts","titleX","titleY","createNewTitleBlockAndAttach","titleOpts","titleBlock","parseMaxStyle","styleValue","parentProperty","valueInPixels","isConstrainedValue","getConstraintDimension","domNode","maxStyle","percentageProperty","defaultView","_getParentNode","constrainedNode","getComputedStyle","constrainedContainer","hasCNode","hasCContainer","infinity","filterCallback","filtered","arrayToSearch","startIndex","currentItem","findPreviousWhere","epsilon","rounded","exponent","log","LOG10E","powerOf10","isPowerOf10","radians","centrePoint","anglePoint","distanceFromXCenter","distanceFromYCenter","radialDistanceFromCenter","aliasPixel","pixelWidth","currentDevicePixelRatio","halfWidth","firstPoint","middlePoint","afterPoint","d01","d12","s01","s12","fa","fb","EPSILON","pointBefore","pointCurrent","pointAfter","alphaK","betaK","tauK","squaredMagnitude","pointsWithTangents","deltaK","mK","pointsLen","slopeDeltaX","fraction","webkitRequestAnimationFrame","mozRequestAnimationFrame","oRequestAnimationFrame","msRequestAnimationFrame","setTimeout","evt","originalEvent","srcElement","boundingRect","getBoundingClientRect","touches","clientX","clientY","getConstraintWidth","getConstraintHeight","_calculatePadding","parentDimension","parent","host","cw","clientHeight","ch","currentStyle","getPropertyValue","forceRatio","pixelRatio","pixelSize","arrayOfThings","gc","garbageCollect","longest","thing","nestedThing","gcLen","numberOfLines","CanvasGradient","colorValue","CanvasPattern","core_helpers","_adapters","Animation","animationService","Interaction","layouts","Scale","scaleService","Ticks","Tooltip","src","pluginService","PluginBase","canvasHelpers","layoutService","LinearScaleBase","klass","cfg"],"mappings":"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","file":"static/js/8.ac10a207.chunk.js","sourcesContent":["var freeGlobal = require('./_freeGlobal');\n/** Detect free variable `self`. */\n\n\nvar freeSelf = typeof self == 'object' && self && self.Object === Object && self;\n/** Used as a reference to the global object. */\n\nvar root = freeGlobal || freeSelf || Function('return this')();\nmodule.exports = root;","/**\n * Checks if `value` is object-like. A value is object-like if it's not `null`\n * and has a `typeof` result of \"object\".\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is object-like, else `false`.\n * @example\n *\n * _.isObjectLike({});\n * // => true\n *\n * _.isObjectLike([1, 2, 3]);\n * // => true\n *\n * _.isObjectLike(_.noop);\n * // => false\n *\n * _.isObjectLike(null);\n * // => false\n */\nfunction isObjectLike(value) {\n  return value != null && typeof value == 'object';\n}\n\nmodule.exports = isObjectLike;","var Symbol = require('./_Symbol'),\n    getRawTag = require('./_getRawTag'),\n    objectToString = require('./_objectToString');\n/** `Object#toString` result references. */\n\n\nvar nullTag = '[object Null]',\n    undefinedTag = '[object Undefined]';\n/** Built-in value references. */\n\nvar symToStringTag = Symbol ? Symbol.toStringTag : undefined;\n/**\n * The base implementation of `getTag` without fallbacks for buggy environments.\n *\n * @private\n * @param {*} value The value to query.\n * @returns {string} Returns the `toStringTag`.\n */\n\nfunction baseGetTag(value) {\n  if (value == null) {\n    return value === undefined ? undefinedTag : nullTag;\n  }\n\n  return symToStringTag && symToStringTag in Object(value) ? getRawTag(value) : objectToString(value);\n}\n\nmodule.exports = baseGetTag;","/**\n * Checks if `value` is the\n * [language type](http://www.ecma-international.org/ecma-262/7.0/#sec-ecmascript-language-types)\n * of `Object`. (e.g. arrays, functions, objects, regexes, `new Number(0)`, and `new String('')`)\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is an object, else `false`.\n * @example\n *\n * _.isObject({});\n * // => true\n *\n * _.isObject([1, 2, 3]);\n * // => true\n *\n * _.isObject(_.noop);\n * // => true\n *\n * _.isObject(null);\n * // => false\n */\nfunction isObject(value) {\n  var type = typeof value;\n  return value != null && (type == 'object' || type == 'function');\n}\n\nmodule.exports = isObject;","var baseIsNative = require('./_baseIsNative'),\n    getValue = require('./_getValue');\n/**\n * Gets the native function at `key` of `object`.\n *\n * @private\n * @param {Object} object The object to query.\n * @param {string} key The key of the method to get.\n * @returns {*} Returns the function if it's native, else `undefined`.\n */\n\n\nfunction getNative(object, key) {\n  var value = getValue(object, key);\n  return baseIsNative(value) ? value : undefined;\n}\n\nmodule.exports = getNative;","var root = require('./_root');\n/** Built-in value references. */\n\n\nvar Symbol = root.Symbol;\nmodule.exports = Symbol;","var baseGetTag = require('./_baseGetTag'),\n    isObject = require('./isObject');\n/** `Object#toString` result references. */\n\n\nvar asyncTag = '[object AsyncFunction]',\n    funcTag = '[object Function]',\n    genTag = '[object GeneratorFunction]',\n    proxyTag = '[object Proxy]';\n/**\n * Checks if `value` is classified as a `Function` object.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a function, else `false`.\n * @example\n *\n * _.isFunction(_);\n * // => true\n *\n * _.isFunction(/abc/);\n * // => false\n */\n\nfunction isFunction(value) {\n  if (!isObject(value)) {\n    return false;\n  } // The use of `Object#toString` avoids issues with the `typeof` operator\n  // in Safari 9 which returns 'object' for typed arrays and other constructors.\n\n\n  var tag = baseGetTag(value);\n  return tag == funcTag || tag == genTag || tag == asyncTag || tag == proxyTag;\n}\n\nmodule.exports = isFunction;","var _extends = Object.assign || function (target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i];\n\n    for (var key in source) {\n      if (Object.prototype.hasOwnProperty.call(source, key)) {\n        target[key] = source[key];\n      }\n    }\n  }\n\n  return target;\n};\n\nfunction _objectWithoutProperties(obj, keys) {\n  var target = {};\n\n  for (var i in obj) {\n    if (keys.indexOf(i) >= 0) continue;\n    if (!Object.prototype.hasOwnProperty.call(obj, i)) continue;\n    target[i] = obj[i];\n  }\n\n  return target;\n}\n\nfunction _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\n\nfunction _possibleConstructorReturn(self, call) {\n  if (!self) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n\n  return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self;\n}\n\nfunction _inherits(subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass);\n  }\n\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      enumerable: false,\n      writable: true,\n      configurable: true\n    }\n  });\n  if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;\n}\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport Chart from 'chart.js';\nimport isEqual from 'lodash/isEqual';\nimport keyBy from 'lodash/keyBy';\nvar NODE_ENV = typeof process !== 'undefined' && process.env && process.env.NODE_ENV;\n\nvar ChartComponent = function (_React$Component) {\n  _inherits(ChartComponent, _React$Component);\n\n  function ChartComponent() {\n    var _temp, _this, _ret;\n\n    _classCallCheck(this, ChartComponent);\n\n    for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    return _ret = (_temp = (_this = _possibleConstructorReturn(this, _React$Component.call.apply(_React$Component, [this].concat(args))), _this), _this.handleOnClick = function (event) {\n      var instance = _this.chartInstance;\n      var _this$props = _this.props,\n          getDatasetAtEvent = _this$props.getDatasetAtEvent,\n          getElementAtEvent = _this$props.getElementAtEvent,\n          getElementsAtEvent = _this$props.getElementsAtEvent,\n          onElementsClick = _this$props.onElementsClick;\n      getDatasetAtEvent && getDatasetAtEvent(instance.getDatasetAtEvent(event), event);\n      getElementAtEvent && getElementAtEvent(instance.getElementAtEvent(event), event);\n      getElementsAtEvent && getElementsAtEvent(instance.getElementsAtEvent(event), event);\n      onElementsClick && onElementsClick(instance.getElementsAtEvent(event), event); // Backward compatibility\n    }, _this.ref = function (element) {\n      _this.element = element;\n    }, _temp), _possibleConstructorReturn(_this, _ret);\n  }\n\n  ChartComponent.prototype.componentWillMount = function componentWillMount() {\n    this.chartInstance = undefined;\n  };\n\n  ChartComponent.prototype.componentDidMount = function componentDidMount() {\n    this.renderChart();\n  };\n\n  ChartComponent.prototype.componentDidUpdate = function componentDidUpdate() {\n    if (this.props.redraw) {\n      this.destroyChart();\n      this.renderChart();\n      return;\n    }\n\n    this.updateChart();\n  };\n\n  ChartComponent.prototype.shouldComponentUpdate = function shouldComponentUpdate(nextProps) {\n    var _props = this.props,\n        redraw = _props.redraw,\n        type = _props.type,\n        options = _props.options,\n        plugins = _props.plugins,\n        legend = _props.legend,\n        height = _props.height,\n        width = _props.width;\n\n    if (nextProps.redraw === true) {\n      return true;\n    }\n\n    if (height !== nextProps.height || width !== nextProps.width) {\n      return true;\n    }\n\n    if (type !== nextProps.type) {\n      return true;\n    }\n\n    if (!isEqual(legend, nextProps.legend)) {\n      return true;\n    }\n\n    if (!isEqual(options, nextProps.options)) {\n      return true;\n    }\n\n    var nextData = this.transformDataProp(nextProps);\n\n    if (!isEqual(this.shadowDataProp, nextData)) {\n      return true;\n    }\n\n    return !isEqual(plugins, nextProps.plugins);\n  };\n\n  ChartComponent.prototype.componentWillUnmount = function componentWillUnmount() {\n    this.destroyChart();\n  };\n\n  ChartComponent.prototype.transformDataProp = function transformDataProp(props) {\n    var data = props.data;\n\n    if (typeof data == 'function') {\n      var node = this.element;\n      return data(node);\n    } else {\n      return data;\n    }\n  }; // Chart.js directly mutates the data.dataset objects by adding _meta proprerty\n  // this makes impossible to compare the current and next data changes\n  // therefore we memoize the data prop while sending a fake to Chart.js for mutation.\n  // see https://github.com/chartjs/Chart.js/blob/master/src/core/core.controller.js#L615-L617\n\n\n  ChartComponent.prototype.memoizeDataProps = function memoizeDataProps() {\n    if (!this.props.data) {\n      return;\n    }\n\n    var data = this.transformDataProp(this.props);\n    this.shadowDataProp = _extends({}, data, {\n      datasets: data.datasets && data.datasets.map(function (set) {\n        return _extends({}, set);\n      })\n    });\n    this.saveCurrentDatasets(); // to remove the dataset metadata from this chart when the chart is destroyed\n\n    return data;\n  };\n\n  ChartComponent.prototype.checkDatasets = function checkDatasets(datasets) {\n    var isDev = NODE_ENV !== 'production' && NODE_ENV !== 'prod';\n    var usingCustomKeyProvider = this.props.datasetKeyProvider !== ChartComponent.getLabelAsKey;\n    var multipleDatasets = datasets.length > 1;\n\n    if (isDev && multipleDatasets && !usingCustomKeyProvider) {\n      var shouldWarn = false;\n      datasets.forEach(function (dataset) {\n        if (!dataset.label) {\n          shouldWarn = true;\n        }\n      });\n\n      if (shouldWarn) {\n        console.error('[react-chartjs-2] Warning: Each dataset needs a unique key. By default, the \"label\" property on each dataset is used. Alternatively, you may provide a \"datasetKeyProvider\" as a prop that returns a unique key.');\n      }\n    }\n  };\n\n  ChartComponent.prototype.getCurrentDatasets = function getCurrentDatasets() {\n    return this.chartInstance && this.chartInstance.config.data && this.chartInstance.config.data.datasets || [];\n  };\n\n  ChartComponent.prototype.saveCurrentDatasets = function saveCurrentDatasets() {\n    var _this2 = this;\n\n    this.datasets = this.datasets || {};\n    var currentDatasets = this.getCurrentDatasets();\n    currentDatasets.forEach(function (d) {\n      _this2.datasets[_this2.props.datasetKeyProvider(d)] = d;\n    });\n  };\n\n  ChartComponent.prototype.updateChart = function updateChart() {\n    var _this3 = this;\n\n    var options = this.props.options;\n    var data = this.memoizeDataProps(this.props);\n    if (!this.chartInstance) return;\n\n    if (options) {\n      this.chartInstance.options = Chart.helpers.configMerge(this.chartInstance.options, options);\n    } // Pipe datasets to chart instance datasets enabling\n    // seamless transitions\n\n\n    var currentDatasets = this.getCurrentDatasets();\n    var nextDatasets = data.datasets || [];\n    this.checkDatasets(currentDatasets);\n    var currentDatasetsIndexed = keyBy(currentDatasets, this.props.datasetKeyProvider); // We can safely replace the dataset array, as long as we retain the _meta property\n    // on each dataset.\n\n    this.chartInstance.config.data.datasets = nextDatasets.map(function (next) {\n      var current = currentDatasetsIndexed[_this3.props.datasetKeyProvider(next)];\n\n      if (current && current.type === next.type) {\n        // The data array must be edited in place. As chart.js adds listeners to it.\n        current.data.splice(next.data.length);\n        next.data.forEach(function (point, pid) {\n          current.data[pid] = next.data[pid];\n        });\n\n        var _data = next.data,\n            otherProps = _objectWithoutProperties(next, ['data']); // Merge properties. Notice a weakness here. If a property is removed\n        // from next, it will be retained by current and never disappears.\n        // Workaround is to set value to null or undefined in next.\n\n\n        return _extends({}, current, otherProps);\n      } else {\n        return next;\n      }\n    });\n\n    var datasets = data.datasets,\n        rest = _objectWithoutProperties(data, ['datasets']);\n\n    this.chartInstance.config.data = _extends({}, this.chartInstance.config.data, rest);\n    this.chartInstance.update();\n  };\n\n  ChartComponent.prototype.renderChart = function renderChart() {\n    var _props2 = this.props,\n        options = _props2.options,\n        legend = _props2.legend,\n        type = _props2.type,\n        plugins = _props2.plugins;\n    var node = this.element;\n    var data = this.memoizeDataProps();\n\n    if (typeof legend !== 'undefined' && !isEqual(ChartComponent.defaultProps.legend, legend)) {\n      options.legend = legend;\n    }\n\n    this.chartInstance = new Chart(node, {\n      type: type,\n      data: data,\n      options: options,\n      plugins: plugins\n    });\n  };\n\n  ChartComponent.prototype.destroyChart = function destroyChart() {\n    // Put all of the datasets that have existed in the chart back on the chart\n    // so that the metadata associated with this chart get destroyed.\n    // This allows the datasets to be used in another chart. This can happen,\n    // for example, in a tabbed UI where the chart gets created each time the\n    // tab gets switched to the chart and uses the same data).\n    this.saveCurrentDatasets();\n    var datasets = Object.values(this.datasets);\n    this.chartInstance.config.data.datasets = datasets;\n    this.chartInstance.destroy();\n  };\n\n  ChartComponent.prototype.render = function render() {\n    var _props3 = this.props,\n        height = _props3.height,\n        width = _props3.width,\n        id = _props3.id;\n    return React.createElement('canvas', {\n      ref: this.ref,\n      height: height,\n      width: width,\n      id: id,\n      onClick: this.handleOnClick\n    });\n  };\n\n  return ChartComponent;\n}(React.Component);\n\nChartComponent.getLabelAsKey = function (d) {\n  return d.label;\n};\n\nChartComponent.propTypes = {\n  data: PropTypes.oneOfType([PropTypes.object, PropTypes.func]).isRequired,\n  getDatasetAtEvent: PropTypes.func,\n  getElementAtEvent: PropTypes.func,\n  getElementsAtEvent: PropTypes.func,\n  height: PropTypes.number,\n  legend: PropTypes.object,\n  onElementsClick: PropTypes.func,\n  options: PropTypes.object,\n  plugins: PropTypes.arrayOf(PropTypes.object),\n  redraw: PropTypes.bool,\n  type: function type(props, propName, componentName) {\n    if (!Chart.controllers[props[propName]]) {\n      return new Error('Invalid chart type `' + props[propName] + '` supplied to' + ' `' + componentName + '`.');\n    }\n  },\n  width: PropTypes.number,\n  datasetKeyProvider: PropTypes.func\n};\nChartComponent.defaultProps = {\n  legend: {\n    display: true,\n    position: 'bottom'\n  },\n  type: 'doughnut',\n  height: 150,\n  width: 300,\n  redraw: false,\n  options: {},\n  datasetKeyProvider: ChartComponent.getLabelAsKey\n};\nexport default ChartComponent;\nexport var Doughnut = function (_React$Component2) {\n  _inherits(Doughnut, _React$Component2);\n\n  function Doughnut() {\n    _classCallCheck(this, Doughnut);\n\n    return _possibleConstructorReturn(this, _React$Component2.apply(this, arguments));\n  }\n\n  Doughnut.prototype.render = function render() {\n    var _this5 = this;\n\n    return React.createElement(ChartComponent, _extends({}, this.props, {\n      ref: function ref(_ref) {\n        return _this5.chartInstance = _ref && _ref.chartInstance;\n      },\n      type: 'doughnut'\n    }));\n  };\n\n  return Doughnut;\n}(React.Component);\nexport var Pie = function (_React$Component3) {\n  _inherits(Pie, _React$Component3);\n\n  function Pie() {\n    _classCallCheck(this, Pie);\n\n    return _possibleConstructorReturn(this, _React$Component3.apply(this, arguments));\n  }\n\n  Pie.prototype.render = function render() {\n    var _this7 = this;\n\n    return React.createElement(ChartComponent, _extends({}, this.props, {\n      ref: function ref(_ref2) {\n        return _this7.chartInstance = _ref2 && _ref2.chartInstance;\n      },\n      type: 'pie'\n    }));\n  };\n\n  return Pie;\n}(React.Component);\nexport var Line = function (_React$Component4) {\n  _inherits(Line, _React$Component4);\n\n  function Line() {\n    _classCallCheck(this, Line);\n\n    return _possibleConstructorReturn(this, _React$Component4.apply(this, arguments));\n  }\n\n  Line.prototype.render = function render() {\n    var _this9 = this;\n\n    return React.createElement(ChartComponent, _extends({}, this.props, {\n      ref: function ref(_ref3) {\n        return _this9.chartInstance = _ref3 && _ref3.chartInstance;\n      },\n      type: 'line'\n    }));\n  };\n\n  return Line;\n}(React.Component);\nexport var Bar = function (_React$Component5) {\n  _inherits(Bar, _React$Component5);\n\n  function Bar() {\n    _classCallCheck(this, Bar);\n\n    return _possibleConstructorReturn(this, _React$Component5.apply(this, arguments));\n  }\n\n  Bar.prototype.render = function render() {\n    var _this11 = this;\n\n    return React.createElement(ChartComponent, _extends({}, this.props, {\n      ref: function ref(_ref4) {\n        return _this11.chartInstance = _ref4 && _ref4.chartInstance;\n      },\n      type: 'bar'\n    }));\n  };\n\n  return Bar;\n}(React.Component);\nexport var HorizontalBar = function (_React$Component6) {\n  _inherits(HorizontalBar, _React$Component6);\n\n  function HorizontalBar() {\n    _classCallCheck(this, HorizontalBar);\n\n    return _possibleConstructorReturn(this, _React$Component6.apply(this, arguments));\n  }\n\n  HorizontalBar.prototype.render = function render() {\n    var _this13 = this;\n\n    return React.createElement(ChartComponent, _extends({}, this.props, {\n      ref: function ref(_ref5) {\n        return _this13.chartInstance = _ref5 && _ref5.chartInstance;\n      },\n      type: 'horizontalBar'\n    }));\n  };\n\n  return HorizontalBar;\n}(React.Component);\nexport var Radar = function (_React$Component7) {\n  _inherits(Radar, _React$Component7);\n\n  function Radar() {\n    _classCallCheck(this, Radar);\n\n    return _possibleConstructorReturn(this, _React$Component7.apply(this, arguments));\n  }\n\n  Radar.prototype.render = function render() {\n    var _this15 = this;\n\n    return React.createElement(ChartComponent, _extends({}, this.props, {\n      ref: function ref(_ref6) {\n        return _this15.chartInstance = _ref6 && _ref6.chartInstance;\n      },\n      type: 'radar'\n    }));\n  };\n\n  return Radar;\n}(React.Component);\nexport var Polar = function (_React$Component8) {\n  _inherits(Polar, _React$Component8);\n\n  function Polar() {\n    _classCallCheck(this, Polar);\n\n    return _possibleConstructorReturn(this, _React$Component8.apply(this, arguments));\n  }\n\n  Polar.prototype.render = function render() {\n    var _this17 = this;\n\n    return React.createElement(ChartComponent, _extends({}, this.props, {\n      ref: function ref(_ref7) {\n        return _this17.chartInstance = _ref7 && _ref7.chartInstance;\n      },\n      type: 'polarArea'\n    }));\n  };\n\n  return Polar;\n}(React.Component);\nexport var Bubble = function (_React$Component9) {\n  _inherits(Bubble, _React$Component9);\n\n  function Bubble() {\n    _classCallCheck(this, Bubble);\n\n    return _possibleConstructorReturn(this, _React$Component9.apply(this, arguments));\n  }\n\n  Bubble.prototype.render = function render() {\n    var _this19 = this;\n\n    return React.createElement(ChartComponent, _extends({}, this.props, {\n      ref: function ref(_ref8) {\n        return _this19.chartInstance = _ref8 && _ref8.chartInstance;\n      },\n      type: 'bubble'\n    }));\n  };\n\n  return Bubble;\n}(React.Component);\nexport var Scatter = function (_React$Component10) {\n  _inherits(Scatter, _React$Component10);\n\n  function Scatter() {\n    _classCallCheck(this, Scatter);\n\n    return _possibleConstructorReturn(this, _React$Component10.apply(this, arguments));\n  }\n\n  Scatter.prototype.render = function render() {\n    var _this21 = this;\n\n    return React.createElement(ChartComponent, _extends({}, this.props, {\n      ref: function ref(_ref9) {\n        return _this21.chartInstance = _ref9 && _ref9.chartInstance;\n      },\n      type: 'scatter'\n    }));\n  };\n\n  return Scatter;\n}(React.Component);\nexport var defaults = Chart.defaults;\nexport { Chart };","var baseGetTag = require('./_baseGetTag'),\n    isObjectLike = require('./isObjectLike');\n/** `Object#toString` result references. */\n\n\nvar symbolTag = '[object Symbol]';\n/**\n * Checks if `value` is classified as a `Symbol` primitive or object.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a symbol, else `false`.\n * @example\n *\n * _.isSymbol(Symbol.iterator);\n * // => true\n *\n * _.isSymbol('abc');\n * // => false\n */\n\nfunction isSymbol(value) {\n  return typeof value == 'symbol' || isObjectLike(value) && baseGetTag(value) == symbolTag;\n}\n\nmodule.exports = isSymbol;","var arrayLikeKeys = require('./_arrayLikeKeys'),\n    baseKeys = require('./_baseKeys'),\n    isArrayLike = require('./isArrayLike');\n/**\n * Creates an array of the own enumerable property names of `object`.\n *\n * **Note:** Non-object values are coerced to objects. See the\n * [ES spec](http://ecma-international.org/ecma-262/7.0/#sec-object.keys)\n * for more details.\n *\n * @static\n * @since 0.1.0\n * @memberOf _\n * @category Object\n * @param {Object} object The object to query.\n * @returns {Array} Returns the array of property names.\n * @example\n *\n * function Foo() {\n *   this.a = 1;\n *   this.b = 2;\n * }\n *\n * Foo.prototype.c = 3;\n *\n * _.keys(new Foo);\n * // => ['a', 'b'] (iteration order is not guaranteed)\n *\n * _.keys('hi');\n * // => ['0', '1']\n */\n\n\nfunction keys(object) {\n  return isArrayLike(object) ? arrayLikeKeys(object) : baseKeys(object);\n}\n\nmodule.exports = keys;","module.exports = function (module) {\n  if (!module.webpackPolyfill) {\n    module.deprecate = function () {};\n\n    module.paths = []; // module.parent = undefined by default\n\n    if (!module.children) module.children = [];\n    Object.defineProperty(module, \"loaded\", {\n      enumerable: true,\n      get: function get() {\n        return module.l;\n      }\n    });\n    Object.defineProperty(module, \"id\", {\n      enumerable: true,\n      get: function get() {\n        return module.i;\n      }\n    });\n    module.webpackPolyfill = 1;\n  }\n\n  return module;\n};","var isFunction = require('./isFunction'),\n    isLength = require('./isLength');\n/**\n * Checks if `value` is array-like. A value is considered array-like if it's\n * not a function and has a `value.length` that's an integer greater than or\n * equal to `0` and less than or equal to `Number.MAX_SAFE_INTEGER`.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is array-like, else `false`.\n * @example\n *\n * _.isArrayLike([1, 2, 3]);\n * // => true\n *\n * _.isArrayLike(document.body.children);\n * // => true\n *\n * _.isArrayLike('abc');\n * // => true\n *\n * _.isArrayLike(_.noop);\n * // => false\n */\n\n\nfunction isArrayLike(value) {\n  return value != null && isLength(value.length) && !isFunction(value);\n}\n\nmodule.exports = isArrayLike;","var isSymbol = require('./isSymbol');\n/** Used as references for various `Number` constants. */\n\n\nvar INFINITY = 1 / 0;\n/**\n * Converts `value` to a string key if it's not a string or symbol.\n *\n * @private\n * @param {*} value The value to inspect.\n * @returns {string|symbol} Returns the key.\n */\n\nfunction toKey(value) {\n  if (typeof value == 'string' || isSymbol(value)) {\n    return value;\n  }\n\n  var result = value + '';\n  return result == '0' && 1 / value == -INFINITY ? '-0' : result;\n}\n\nmodule.exports = toKey;","//! moment.js\n;\n\n(function (global, factory) {\n  typeof exports === 'object' && typeof module !== 'undefined' ? module.exports = factory() : typeof define === 'function' && define.amd ? define(factory) : global.moment = factory();\n})(this, function () {\n  'use strict';\n\n  var hookCallback;\n\n  function hooks() {\n    return hookCallback.apply(null, arguments);\n  } // This is done to register the method called with moment()\n  // without creating circular dependencies.\n\n\n  function setHookCallback(callback) {\n    hookCallback = callback;\n  }\n\n  function isArray(input) {\n    return input instanceof Array || Object.prototype.toString.call(input) === '[object Array]';\n  }\n\n  function isObject(input) {\n    // IE8 will treat undefined and null as object if it wasn't for\n    // input != null\n    return input != null && Object.prototype.toString.call(input) === '[object Object]';\n  }\n\n  function isObjectEmpty(obj) {\n    if (Object.getOwnPropertyNames) {\n      return Object.getOwnPropertyNames(obj).length === 0;\n    } else {\n      var k;\n\n      for (k in obj) {\n        if (obj.hasOwnProperty(k)) {\n          return false;\n        }\n      }\n\n      return true;\n    }\n  }\n\n  function isUndefined(input) {\n    return input === void 0;\n  }\n\n  function isNumber(input) {\n    return typeof input === 'number' || Object.prototype.toString.call(input) === '[object Number]';\n  }\n\n  function isDate(input) {\n    return input instanceof Date || Object.prototype.toString.call(input) === '[object Date]';\n  }\n\n  function map(arr, fn) {\n    var res = [],\n        i;\n\n    for (i = 0; i < arr.length; ++i) {\n      res.push(fn(arr[i], i));\n    }\n\n    return res;\n  }\n\n  function hasOwnProp(a, b) {\n    return Object.prototype.hasOwnProperty.call(a, b);\n  }\n\n  function extend(a, b) {\n    for (var i in b) {\n      if (hasOwnProp(b, i)) {\n        a[i] = b[i];\n      }\n    }\n\n    if (hasOwnProp(b, 'toString')) {\n      a.toString = b.toString;\n    }\n\n    if (hasOwnProp(b, 'valueOf')) {\n      a.valueOf = b.valueOf;\n    }\n\n    return a;\n  }\n\n  function createUTC(input, format, locale, strict) {\n    return createLocalOrUTC(input, format, locale, strict, true).utc();\n  }\n\n  function defaultParsingFlags() {\n    // We need to deep clone this object.\n    return {\n      empty: false,\n      unusedTokens: [],\n      unusedInput: [],\n      overflow: -2,\n      charsLeftOver: 0,\n      nullInput: false,\n      invalidMonth: null,\n      invalidFormat: false,\n      userInvalidated: false,\n      iso: false,\n      parsedDateParts: [],\n      meridiem: null,\n      rfc2822: false,\n      weekdayMismatch: false\n    };\n  }\n\n  function getParsingFlags(m) {\n    if (m._pf == null) {\n      m._pf = defaultParsingFlags();\n    }\n\n    return m._pf;\n  }\n\n  var some;\n\n  if (Array.prototype.some) {\n    some = Array.prototype.some;\n  } else {\n    some = function some(fun) {\n      var t = Object(this);\n      var len = t.length >>> 0;\n\n      for (var i = 0; i < len; i++) {\n        if (i in t && fun.call(this, t[i], i, t)) {\n          return true;\n        }\n      }\n\n      return false;\n    };\n  }\n\n  function isValid(m) {\n    if (m._isValid == null) {\n      var flags = getParsingFlags(m);\n      var parsedParts = some.call(flags.parsedDateParts, function (i) {\n        return i != null;\n      });\n      var isNowValid = !isNaN(m._d.getTime()) && flags.overflow < 0 && !flags.empty && !flags.invalidMonth && !flags.invalidWeekday && !flags.weekdayMismatch && !flags.nullInput && !flags.invalidFormat && !flags.userInvalidated && (!flags.meridiem || flags.meridiem && parsedParts);\n\n      if (m._strict) {\n        isNowValid = isNowValid && flags.charsLeftOver === 0 && flags.unusedTokens.length === 0 && flags.bigHour === undefined;\n      }\n\n      if (Object.isFrozen == null || !Object.isFrozen(m)) {\n        m._isValid = isNowValid;\n      } else {\n        return isNowValid;\n      }\n    }\n\n    return m._isValid;\n  }\n\n  function createInvalid(flags) {\n    var m = createUTC(NaN);\n\n    if (flags != null) {\n      extend(getParsingFlags(m), flags);\n    } else {\n      getParsingFlags(m).userInvalidated = true;\n    }\n\n    return m;\n  } // Plugins that add properties should also add the key here (null value),\n  // so we can properly clone ourselves.\n\n\n  var momentProperties = hooks.momentProperties = [];\n\n  function copyConfig(to, from) {\n    var i, prop, val;\n\n    if (!isUndefined(from._isAMomentObject)) {\n      to._isAMomentObject = from._isAMomentObject;\n    }\n\n    if (!isUndefined(from._i)) {\n      to._i = from._i;\n    }\n\n    if (!isUndefined(from._f)) {\n      to._f = from._f;\n    }\n\n    if (!isUndefined(from._l)) {\n      to._l = from._l;\n    }\n\n    if (!isUndefined(from._strict)) {\n      to._strict = from._strict;\n    }\n\n    if (!isUndefined(from._tzm)) {\n      to._tzm = from._tzm;\n    }\n\n    if (!isUndefined(from._isUTC)) {\n      to._isUTC = from._isUTC;\n    }\n\n    if (!isUndefined(from._offset)) {\n      to._offset = from._offset;\n    }\n\n    if (!isUndefined(from._pf)) {\n      to._pf = getParsingFlags(from);\n    }\n\n    if (!isUndefined(from._locale)) {\n      to._locale = from._locale;\n    }\n\n    if (momentProperties.length > 0) {\n      for (i = 0; i < momentProperties.length; i++) {\n        prop = momentProperties[i];\n        val = from[prop];\n\n        if (!isUndefined(val)) {\n          to[prop] = val;\n        }\n      }\n    }\n\n    return to;\n  }\n\n  var updateInProgress = false; // Moment prototype object\n\n  function Moment(config) {\n    copyConfig(this, config);\n    this._d = new Date(config._d != null ? config._d.getTime() : NaN);\n\n    if (!this.isValid()) {\n      this._d = new Date(NaN);\n    } // Prevent infinite loop in case updateOffset creates new moment\n    // objects.\n\n\n    if (updateInProgress === false) {\n      updateInProgress = true;\n      hooks.updateOffset(this);\n      updateInProgress = false;\n    }\n  }\n\n  function isMoment(obj) {\n    return obj instanceof Moment || obj != null && obj._isAMomentObject != null;\n  }\n\n  function absFloor(number) {\n    if (number < 0) {\n      // -0 -> 0\n      return Math.ceil(number) || 0;\n    } else {\n      return Math.floor(number);\n    }\n  }\n\n  function toInt(argumentForCoercion) {\n    var coercedNumber = +argumentForCoercion,\n        value = 0;\n\n    if (coercedNumber !== 0 && isFinite(coercedNumber)) {\n      value = absFloor(coercedNumber);\n    }\n\n    return value;\n  } // compare two arrays, return the number of differences\n\n\n  function compareArrays(array1, array2, dontConvert) {\n    var len = Math.min(array1.length, array2.length),\n        lengthDiff = Math.abs(array1.length - array2.length),\n        diffs = 0,\n        i;\n\n    for (i = 0; i < len; i++) {\n      if (dontConvert && array1[i] !== array2[i] || !dontConvert && toInt(array1[i]) !== toInt(array2[i])) {\n        diffs++;\n      }\n    }\n\n    return diffs + lengthDiff;\n  }\n\n  function warn(msg) {\n    if (hooks.suppressDeprecationWarnings === false && typeof console !== 'undefined' && console.warn) {\n      console.warn('Deprecation warning: ' + msg);\n    }\n  }\n\n  function deprecate(msg, fn) {\n    var firstTime = true;\n    return extend(function () {\n      if (hooks.deprecationHandler != null) {\n        hooks.deprecationHandler(null, msg);\n      }\n\n      if (firstTime) {\n        var args = [];\n        var arg;\n\n        for (var i = 0; i < arguments.length; i++) {\n          arg = '';\n\n          if (typeof arguments[i] === 'object') {\n            arg += '\\n[' + i + '] ';\n\n            for (var key in arguments[0]) {\n              arg += key + ': ' + arguments[0][key] + ', ';\n            }\n\n            arg = arg.slice(0, -2); // Remove trailing comma and space\n          } else {\n            arg = arguments[i];\n          }\n\n          args.push(arg);\n        }\n\n        warn(msg + '\\nArguments: ' + Array.prototype.slice.call(args).join('') + '\\n' + new Error().stack);\n        firstTime = false;\n      }\n\n      return fn.apply(this, arguments);\n    }, fn);\n  }\n\n  var deprecations = {};\n\n  function deprecateSimple(name, msg) {\n    if (hooks.deprecationHandler != null) {\n      hooks.deprecationHandler(name, msg);\n    }\n\n    if (!deprecations[name]) {\n      warn(msg);\n      deprecations[name] = true;\n    }\n  }\n\n  hooks.suppressDeprecationWarnings = false;\n  hooks.deprecationHandler = null;\n\n  function isFunction(input) {\n    return input instanceof Function || Object.prototype.toString.call(input) === '[object Function]';\n  }\n\n  function set(config) {\n    var prop, i;\n\n    for (i in config) {\n      prop = config[i];\n\n      if (isFunction(prop)) {\n        this[i] = prop;\n      } else {\n        this['_' + i] = prop;\n      }\n    }\n\n    this._config = config; // Lenient ordinal parsing accepts just a number in addition to\n    // number + (possibly) stuff coming from _dayOfMonthOrdinalParse.\n    // TODO: Remove \"ordinalParse\" fallback in next major release.\n\n    this._dayOfMonthOrdinalParseLenient = new RegExp((this._dayOfMonthOrdinalParse.source || this._ordinalParse.source) + '|' + /\\d{1,2}/.source);\n  }\n\n  function mergeConfigs(parentConfig, childConfig) {\n    var res = extend({}, parentConfig),\n        prop;\n\n    for (prop in childConfig) {\n      if (hasOwnProp(childConfig, prop)) {\n        if (isObject(parentConfig[prop]) && isObject(childConfig[prop])) {\n          res[prop] = {};\n          extend(res[prop], parentConfig[prop]);\n          extend(res[prop], childConfig[prop]);\n        } else if (childConfig[prop] != null) {\n          res[prop] = childConfig[prop];\n        } else {\n          delete res[prop];\n        }\n      }\n    }\n\n    for (prop in parentConfig) {\n      if (hasOwnProp(parentConfig, prop) && !hasOwnProp(childConfig, prop) && isObject(parentConfig[prop])) {\n        // make sure changes to properties don't modify parent config\n        res[prop] = extend({}, res[prop]);\n      }\n    }\n\n    return res;\n  }\n\n  function Locale(config) {\n    if (config != null) {\n      this.set(config);\n    }\n  }\n\n  var keys;\n\n  if (Object.keys) {\n    keys = Object.keys;\n  } else {\n    keys = function keys(obj) {\n      var i,\n          res = [];\n\n      for (i in obj) {\n        if (hasOwnProp(obj, i)) {\n          res.push(i);\n        }\n      }\n\n      return res;\n    };\n  }\n\n  var defaultCalendar = {\n    sameDay: '[Today at] LT',\n    nextDay: '[Tomorrow at] LT',\n    nextWeek: 'dddd [at] LT',\n    lastDay: '[Yesterday at] LT',\n    lastWeek: '[Last] dddd [at] LT',\n    sameElse: 'L'\n  };\n\n  function calendar(key, mom, now) {\n    var output = this._calendar[key] || this._calendar['sameElse'];\n    return isFunction(output) ? output.call(mom, now) : output;\n  }\n\n  var defaultLongDateFormat = {\n    LTS: 'h:mm:ss A',\n    LT: 'h:mm A',\n    L: 'MM/DD/YYYY',\n    LL: 'MMMM D, YYYY',\n    LLL: 'MMMM D, YYYY h:mm A',\n    LLLL: 'dddd, MMMM D, YYYY h:mm A'\n  };\n\n  function longDateFormat(key) {\n    var format = this._longDateFormat[key],\n        formatUpper = this._longDateFormat[key.toUpperCase()];\n\n    if (format || !formatUpper) {\n      return format;\n    }\n\n    this._longDateFormat[key] = formatUpper.replace(/MMMM|MM|DD|dddd/g, function (val) {\n      return val.slice(1);\n    });\n    return this._longDateFormat[key];\n  }\n\n  var defaultInvalidDate = 'Invalid date';\n\n  function invalidDate() {\n    return this._invalidDate;\n  }\n\n  var defaultOrdinal = '%d';\n  var defaultDayOfMonthOrdinalParse = /\\d{1,2}/;\n\n  function ordinal(number) {\n    return this._ordinal.replace('%d', number);\n  }\n\n  var defaultRelativeTime = {\n    future: 'in %s',\n    past: '%s ago',\n    s: 'a few seconds',\n    ss: '%d seconds',\n    m: 'a minute',\n    mm: '%d minutes',\n    h: 'an hour',\n    hh: '%d hours',\n    d: 'a day',\n    dd: '%d days',\n    M: 'a month',\n    MM: '%d months',\n    y: 'a year',\n    yy: '%d years'\n  };\n\n  function relativeTime(number, withoutSuffix, string, isFuture) {\n    var output = this._relativeTime[string];\n    return isFunction(output) ? output(number, withoutSuffix, string, isFuture) : output.replace(/%d/i, number);\n  }\n\n  function pastFuture(diff, output) {\n    var format = this._relativeTime[diff > 0 ? 'future' : 'past'];\n    return isFunction(format) ? format(output) : format.replace(/%s/i, output);\n  }\n\n  var aliases = {};\n\n  function addUnitAlias(unit, shorthand) {\n    var lowerCase = unit.toLowerCase();\n    aliases[lowerCase] = aliases[lowerCase + 's'] = aliases[shorthand] = unit;\n  }\n\n  function normalizeUnits(units) {\n    return typeof units === 'string' ? aliases[units] || aliases[units.toLowerCase()] : undefined;\n  }\n\n  function normalizeObjectUnits(inputObject) {\n    var normalizedInput = {},\n        normalizedProp,\n        prop;\n\n    for (prop in inputObject) {\n      if (hasOwnProp(inputObject, prop)) {\n        normalizedProp = normalizeUnits(prop);\n\n        if (normalizedProp) {\n          normalizedInput[normalizedProp] = inputObject[prop];\n        }\n      }\n    }\n\n    return normalizedInput;\n  }\n\n  var priorities = {};\n\n  function addUnitPriority(unit, priority) {\n    priorities[unit] = priority;\n  }\n\n  function getPrioritizedUnits(unitsObj) {\n    var units = [];\n\n    for (var u in unitsObj) {\n      units.push({\n        unit: u,\n        priority: priorities[u]\n      });\n    }\n\n    units.sort(function (a, b) {\n      return a.priority - b.priority;\n    });\n    return units;\n  }\n\n  function zeroFill(number, targetLength, forceSign) {\n    var absNumber = '' + Math.abs(number),\n        zerosToFill = targetLength - absNumber.length,\n        sign = number >= 0;\n    return (sign ? forceSign ? '+' : '' : '-') + Math.pow(10, Math.max(0, zerosToFill)).toString().substr(1) + absNumber;\n  }\n\n  var formattingTokens = /(\\[[^\\[]*\\])|(\\\\)?([Hh]mm(ss)?|Mo|MM?M?M?|Do|DDDo|DD?D?D?|ddd?d?|do?|w[o|w]?|W[o|W]?|Qo?|YYYYYY|YYYYY|YYYY|YY|gg(ggg?)?|GG(GGG?)?|e|E|a|A|hh?|HH?|kk?|mm?|ss?|S{1,9}|x|X|zz?|ZZ?|.)/g;\n  var localFormattingTokens = /(\\[[^\\[]*\\])|(\\\\)?(LTS|LT|LL?L?L?|l{1,4})/g;\n  var formatFunctions = {};\n  var formatTokenFunctions = {}; // token:    'M'\n  // padded:   ['MM', 2]\n  // ordinal:  'Mo'\n  // callback: function () { this.month() + 1 }\n\n  function addFormatToken(token, padded, ordinal, callback) {\n    var func = callback;\n\n    if (typeof callback === 'string') {\n      func = function func() {\n        return this[callback]();\n      };\n    }\n\n    if (token) {\n      formatTokenFunctions[token] = func;\n    }\n\n    if (padded) {\n      formatTokenFunctions[padded[0]] = function () {\n        return zeroFill(func.apply(this, arguments), padded[1], padded[2]);\n      };\n    }\n\n    if (ordinal) {\n      formatTokenFunctions[ordinal] = function () {\n        return this.localeData().ordinal(func.apply(this, arguments), token);\n      };\n    }\n  }\n\n  function removeFormattingTokens(input) {\n    if (input.match(/\\[[\\s\\S]/)) {\n      return input.replace(/^\\[|\\]$/g, '');\n    }\n\n    return input.replace(/\\\\/g, '');\n  }\n\n  function makeFormatFunction(format) {\n    var array = format.match(formattingTokens),\n        i,\n        length;\n\n    for (i = 0, length = array.length; i < length; i++) {\n      if (formatTokenFunctions[array[i]]) {\n        array[i] = formatTokenFunctions[array[i]];\n      } else {\n        array[i] = removeFormattingTokens(array[i]);\n      }\n    }\n\n    return function (mom) {\n      var output = '',\n          i;\n\n      for (i = 0; i < length; i++) {\n        output += isFunction(array[i]) ? array[i].call(mom, format) : array[i];\n      }\n\n      return output;\n    };\n  } // format date using native date object\n\n\n  function formatMoment(m, format) {\n    if (!m.isValid()) {\n      return m.localeData().invalidDate();\n    }\n\n    format = expandFormat(format, m.localeData());\n    formatFunctions[format] = formatFunctions[format] || makeFormatFunction(format);\n    return formatFunctions[format](m);\n  }\n\n  function expandFormat(format, locale) {\n    var i = 5;\n\n    function replaceLongDateFormatTokens(input) {\n      return locale.longDateFormat(input) || input;\n    }\n\n    localFormattingTokens.lastIndex = 0;\n\n    while (i >= 0 && localFormattingTokens.test(format)) {\n      format = format.replace(localFormattingTokens, replaceLongDateFormatTokens);\n      localFormattingTokens.lastIndex = 0;\n      i -= 1;\n    }\n\n    return format;\n  }\n\n  var match1 = /\\d/; //       0 - 9\n\n  var match2 = /\\d\\d/; //      00 - 99\n\n  var match3 = /\\d{3}/; //     000 - 999\n\n  var match4 = /\\d{4}/; //    0000 - 9999\n\n  var match6 = /[+-]?\\d{6}/; // -999999 - 999999\n\n  var match1to2 = /\\d\\d?/; //       0 - 99\n\n  var match3to4 = /\\d\\d\\d\\d?/; //     999 - 9999\n\n  var match5to6 = /\\d\\d\\d\\d\\d\\d?/; //   99999 - 999999\n\n  var match1to3 = /\\d{1,3}/; //       0 - 999\n\n  var match1to4 = /\\d{1,4}/; //       0 - 9999\n\n  var match1to6 = /[+-]?\\d{1,6}/; // -999999 - 999999\n\n  var matchUnsigned = /\\d+/; //       0 - inf\n\n  var matchSigned = /[+-]?\\d+/; //    -inf - inf\n\n  var matchOffset = /Z|[+-]\\d\\d:?\\d\\d/gi; // +00:00 -00:00 +0000 -0000 or Z\n\n  var matchShortOffset = /Z|[+-]\\d\\d(?::?\\d\\d)?/gi; // +00 -00 +00:00 -00:00 +0000 -0000 or Z\n\n  var matchTimestamp = /[+-]?\\d+(\\.\\d{1,3})?/; // 123456789 123456789.123\n  // any word (or two) characters or numbers including two/three word month in arabic.\n  // includes scottish gaelic two word and hyphenated months\n\n  var matchWord = /[0-9]{0,256}['a-z\\u00A0-\\u05FF\\u0700-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFF07\\uFF10-\\uFFEF]{1,256}|[\\u0600-\\u06FF\\/]{1,256}(\\s*?[\\u0600-\\u06FF]{1,256}){1,2}/i;\n  var regexes = {};\n\n  function addRegexToken(token, regex, strictRegex) {\n    regexes[token] = isFunction(regex) ? regex : function (isStrict, localeData) {\n      return isStrict && strictRegex ? strictRegex : regex;\n    };\n  }\n\n  function getParseRegexForToken(token, config) {\n    if (!hasOwnProp(regexes, token)) {\n      return new RegExp(unescapeFormat(token));\n    }\n\n    return regexes[token](config._strict, config._locale);\n  } // Code from http://stackoverflow.com/questions/3561493/is-there-a-regexp-escape-function-in-javascript\n\n\n  function unescapeFormat(s) {\n    return regexEscape(s.replace('\\\\', '').replace(/\\\\(\\[)|\\\\(\\])|\\[([^\\]\\[]*)\\]|\\\\(.)/g, function (matched, p1, p2, p3, p4) {\n      return p1 || p2 || p3 || p4;\n    }));\n  }\n\n  function regexEscape(s) {\n    return s.replace(/[-\\/\\\\^$*+?.()|[\\]{}]/g, '\\\\$&');\n  }\n\n  var tokens = {};\n\n  function addParseToken(token, callback) {\n    var i,\n        func = callback;\n\n    if (typeof token === 'string') {\n      token = [token];\n    }\n\n    if (isNumber(callback)) {\n      func = function func(input, array) {\n        array[callback] = toInt(input);\n      };\n    }\n\n    for (i = 0; i < token.length; i++) {\n      tokens[token[i]] = func;\n    }\n  }\n\n  function addWeekParseToken(token, callback) {\n    addParseToken(token, function (input, array, config, token) {\n      config._w = config._w || {};\n      callback(input, config._w, config, token);\n    });\n  }\n\n  function addTimeToArrayFromToken(token, input, config) {\n    if (input != null && hasOwnProp(tokens, token)) {\n      tokens[token](input, config._a, config, token);\n    }\n  }\n\n  var YEAR = 0;\n  var MONTH = 1;\n  var DATE = 2;\n  var HOUR = 3;\n  var MINUTE = 4;\n  var SECOND = 5;\n  var MILLISECOND = 6;\n  var WEEK = 7;\n  var WEEKDAY = 8; // FORMATTING\n\n  addFormatToken('Y', 0, 0, function () {\n    var y = this.year();\n    return y <= 9999 ? '' + y : '+' + y;\n  });\n  addFormatToken(0, ['YY', 2], 0, function () {\n    return this.year() % 100;\n  });\n  addFormatToken(0, ['YYYY', 4], 0, 'year');\n  addFormatToken(0, ['YYYYY', 5], 0, 'year');\n  addFormatToken(0, ['YYYYYY', 6, true], 0, 'year'); // ALIASES\n\n  addUnitAlias('year', 'y'); // PRIORITIES\n\n  addUnitPriority('year', 1); // PARSING\n\n  addRegexToken('Y', matchSigned);\n  addRegexToken('YY', match1to2, match2);\n  addRegexToken('YYYY', match1to4, match4);\n  addRegexToken('YYYYY', match1to6, match6);\n  addRegexToken('YYYYYY', match1to6, match6);\n  addParseToken(['YYYYY', 'YYYYYY'], YEAR);\n  addParseToken('YYYY', function (input, array) {\n    array[YEAR] = input.length === 2 ? hooks.parseTwoDigitYear(input) : toInt(input);\n  });\n  addParseToken('YY', function (input, array) {\n    array[YEAR] = hooks.parseTwoDigitYear(input);\n  });\n  addParseToken('Y', function (input, array) {\n    array[YEAR] = parseInt(input, 10);\n  }); // HELPERS\n\n  function daysInYear(year) {\n    return isLeapYear(year) ? 366 : 365;\n  }\n\n  function isLeapYear(year) {\n    return year % 4 === 0 && year % 100 !== 0 || year % 400 === 0;\n  } // HOOKS\n\n\n  hooks.parseTwoDigitYear = function (input) {\n    return toInt(input) + (toInt(input) > 68 ? 1900 : 2000);\n  }; // MOMENTS\n\n\n  var getSetYear = makeGetSet('FullYear', true);\n\n  function getIsLeapYear() {\n    return isLeapYear(this.year());\n  }\n\n  function makeGetSet(unit, keepTime) {\n    return function (value) {\n      if (value != null) {\n        set$1(this, unit, value);\n        hooks.updateOffset(this, keepTime);\n        return this;\n      } else {\n        return get(this, unit);\n      }\n    };\n  }\n\n  function get(mom, unit) {\n    return mom.isValid() ? mom._d['get' + (mom._isUTC ? 'UTC' : '') + unit]() : NaN;\n  }\n\n  function set$1(mom, unit, value) {\n    if (mom.isValid() && !isNaN(value)) {\n      if (unit === 'FullYear' && isLeapYear(mom.year()) && mom.month() === 1 && mom.date() === 29) {\n        mom._d['set' + (mom._isUTC ? 'UTC' : '') + unit](value, mom.month(), daysInMonth(value, mom.month()));\n      } else {\n        mom._d['set' + (mom._isUTC ? 'UTC' : '') + unit](value);\n      }\n    }\n  } // MOMENTS\n\n\n  function stringGet(units) {\n    units = normalizeUnits(units);\n\n    if (isFunction(this[units])) {\n      return this[units]();\n    }\n\n    return this;\n  }\n\n  function stringSet(units, value) {\n    if (typeof units === 'object') {\n      units = normalizeObjectUnits(units);\n      var prioritized = getPrioritizedUnits(units);\n\n      for (var i = 0; i < prioritized.length; i++) {\n        this[prioritized[i].unit](units[prioritized[i].unit]);\n      }\n    } else {\n      units = normalizeUnits(units);\n\n      if (isFunction(this[units])) {\n        return this[units](value);\n      }\n    }\n\n    return this;\n  }\n\n  function mod(n, x) {\n    return (n % x + x) % x;\n  }\n\n  var indexOf;\n\n  if (Array.prototype.indexOf) {\n    indexOf = Array.prototype.indexOf;\n  } else {\n    indexOf = function indexOf(o) {\n      // I know\n      var i;\n\n      for (i = 0; i < this.length; ++i) {\n        if (this[i] === o) {\n          return i;\n        }\n      }\n\n      return -1;\n    };\n  }\n\n  function daysInMonth(year, month) {\n    if (isNaN(year) || isNaN(month)) {\n      return NaN;\n    }\n\n    var modMonth = mod(month, 12);\n    year += (month - modMonth) / 12;\n    return modMonth === 1 ? isLeapYear(year) ? 29 : 28 : 31 - modMonth % 7 % 2;\n  } // FORMATTING\n\n\n  addFormatToken('M', ['MM', 2], 'Mo', function () {\n    return this.month() + 1;\n  });\n  addFormatToken('MMM', 0, 0, function (format) {\n    return this.localeData().monthsShort(this, format);\n  });\n  addFormatToken('MMMM', 0, 0, function (format) {\n    return this.localeData().months(this, format);\n  }); // ALIASES\n\n  addUnitAlias('month', 'M'); // PRIORITY\n\n  addUnitPriority('month', 8); // PARSING\n\n  addRegexToken('M', match1to2);\n  addRegexToken('MM', match1to2, match2);\n  addRegexToken('MMM', function (isStrict, locale) {\n    return locale.monthsShortRegex(isStrict);\n  });\n  addRegexToken('MMMM', function (isStrict, locale) {\n    return locale.monthsRegex(isStrict);\n  });\n  addParseToken(['M', 'MM'], function (input, array) {\n    array[MONTH] = toInt(input) - 1;\n  });\n  addParseToken(['MMM', 'MMMM'], function (input, array, config, token) {\n    var month = config._locale.monthsParse(input, token, config._strict); // if we didn't find a month name, mark the date as invalid.\n\n\n    if (month != null) {\n      array[MONTH] = month;\n    } else {\n      getParsingFlags(config).invalidMonth = input;\n    }\n  }); // LOCALES\n\n  var MONTHS_IN_FORMAT = /D[oD]?(\\[[^\\[\\]]*\\]|\\s)+MMMM?/;\n  var defaultLocaleMonths = 'January_February_March_April_May_June_July_August_September_October_November_December'.split('_');\n\n  function localeMonths(m, format) {\n    if (!m) {\n      return isArray(this._months) ? this._months : this._months['standalone'];\n    }\n\n    return isArray(this._months) ? this._months[m.month()] : this._months[(this._months.isFormat || MONTHS_IN_FORMAT).test(format) ? 'format' : 'standalone'][m.month()];\n  }\n\n  var defaultLocaleMonthsShort = 'Jan_Feb_Mar_Apr_May_Jun_Jul_Aug_Sep_Oct_Nov_Dec'.split('_');\n\n  function localeMonthsShort(m, format) {\n    if (!m) {\n      return isArray(this._monthsShort) ? this._monthsShort : this._monthsShort['standalone'];\n    }\n\n    return isArray(this._monthsShort) ? this._monthsShort[m.month()] : this._monthsShort[MONTHS_IN_FORMAT.test(format) ? 'format' : 'standalone'][m.month()];\n  }\n\n  function handleStrictParse(monthName, format, strict) {\n    var i,\n        ii,\n        mom,\n        llc = monthName.toLocaleLowerCase();\n\n    if (!this._monthsParse) {\n      // this is not used\n      this._monthsParse = [];\n      this._longMonthsParse = [];\n      this._shortMonthsParse = [];\n\n      for (i = 0; i < 12; ++i) {\n        mom = createUTC([2000, i]);\n        this._shortMonthsParse[i] = this.monthsShort(mom, '').toLocaleLowerCase();\n        this._longMonthsParse[i] = this.months(mom, '').toLocaleLowerCase();\n      }\n    }\n\n    if (strict) {\n      if (format === 'MMM') {\n        ii = indexOf.call(this._shortMonthsParse, llc);\n        return ii !== -1 ? ii : null;\n      } else {\n        ii = indexOf.call(this._longMonthsParse, llc);\n        return ii !== -1 ? ii : null;\n      }\n    } else {\n      if (format === 'MMM') {\n        ii = indexOf.call(this._shortMonthsParse, llc);\n\n        if (ii !== -1) {\n          return ii;\n        }\n\n        ii = indexOf.call(this._longMonthsParse, llc);\n        return ii !== -1 ? ii : null;\n      } else {\n        ii = indexOf.call(this._longMonthsParse, llc);\n\n        if (ii !== -1) {\n          return ii;\n        }\n\n        ii = indexOf.call(this._shortMonthsParse, llc);\n        return ii !== -1 ? ii : null;\n      }\n    }\n  }\n\n  function localeMonthsParse(monthName, format, strict) {\n    var i, mom, regex;\n\n    if (this._monthsParseExact) {\n      return handleStrictParse.call(this, monthName, format, strict);\n    }\n\n    if (!this._monthsParse) {\n      this._monthsParse = [];\n      this._longMonthsParse = [];\n      this._shortMonthsParse = [];\n    } // TODO: add sorting\n    // Sorting makes sure if one month (or abbr) is a prefix of another\n    // see sorting in computeMonthsParse\n\n\n    for (i = 0; i < 12; i++) {\n      // make the regex if we don't have it already\n      mom = createUTC([2000, i]);\n\n      if (strict && !this._longMonthsParse[i]) {\n        this._longMonthsParse[i] = new RegExp('^' + this.months(mom, '').replace('.', '') + '$', 'i');\n        this._shortMonthsParse[i] = new RegExp('^' + this.monthsShort(mom, '').replace('.', '') + '$', 'i');\n      }\n\n      if (!strict && !this._monthsParse[i]) {\n        regex = '^' + this.months(mom, '') + '|^' + this.monthsShort(mom, '');\n        this._monthsParse[i] = new RegExp(regex.replace('.', ''), 'i');\n      } // test the regex\n\n\n      if (strict && format === 'MMMM' && this._longMonthsParse[i].test(monthName)) {\n        return i;\n      } else if (strict && format === 'MMM' && this._shortMonthsParse[i].test(monthName)) {\n        return i;\n      } else if (!strict && this._monthsParse[i].test(monthName)) {\n        return i;\n      }\n    }\n  } // MOMENTS\n\n\n  function setMonth(mom, value) {\n    var dayOfMonth;\n\n    if (!mom.isValid()) {\n      // No op\n      return mom;\n    }\n\n    if (typeof value === 'string') {\n      if (/^\\d+$/.test(value)) {\n        value = toInt(value);\n      } else {\n        value = mom.localeData().monthsParse(value); // TODO: Another silent failure?\n\n        if (!isNumber(value)) {\n          return mom;\n        }\n      }\n    }\n\n    dayOfMonth = Math.min(mom.date(), daysInMonth(mom.year(), value));\n\n    mom._d['set' + (mom._isUTC ? 'UTC' : '') + 'Month'](value, dayOfMonth);\n\n    return mom;\n  }\n\n  function getSetMonth(value) {\n    if (value != null) {\n      setMonth(this, value);\n      hooks.updateOffset(this, true);\n      return this;\n    } else {\n      return get(this, 'Month');\n    }\n  }\n\n  function getDaysInMonth() {\n    return daysInMonth(this.year(), this.month());\n  }\n\n  var defaultMonthsShortRegex = matchWord;\n\n  function monthsShortRegex(isStrict) {\n    if (this._monthsParseExact) {\n      if (!hasOwnProp(this, '_monthsRegex')) {\n        computeMonthsParse.call(this);\n      }\n\n      if (isStrict) {\n        return this._monthsShortStrictRegex;\n      } else {\n        return this._monthsShortRegex;\n      }\n    } else {\n      if (!hasOwnProp(this, '_monthsShortRegex')) {\n        this._monthsShortRegex = defaultMonthsShortRegex;\n      }\n\n      return this._monthsShortStrictRegex && isStrict ? this._monthsShortStrictRegex : this._monthsShortRegex;\n    }\n  }\n\n  var defaultMonthsRegex = matchWord;\n\n  function monthsRegex(isStrict) {\n    if (this._monthsParseExact) {\n      if (!hasOwnProp(this, '_monthsRegex')) {\n        computeMonthsParse.call(this);\n      }\n\n      if (isStrict) {\n        return this._monthsStrictRegex;\n      } else {\n        return this._monthsRegex;\n      }\n    } else {\n      if (!hasOwnProp(this, '_monthsRegex')) {\n        this._monthsRegex = defaultMonthsRegex;\n      }\n\n      return this._monthsStrictRegex && isStrict ? this._monthsStrictRegex : this._monthsRegex;\n    }\n  }\n\n  function computeMonthsParse() {\n    function cmpLenRev(a, b) {\n      return b.length - a.length;\n    }\n\n    var shortPieces = [],\n        longPieces = [],\n        mixedPieces = [],\n        i,\n        mom;\n\n    for (i = 0; i < 12; i++) {\n      // make the regex if we don't have it already\n      mom = createUTC([2000, i]);\n      shortPieces.push(this.monthsShort(mom, ''));\n      longPieces.push(this.months(mom, ''));\n      mixedPieces.push(this.months(mom, ''));\n      mixedPieces.push(this.monthsShort(mom, ''));\n    } // Sorting makes sure if one month (or abbr) is a prefix of another it\n    // will match the longer piece.\n\n\n    shortPieces.sort(cmpLenRev);\n    longPieces.sort(cmpLenRev);\n    mixedPieces.sort(cmpLenRev);\n\n    for (i = 0; i < 12; i++) {\n      shortPieces[i] = regexEscape(shortPieces[i]);\n      longPieces[i] = regexEscape(longPieces[i]);\n    }\n\n    for (i = 0; i < 24; i++) {\n      mixedPieces[i] = regexEscape(mixedPieces[i]);\n    }\n\n    this._monthsRegex = new RegExp('^(' + mixedPieces.join('|') + ')', 'i');\n    this._monthsShortRegex = this._monthsRegex;\n    this._monthsStrictRegex = new RegExp('^(' + longPieces.join('|') + ')', 'i');\n    this._monthsShortStrictRegex = new RegExp('^(' + shortPieces.join('|') + ')', 'i');\n  }\n\n  function createDate(y, m, d, h, M, s, ms) {\n    // can't just apply() to create a date:\n    // https://stackoverflow.com/q/181348\n    var date; // the date constructor remaps years 0-99 to 1900-1999\n\n    if (y < 100 && y >= 0) {\n      // preserve leap years using a full 400 year cycle, then reset\n      date = new Date(y + 400, m, d, h, M, s, ms);\n\n      if (isFinite(date.getFullYear())) {\n        date.setFullYear(y);\n      }\n    } else {\n      date = new Date(y, m, d, h, M, s, ms);\n    }\n\n    return date;\n  }\n\n  function createUTCDate(y) {\n    var date; // the Date.UTC function remaps years 0-99 to 1900-1999\n\n    if (y < 100 && y >= 0) {\n      var args = Array.prototype.slice.call(arguments); // preserve leap years using a full 400 year cycle, then reset\n\n      args[0] = y + 400;\n      date = new Date(Date.UTC.apply(null, args));\n\n      if (isFinite(date.getUTCFullYear())) {\n        date.setUTCFullYear(y);\n      }\n    } else {\n      date = new Date(Date.UTC.apply(null, arguments));\n    }\n\n    return date;\n  } // start-of-first-week - start-of-year\n\n\n  function firstWeekOffset(year, dow, doy) {\n    var // first-week day -- which january is always in the first week (4 for iso, 1 for other)\n    fwd = 7 + dow - doy,\n        // first-week day local weekday -- which local weekday is fwd\n    fwdlw = (7 + createUTCDate(year, 0, fwd).getUTCDay() - dow) % 7;\n    return -fwdlw + fwd - 1;\n  } // https://en.wikipedia.org/wiki/ISO_week_date#Calculating_a_date_given_the_year.2C_week_number_and_weekday\n\n\n  function dayOfYearFromWeeks(year, week, weekday, dow, doy) {\n    var localWeekday = (7 + weekday - dow) % 7,\n        weekOffset = firstWeekOffset(year, dow, doy),\n        dayOfYear = 1 + 7 * (week - 1) + localWeekday + weekOffset,\n        resYear,\n        resDayOfYear;\n\n    if (dayOfYear <= 0) {\n      resYear = year - 1;\n      resDayOfYear = daysInYear(resYear) + dayOfYear;\n    } else if (dayOfYear > daysInYear(year)) {\n      resYear = year + 1;\n      resDayOfYear = dayOfYear - daysInYear(year);\n    } else {\n      resYear = year;\n      resDayOfYear = dayOfYear;\n    }\n\n    return {\n      year: resYear,\n      dayOfYear: resDayOfYear\n    };\n  }\n\n  function weekOfYear(mom, dow, doy) {\n    var weekOffset = firstWeekOffset(mom.year(), dow, doy),\n        week = Math.floor((mom.dayOfYear() - weekOffset - 1) / 7) + 1,\n        resWeek,\n        resYear;\n\n    if (week < 1) {\n      resYear = mom.year() - 1;\n      resWeek = week + weeksInYear(resYear, dow, doy);\n    } else if (week > weeksInYear(mom.year(), dow, doy)) {\n      resWeek = week - weeksInYear(mom.year(), dow, doy);\n      resYear = mom.year() + 1;\n    } else {\n      resYear = mom.year();\n      resWeek = week;\n    }\n\n    return {\n      week: resWeek,\n      year: resYear\n    };\n  }\n\n  function weeksInYear(year, dow, doy) {\n    var weekOffset = firstWeekOffset(year, dow, doy),\n        weekOffsetNext = firstWeekOffset(year + 1, dow, doy);\n    return (daysInYear(year) - weekOffset + weekOffsetNext) / 7;\n  } // FORMATTING\n\n\n  addFormatToken('w', ['ww', 2], 'wo', 'week');\n  addFormatToken('W', ['WW', 2], 'Wo', 'isoWeek'); // ALIASES\n\n  addUnitAlias('week', 'w');\n  addUnitAlias('isoWeek', 'W'); // PRIORITIES\n\n  addUnitPriority('week', 5);\n  addUnitPriority('isoWeek', 5); // PARSING\n\n  addRegexToken('w', match1to2);\n  addRegexToken('ww', match1to2, match2);\n  addRegexToken('W', match1to2);\n  addRegexToken('WW', match1to2, match2);\n  addWeekParseToken(['w', 'ww', 'W', 'WW'], function (input, week, config, token) {\n    week[token.substr(0, 1)] = toInt(input);\n  }); // HELPERS\n  // LOCALES\n\n  function localeWeek(mom) {\n    return weekOfYear(mom, this._week.dow, this._week.doy).week;\n  }\n\n  var defaultLocaleWeek = {\n    dow: 0,\n    // Sunday is the first day of the week.\n    doy: 6 // The week that contains Jan 6th is the first week of the year.\n\n  };\n\n  function localeFirstDayOfWeek() {\n    return this._week.dow;\n  }\n\n  function localeFirstDayOfYear() {\n    return this._week.doy;\n  } // MOMENTS\n\n\n  function getSetWeek(input) {\n    var week = this.localeData().week(this);\n    return input == null ? week : this.add((input - week) * 7, 'd');\n  }\n\n  function getSetISOWeek(input) {\n    var week = weekOfYear(this, 1, 4).week;\n    return input == null ? week : this.add((input - week) * 7, 'd');\n  } // FORMATTING\n\n\n  addFormatToken('d', 0, 'do', 'day');\n  addFormatToken('dd', 0, 0, function (format) {\n    return this.localeData().weekdaysMin(this, format);\n  });\n  addFormatToken('ddd', 0, 0, function (format) {\n    return this.localeData().weekdaysShort(this, format);\n  });\n  addFormatToken('dddd', 0, 0, function (format) {\n    return this.localeData().weekdays(this, format);\n  });\n  addFormatToken('e', 0, 0, 'weekday');\n  addFormatToken('E', 0, 0, 'isoWeekday'); // ALIASES\n\n  addUnitAlias('day', 'd');\n  addUnitAlias('weekday', 'e');\n  addUnitAlias('isoWeekday', 'E'); // PRIORITY\n\n  addUnitPriority('day', 11);\n  addUnitPriority('weekday', 11);\n  addUnitPriority('isoWeekday', 11); // PARSING\n\n  addRegexToken('d', match1to2);\n  addRegexToken('e', match1to2);\n  addRegexToken('E', match1to2);\n  addRegexToken('dd', function (isStrict, locale) {\n    return locale.weekdaysMinRegex(isStrict);\n  });\n  addRegexToken('ddd', function (isStrict, locale) {\n    return locale.weekdaysShortRegex(isStrict);\n  });\n  addRegexToken('dddd', function (isStrict, locale) {\n    return locale.weekdaysRegex(isStrict);\n  });\n  addWeekParseToken(['dd', 'ddd', 'dddd'], function (input, week, config, token) {\n    var weekday = config._locale.weekdaysParse(input, token, config._strict); // if we didn't get a weekday name, mark the date as invalid\n\n\n    if (weekday != null) {\n      week.d = weekday;\n    } else {\n      getParsingFlags(config).invalidWeekday = input;\n    }\n  });\n  addWeekParseToken(['d', 'e', 'E'], function (input, week, config, token) {\n    week[token] = toInt(input);\n  }); // HELPERS\n\n  function parseWeekday(input, locale) {\n    if (typeof input !== 'string') {\n      return input;\n    }\n\n    if (!isNaN(input)) {\n      return parseInt(input, 10);\n    }\n\n    input = locale.weekdaysParse(input);\n\n    if (typeof input === 'number') {\n      return input;\n    }\n\n    return null;\n  }\n\n  function parseIsoWeekday(input, locale) {\n    if (typeof input === 'string') {\n      return locale.weekdaysParse(input) % 7 || 7;\n    }\n\n    return isNaN(input) ? null : input;\n  } // LOCALES\n\n\n  function shiftWeekdays(ws, n) {\n    return ws.slice(n, 7).concat(ws.slice(0, n));\n  }\n\n  var defaultLocaleWeekdays = 'Sunday_Monday_Tuesday_Wednesday_Thursday_Friday_Saturday'.split('_');\n\n  function localeWeekdays(m, format) {\n    var weekdays = isArray(this._weekdays) ? this._weekdays : this._weekdays[m && m !== true && this._weekdays.isFormat.test(format) ? 'format' : 'standalone'];\n    return m === true ? shiftWeekdays(weekdays, this._week.dow) : m ? weekdays[m.day()] : weekdays;\n  }\n\n  var defaultLocaleWeekdaysShort = 'Sun_Mon_Tue_Wed_Thu_Fri_Sat'.split('_');\n\n  function localeWeekdaysShort(m) {\n    return m === true ? shiftWeekdays(this._weekdaysShort, this._week.dow) : m ? this._weekdaysShort[m.day()] : this._weekdaysShort;\n  }\n\n  var defaultLocaleWeekdaysMin = 'Su_Mo_Tu_We_Th_Fr_Sa'.split('_');\n\n  function localeWeekdaysMin(m) {\n    return m === true ? shiftWeekdays(this._weekdaysMin, this._week.dow) : m ? this._weekdaysMin[m.day()] : this._weekdaysMin;\n  }\n\n  function handleStrictParse$1(weekdayName, format, strict) {\n    var i,\n        ii,\n        mom,\n        llc = weekdayName.toLocaleLowerCase();\n\n    if (!this._weekdaysParse) {\n      this._weekdaysParse = [];\n      this._shortWeekdaysParse = [];\n      this._minWeekdaysParse = [];\n\n      for (i = 0; i < 7; ++i) {\n        mom = createUTC([2000, 1]).day(i);\n        this._minWeekdaysParse[i] = this.weekdaysMin(mom, '').toLocaleLowerCase();\n        this._shortWeekdaysParse[i] = this.weekdaysShort(mom, '').toLocaleLowerCase();\n        this._weekdaysParse[i] = this.weekdays(mom, '').toLocaleLowerCase();\n      }\n    }\n\n    if (strict) {\n      if (format === 'dddd') {\n        ii = indexOf.call(this._weekdaysParse, llc);\n        return ii !== -1 ? ii : null;\n      } else if (format === 'ddd') {\n        ii = indexOf.call(this._shortWeekdaysParse, llc);\n        return ii !== -1 ? ii : null;\n      } else {\n        ii = indexOf.call(this._minWeekdaysParse, llc);\n        return ii !== -1 ? ii : null;\n      }\n    } else {\n      if (format === 'dddd') {\n        ii = indexOf.call(this._weekdaysParse, llc);\n\n        if (ii !== -1) {\n          return ii;\n        }\n\n        ii = indexOf.call(this._shortWeekdaysParse, llc);\n\n        if (ii !== -1) {\n          return ii;\n        }\n\n        ii = indexOf.call(this._minWeekdaysParse, llc);\n        return ii !== -1 ? ii : null;\n      } else if (format === 'ddd') {\n        ii = indexOf.call(this._shortWeekdaysParse, llc);\n\n        if (ii !== -1) {\n          return ii;\n        }\n\n        ii = indexOf.call(this._weekdaysParse, llc);\n\n        if (ii !== -1) {\n          return ii;\n        }\n\n        ii = indexOf.call(this._minWeekdaysParse, llc);\n        return ii !== -1 ? ii : null;\n      } else {\n        ii = indexOf.call(this._minWeekdaysParse, llc);\n\n        if (ii !== -1) {\n          return ii;\n        }\n\n        ii = indexOf.call(this._weekdaysParse, llc);\n\n        if (ii !== -1) {\n          return ii;\n        }\n\n        ii = indexOf.call(this._shortWeekdaysParse, llc);\n        return ii !== -1 ? ii : null;\n      }\n    }\n  }\n\n  function localeWeekdaysParse(weekdayName, format, strict) {\n    var i, mom, regex;\n\n    if (this._weekdaysParseExact) {\n      return handleStrictParse$1.call(this, weekdayName, format, strict);\n    }\n\n    if (!this._weekdaysParse) {\n      this._weekdaysParse = [];\n      this._minWeekdaysParse = [];\n      this._shortWeekdaysParse = [];\n      this._fullWeekdaysParse = [];\n    }\n\n    for (i = 0; i < 7; i++) {\n      // make the regex if we don't have it already\n      mom = createUTC([2000, 1]).day(i);\n\n      if (strict && !this._fullWeekdaysParse[i]) {\n        this._fullWeekdaysParse[i] = new RegExp('^' + this.weekdays(mom, '').replace('.', '\\\\.?') + '$', 'i');\n        this._shortWeekdaysParse[i] = new RegExp('^' + this.weekdaysShort(mom, '').replace('.', '\\\\.?') + '$', 'i');\n        this._minWeekdaysParse[i] = new RegExp('^' + this.weekdaysMin(mom, '').replace('.', '\\\\.?') + '$', 'i');\n      }\n\n      if (!this._weekdaysParse[i]) {\n        regex = '^' + this.weekdays(mom, '') + '|^' + this.weekdaysShort(mom, '') + '|^' + this.weekdaysMin(mom, '');\n        this._weekdaysParse[i] = new RegExp(regex.replace('.', ''), 'i');\n      } // test the regex\n\n\n      if (strict && format === 'dddd' && this._fullWeekdaysParse[i].test(weekdayName)) {\n        return i;\n      } else if (strict && format === 'ddd' && this._shortWeekdaysParse[i].test(weekdayName)) {\n        return i;\n      } else if (strict && format === 'dd' && this._minWeekdaysParse[i].test(weekdayName)) {\n        return i;\n      } else if (!strict && this._weekdaysParse[i].test(weekdayName)) {\n        return i;\n      }\n    }\n  } // MOMENTS\n\n\n  function getSetDayOfWeek(input) {\n    if (!this.isValid()) {\n      return input != null ? this : NaN;\n    }\n\n    var day = this._isUTC ? this._d.getUTCDay() : this._d.getDay();\n\n    if (input != null) {\n      input = parseWeekday(input, this.localeData());\n      return this.add(input - day, 'd');\n    } else {\n      return day;\n    }\n  }\n\n  function getSetLocaleDayOfWeek(input) {\n    if (!this.isValid()) {\n      return input != null ? this : NaN;\n    }\n\n    var weekday = (this.day() + 7 - this.localeData()._week.dow) % 7;\n    return input == null ? weekday : this.add(input - weekday, 'd');\n  }\n\n  function getSetISODayOfWeek(input) {\n    if (!this.isValid()) {\n      return input != null ? this : NaN;\n    } // behaves the same as moment#day except\n    // as a getter, returns 7 instead of 0 (1-7 range instead of 0-6)\n    // as a setter, sunday should belong to the previous week.\n\n\n    if (input != null) {\n      var weekday = parseIsoWeekday(input, this.localeData());\n      return this.day(this.day() % 7 ? weekday : weekday - 7);\n    } else {\n      return this.day() || 7;\n    }\n  }\n\n  var defaultWeekdaysRegex = matchWord;\n\n  function weekdaysRegex(isStrict) {\n    if (this._weekdaysParseExact) {\n      if (!hasOwnProp(this, '_weekdaysRegex')) {\n        computeWeekdaysParse.call(this);\n      }\n\n      if (isStrict) {\n        return this._weekdaysStrictRegex;\n      } else {\n        return this._weekdaysRegex;\n      }\n    } else {\n      if (!hasOwnProp(this, '_weekdaysRegex')) {\n        this._weekdaysRegex = defaultWeekdaysRegex;\n      }\n\n      return this._weekdaysStrictRegex && isStrict ? this._weekdaysStrictRegex : this._weekdaysRegex;\n    }\n  }\n\n  var defaultWeekdaysShortRegex = matchWord;\n\n  function weekdaysShortRegex(isStrict) {\n    if (this._weekdaysParseExact) {\n      if (!hasOwnProp(this, '_weekdaysRegex')) {\n        computeWeekdaysParse.call(this);\n      }\n\n      if (isStrict) {\n        return this._weekdaysShortStrictRegex;\n      } else {\n        return this._weekdaysShortRegex;\n      }\n    } else {\n      if (!hasOwnProp(this, '_weekdaysShortRegex')) {\n        this._weekdaysShortRegex = defaultWeekdaysShortRegex;\n      }\n\n      return this._weekdaysShortStrictRegex && isStrict ? this._weekdaysShortStrictRegex : this._weekdaysShortRegex;\n    }\n  }\n\n  var defaultWeekdaysMinRegex = matchWord;\n\n  function weekdaysMinRegex(isStrict) {\n    if (this._weekdaysParseExact) {\n      if (!hasOwnProp(this, '_weekdaysRegex')) {\n        computeWeekdaysParse.call(this);\n      }\n\n      if (isStrict) {\n        return this._weekdaysMinStrictRegex;\n      } else {\n        return this._weekdaysMinRegex;\n      }\n    } else {\n      if (!hasOwnProp(this, '_weekdaysMinRegex')) {\n        this._weekdaysMinRegex = defaultWeekdaysMinRegex;\n      }\n\n      return this._weekdaysMinStrictRegex && isStrict ? this._weekdaysMinStrictRegex : this._weekdaysMinRegex;\n    }\n  }\n\n  function computeWeekdaysParse() {\n    function cmpLenRev(a, b) {\n      return b.length - a.length;\n    }\n\n    var minPieces = [],\n        shortPieces = [],\n        longPieces = [],\n        mixedPieces = [],\n        i,\n        mom,\n        minp,\n        shortp,\n        longp;\n\n    for (i = 0; i < 7; i++) {\n      // make the regex if we don't have it already\n      mom = createUTC([2000, 1]).day(i);\n      minp = this.weekdaysMin(mom, '');\n      shortp = this.weekdaysShort(mom, '');\n      longp = this.weekdays(mom, '');\n      minPieces.push(minp);\n      shortPieces.push(shortp);\n      longPieces.push(longp);\n      mixedPieces.push(minp);\n      mixedPieces.push(shortp);\n      mixedPieces.push(longp);\n    } // Sorting makes sure if one weekday (or abbr) is a prefix of another it\n    // will match the longer piece.\n\n\n    minPieces.sort(cmpLenRev);\n    shortPieces.sort(cmpLenRev);\n    longPieces.sort(cmpLenRev);\n    mixedPieces.sort(cmpLenRev);\n\n    for (i = 0; i < 7; i++) {\n      shortPieces[i] = regexEscape(shortPieces[i]);\n      longPieces[i] = regexEscape(longPieces[i]);\n      mixedPieces[i] = regexEscape(mixedPieces[i]);\n    }\n\n    this._weekdaysRegex = new RegExp('^(' + mixedPieces.join('|') + ')', 'i');\n    this._weekdaysShortRegex = this._weekdaysRegex;\n    this._weekdaysMinRegex = this._weekdaysRegex;\n    this._weekdaysStrictRegex = new RegExp('^(' + longPieces.join('|') + ')', 'i');\n    this._weekdaysShortStrictRegex = new RegExp('^(' + shortPieces.join('|') + ')', 'i');\n    this._weekdaysMinStrictRegex = new RegExp('^(' + minPieces.join('|') + ')', 'i');\n  } // FORMATTING\n\n\n  function hFormat() {\n    return this.hours() % 12 || 12;\n  }\n\n  function kFormat() {\n    return this.hours() || 24;\n  }\n\n  addFormatToken('H', ['HH', 2], 0, 'hour');\n  addFormatToken('h', ['hh', 2], 0, hFormat);\n  addFormatToken('k', ['kk', 2], 0, kFormat);\n  addFormatToken('hmm', 0, 0, function () {\n    return '' + hFormat.apply(this) + zeroFill(this.minutes(), 2);\n  });\n  addFormatToken('hmmss', 0, 0, function () {\n    return '' + hFormat.apply(this) + zeroFill(this.minutes(), 2) + zeroFill(this.seconds(), 2);\n  });\n  addFormatToken('Hmm', 0, 0, function () {\n    return '' + this.hours() + zeroFill(this.minutes(), 2);\n  });\n  addFormatToken('Hmmss', 0, 0, function () {\n    return '' + this.hours() + zeroFill(this.minutes(), 2) + zeroFill(this.seconds(), 2);\n  });\n\n  function meridiem(token, lowercase) {\n    addFormatToken(token, 0, 0, function () {\n      return this.localeData().meridiem(this.hours(), this.minutes(), lowercase);\n    });\n  }\n\n  meridiem('a', true);\n  meridiem('A', false); // ALIASES\n\n  addUnitAlias('hour', 'h'); // PRIORITY\n\n  addUnitPriority('hour', 13); // PARSING\n\n  function matchMeridiem(isStrict, locale) {\n    return locale._meridiemParse;\n  }\n\n  addRegexToken('a', matchMeridiem);\n  addRegexToken('A', matchMeridiem);\n  addRegexToken('H', match1to2);\n  addRegexToken('h', match1to2);\n  addRegexToken('k', match1to2);\n  addRegexToken('HH', match1to2, match2);\n  addRegexToken('hh', match1to2, match2);\n  addRegexToken('kk', match1to2, match2);\n  addRegexToken('hmm', match3to4);\n  addRegexToken('hmmss', match5to6);\n  addRegexToken('Hmm', match3to4);\n  addRegexToken('Hmmss', match5to6);\n  addParseToken(['H', 'HH'], HOUR);\n  addParseToken(['k', 'kk'], function (input, array, config) {\n    var kInput = toInt(input);\n    array[HOUR] = kInput === 24 ? 0 : kInput;\n  });\n  addParseToken(['a', 'A'], function (input, array, config) {\n    config._isPm = config._locale.isPM(input);\n    config._meridiem = input;\n  });\n  addParseToken(['h', 'hh'], function (input, array, config) {\n    array[HOUR] = toInt(input);\n    getParsingFlags(config).bigHour = true;\n  });\n  addParseToken('hmm', function (input, array, config) {\n    var pos = input.length - 2;\n    array[HOUR] = toInt(input.substr(0, pos));\n    array[MINUTE] = toInt(input.substr(pos));\n    getParsingFlags(config).bigHour = true;\n  });\n  addParseToken('hmmss', function (input, array, config) {\n    var pos1 = input.length - 4;\n    var pos2 = input.length - 2;\n    array[HOUR] = toInt(input.substr(0, pos1));\n    array[MINUTE] = toInt(input.substr(pos1, 2));\n    array[SECOND] = toInt(input.substr(pos2));\n    getParsingFlags(config).bigHour = true;\n  });\n  addParseToken('Hmm', function (input, array, config) {\n    var pos = input.length - 2;\n    array[HOUR] = toInt(input.substr(0, pos));\n    array[MINUTE] = toInt(input.substr(pos));\n  });\n  addParseToken('Hmmss', function (input, array, config) {\n    var pos1 = input.length - 4;\n    var pos2 = input.length - 2;\n    array[HOUR] = toInt(input.substr(0, pos1));\n    array[MINUTE] = toInt(input.substr(pos1, 2));\n    array[SECOND] = toInt(input.substr(pos2));\n  }); // LOCALES\n\n  function localeIsPM(input) {\n    // IE8 Quirks Mode & IE7 Standards Mode do not allow accessing strings like arrays\n    // Using charAt should be more compatible.\n    return (input + '').toLowerCase().charAt(0) === 'p';\n  }\n\n  var defaultLocaleMeridiemParse = /[ap]\\.?m?\\.?/i;\n\n  function localeMeridiem(hours, minutes, isLower) {\n    if (hours > 11) {\n      return isLower ? 'pm' : 'PM';\n    } else {\n      return isLower ? 'am' : 'AM';\n    }\n  } // MOMENTS\n  // Setting the hour should keep the time, because the user explicitly\n  // specified which hour they want. So trying to maintain the same hour (in\n  // a new timezone) makes sense. Adding/subtracting hours does not follow\n  // this rule.\n\n\n  var getSetHour = makeGetSet('Hours', true);\n  var baseConfig = {\n    calendar: defaultCalendar,\n    longDateFormat: defaultLongDateFormat,\n    invalidDate: defaultInvalidDate,\n    ordinal: defaultOrdinal,\n    dayOfMonthOrdinalParse: defaultDayOfMonthOrdinalParse,\n    relativeTime: defaultRelativeTime,\n    months: defaultLocaleMonths,\n    monthsShort: defaultLocaleMonthsShort,\n    week: defaultLocaleWeek,\n    weekdays: defaultLocaleWeekdays,\n    weekdaysMin: defaultLocaleWeekdaysMin,\n    weekdaysShort: defaultLocaleWeekdaysShort,\n    meridiemParse: defaultLocaleMeridiemParse\n  }; // internal storage for locale config files\n\n  var locales = {};\n  var localeFamilies = {};\n  var globalLocale;\n\n  function normalizeLocale(key) {\n    return key ? key.toLowerCase().replace('_', '-') : key;\n  } // pick the locale from the array\n  // try ['en-au', 'en-gb'] as 'en-au', 'en-gb', 'en', as in move through the list trying each\n  // substring from most specific to least, but move to the next array item if it's a more specific variant than the current root\n\n\n  function chooseLocale(names) {\n    var i = 0,\n        j,\n        next,\n        locale,\n        split;\n\n    while (i < names.length) {\n      split = normalizeLocale(names[i]).split('-');\n      j = split.length;\n      next = normalizeLocale(names[i + 1]);\n      next = next ? next.split('-') : null;\n\n      while (j > 0) {\n        locale = loadLocale(split.slice(0, j).join('-'));\n\n        if (locale) {\n          return locale;\n        }\n\n        if (next && next.length >= j && compareArrays(split, next, true) >= j - 1) {\n          //the next array item is better than a shallower substring of this one\n          break;\n        }\n\n        j--;\n      }\n\n      i++;\n    }\n\n    return globalLocale;\n  }\n\n  function loadLocale(name) {\n    var oldLocale = null; // TODO: Find a better way to register and load all the locales in Node\n\n    if (!locales[name] && typeof module !== 'undefined' && module && module.exports) {\n      try {\n        oldLocale = globalLocale._abbr;\n        var aliasedRequire = require;\n        aliasedRequire('./locale/' + name);\n        getSetGlobalLocale(oldLocale);\n      } catch (e) {}\n    }\n\n    return locales[name];\n  } // This function will load locale and then set the global locale.  If\n  // no arguments are passed in, it will simply return the current global\n  // locale key.\n\n\n  function getSetGlobalLocale(key, values) {\n    var data;\n\n    if (key) {\n      if (isUndefined(values)) {\n        data = getLocale(key);\n      } else {\n        data = defineLocale(key, values);\n      }\n\n      if (data) {\n        // moment.duration._locale = moment._locale = data;\n        globalLocale = data;\n      } else {\n        if (typeof console !== 'undefined' && console.warn) {\n          //warn user if arguments are passed but the locale could not be set\n          console.warn('Locale ' + key + ' not found. Did you forget to load it?');\n        }\n      }\n    }\n\n    return globalLocale._abbr;\n  }\n\n  function defineLocale(name, config) {\n    if (config !== null) {\n      var locale,\n          parentConfig = baseConfig;\n      config.abbr = name;\n\n      if (locales[name] != null) {\n        deprecateSimple('defineLocaleOverride', 'use moment.updateLocale(localeName, config) to change ' + 'an existing locale. moment.defineLocale(localeName, ' + 'config) should only be used for creating a new locale ' + 'See http://momentjs.com/guides/#/warnings/define-locale/ for more info.');\n        parentConfig = locales[name]._config;\n      } else if (config.parentLocale != null) {\n        if (locales[config.parentLocale] != null) {\n          parentConfig = locales[config.parentLocale]._config;\n        } else {\n          locale = loadLocale(config.parentLocale);\n\n          if (locale != null) {\n            parentConfig = locale._config;\n          } else {\n            if (!localeFamilies[config.parentLocale]) {\n              localeFamilies[config.parentLocale] = [];\n            }\n\n            localeFamilies[config.parentLocale].push({\n              name: name,\n              config: config\n            });\n            return null;\n          }\n        }\n      }\n\n      locales[name] = new Locale(mergeConfigs(parentConfig, config));\n\n      if (localeFamilies[name]) {\n        localeFamilies[name].forEach(function (x) {\n          defineLocale(x.name, x.config);\n        });\n      } // backwards compat for now: also set the locale\n      // make sure we set the locale AFTER all child locales have been\n      // created, so we won't end up with the child locale set.\n\n\n      getSetGlobalLocale(name);\n      return locales[name];\n    } else {\n      // useful for testing\n      delete locales[name];\n      return null;\n    }\n  }\n\n  function updateLocale(name, config) {\n    if (config != null) {\n      var locale,\n          tmpLocale,\n          parentConfig = baseConfig; // MERGE\n\n      tmpLocale = loadLocale(name);\n\n      if (tmpLocale != null) {\n        parentConfig = tmpLocale._config;\n      }\n\n      config = mergeConfigs(parentConfig, config);\n      locale = new Locale(config);\n      locale.parentLocale = locales[name];\n      locales[name] = locale; // backwards compat for now: also set the locale\n\n      getSetGlobalLocale(name);\n    } else {\n      // pass null for config to unupdate, useful for tests\n      if (locales[name] != null) {\n        if (locales[name].parentLocale != null) {\n          locales[name] = locales[name].parentLocale;\n        } else if (locales[name] != null) {\n          delete locales[name];\n        }\n      }\n    }\n\n    return locales[name];\n  } // returns locale data\n\n\n  function getLocale(key) {\n    var locale;\n\n    if (key && key._locale && key._locale._abbr) {\n      key = key._locale._abbr;\n    }\n\n    if (!key) {\n      return globalLocale;\n    }\n\n    if (!isArray(key)) {\n      //short-circuit everything else\n      locale = loadLocale(key);\n\n      if (locale) {\n        return locale;\n      }\n\n      key = [key];\n    }\n\n    return chooseLocale(key);\n  }\n\n  function listLocales() {\n    return keys(locales);\n  }\n\n  function checkOverflow(m) {\n    var overflow;\n    var a = m._a;\n\n    if (a && getParsingFlags(m).overflow === -2) {\n      overflow = a[MONTH] < 0 || a[MONTH] > 11 ? MONTH : a[DATE] < 1 || a[DATE] > daysInMonth(a[YEAR], a[MONTH]) ? DATE : a[HOUR] < 0 || a[HOUR] > 24 || a[HOUR] === 24 && (a[MINUTE] !== 0 || a[SECOND] !== 0 || a[MILLISECOND] !== 0) ? HOUR : a[MINUTE] < 0 || a[MINUTE] > 59 ? MINUTE : a[SECOND] < 0 || a[SECOND] > 59 ? SECOND : a[MILLISECOND] < 0 || a[MILLISECOND] > 999 ? MILLISECOND : -1;\n\n      if (getParsingFlags(m)._overflowDayOfYear && (overflow < YEAR || overflow > DATE)) {\n        overflow = DATE;\n      }\n\n      if (getParsingFlags(m)._overflowWeeks && overflow === -1) {\n        overflow = WEEK;\n      }\n\n      if (getParsingFlags(m)._overflowWeekday && overflow === -1) {\n        overflow = WEEKDAY;\n      }\n\n      getParsingFlags(m).overflow = overflow;\n    }\n\n    return m;\n  } // Pick the first defined of two or three arguments.\n\n\n  function defaults(a, b, c) {\n    if (a != null) {\n      return a;\n    }\n\n    if (b != null) {\n      return b;\n    }\n\n    return c;\n  }\n\n  function currentDateArray(config) {\n    // hooks is actually the exported moment object\n    var nowValue = new Date(hooks.now());\n\n    if (config._useUTC) {\n      return [nowValue.getUTCFullYear(), nowValue.getUTCMonth(), nowValue.getUTCDate()];\n    }\n\n    return [nowValue.getFullYear(), nowValue.getMonth(), nowValue.getDate()];\n  } // convert an array to a date.\n  // the array should mirror the parameters below\n  // note: all values past the year are optional and will default to the lowest possible value.\n  // [year, month, day , hour, minute, second, millisecond]\n\n\n  function configFromArray(config) {\n    var i,\n        date,\n        input = [],\n        currentDate,\n        expectedWeekday,\n        yearToUse;\n\n    if (config._d) {\n      return;\n    }\n\n    currentDate = currentDateArray(config); //compute day of the year from weeks and weekdays\n\n    if (config._w && config._a[DATE] == null && config._a[MONTH] == null) {\n      dayOfYearFromWeekInfo(config);\n    } //if the day of the year is set, figure out what it is\n\n\n    if (config._dayOfYear != null) {\n      yearToUse = defaults(config._a[YEAR], currentDate[YEAR]);\n\n      if (config._dayOfYear > daysInYear(yearToUse) || config._dayOfYear === 0) {\n        getParsingFlags(config)._overflowDayOfYear = true;\n      }\n\n      date = createUTCDate(yearToUse, 0, config._dayOfYear);\n      config._a[MONTH] = date.getUTCMonth();\n      config._a[DATE] = date.getUTCDate();\n    } // Default to current date.\n    // * if no year, month, day of month are given, default to today\n    // * if day of month is given, default month and year\n    // * if month is given, default only year\n    // * if year is given, don't default anything\n\n\n    for (i = 0; i < 3 && config._a[i] == null; ++i) {\n      config._a[i] = input[i] = currentDate[i];\n    } // Zero out whatever was not defaulted, including time\n\n\n    for (; i < 7; i++) {\n      config._a[i] = input[i] = config._a[i] == null ? i === 2 ? 1 : 0 : config._a[i];\n    } // Check for 24:00:00.000\n\n\n    if (config._a[HOUR] === 24 && config._a[MINUTE] === 0 && config._a[SECOND] === 0 && config._a[MILLISECOND] === 0) {\n      config._nextDay = true;\n      config._a[HOUR] = 0;\n    }\n\n    config._d = (config._useUTC ? createUTCDate : createDate).apply(null, input);\n    expectedWeekday = config._useUTC ? config._d.getUTCDay() : config._d.getDay(); // Apply timezone offset from input. The actual utcOffset can be changed\n    // with parseZone.\n\n    if (config._tzm != null) {\n      config._d.setUTCMinutes(config._d.getUTCMinutes() - config._tzm);\n    }\n\n    if (config._nextDay) {\n      config._a[HOUR] = 24;\n    } // check for mismatching day of week\n\n\n    if (config._w && typeof config._w.d !== 'undefined' && config._w.d !== expectedWeekday) {\n      getParsingFlags(config).weekdayMismatch = true;\n    }\n  }\n\n  function dayOfYearFromWeekInfo(config) {\n    var w, weekYear, week, weekday, dow, doy, temp, weekdayOverflow;\n    w = config._w;\n\n    if (w.GG != null || w.W != null || w.E != null) {\n      dow = 1;\n      doy = 4; // TODO: We need to take the current isoWeekYear, but that depends on\n      // how we interpret now (local, utc, fixed offset). So create\n      // a now version of current config (take local/utc/offset flags, and\n      // create now).\n\n      weekYear = defaults(w.GG, config._a[YEAR], weekOfYear(createLocal(), 1, 4).year);\n      week = defaults(w.W, 1);\n      weekday = defaults(w.E, 1);\n\n      if (weekday < 1 || weekday > 7) {\n        weekdayOverflow = true;\n      }\n    } else {\n      dow = config._locale._week.dow;\n      doy = config._locale._week.doy;\n      var curWeek = weekOfYear(createLocal(), dow, doy);\n      weekYear = defaults(w.gg, config._a[YEAR], curWeek.year); // Default to current week.\n\n      week = defaults(w.w, curWeek.week);\n\n      if (w.d != null) {\n        // weekday -- low day numbers are considered next week\n        weekday = w.d;\n\n        if (weekday < 0 || weekday > 6) {\n          weekdayOverflow = true;\n        }\n      } else if (w.e != null) {\n        // local weekday -- counting starts from beginning of week\n        weekday = w.e + dow;\n\n        if (w.e < 0 || w.e > 6) {\n          weekdayOverflow = true;\n        }\n      } else {\n        // default to beginning of week\n        weekday = dow;\n      }\n    }\n\n    if (week < 1 || week > weeksInYear(weekYear, dow, doy)) {\n      getParsingFlags(config)._overflowWeeks = true;\n    } else if (weekdayOverflow != null) {\n      getParsingFlags(config)._overflowWeekday = true;\n    } else {\n      temp = dayOfYearFromWeeks(weekYear, week, weekday, dow, doy);\n      config._a[YEAR] = temp.year;\n      config._dayOfYear = temp.dayOfYear;\n    }\n  } // iso 8601 regex\n  // 0000-00-00 0000-W00 or 0000-W00-0 + T + 00 or 00:00 or 00:00:00 or 00:00:00.000 + +00:00 or +0000 or +00)\n\n\n  var extendedIsoRegex = /^\\s*((?:[+-]\\d{6}|\\d{4})-(?:\\d\\d-\\d\\d|W\\d\\d-\\d|W\\d\\d|\\d\\d\\d|\\d\\d))(?:(T| )(\\d\\d(?::\\d\\d(?::\\d\\d(?:[.,]\\d+)?)?)?)([\\+\\-]\\d\\d(?::?\\d\\d)?|\\s*Z)?)?$/;\n  var basicIsoRegex = /^\\s*((?:[+-]\\d{6}|\\d{4})(?:\\d\\d\\d\\d|W\\d\\d\\d|W\\d\\d|\\d\\d\\d|\\d\\d))(?:(T| )(\\d\\d(?:\\d\\d(?:\\d\\d(?:[.,]\\d+)?)?)?)([\\+\\-]\\d\\d(?::?\\d\\d)?|\\s*Z)?)?$/;\n  var tzRegex = /Z|[+-]\\d\\d(?::?\\d\\d)?/;\n  var isoDates = [['YYYYYY-MM-DD', /[+-]\\d{6}-\\d\\d-\\d\\d/], ['YYYY-MM-DD', /\\d{4}-\\d\\d-\\d\\d/], ['GGGG-[W]WW-E', /\\d{4}-W\\d\\d-\\d/], ['GGGG-[W]WW', /\\d{4}-W\\d\\d/, false], ['YYYY-DDD', /\\d{4}-\\d{3}/], ['YYYY-MM', /\\d{4}-\\d\\d/, false], ['YYYYYYMMDD', /[+-]\\d{10}/], ['YYYYMMDD', /\\d{8}/], // YYYYMM is NOT allowed by the standard\n  ['GGGG[W]WWE', /\\d{4}W\\d{3}/], ['GGGG[W]WW', /\\d{4}W\\d{2}/, false], ['YYYYDDD', /\\d{7}/]]; // iso time formats and regexes\n\n  var isoTimes = [['HH:mm:ss.SSSS', /\\d\\d:\\d\\d:\\d\\d\\.\\d+/], ['HH:mm:ss,SSSS', /\\d\\d:\\d\\d:\\d\\d,\\d+/], ['HH:mm:ss', /\\d\\d:\\d\\d:\\d\\d/], ['HH:mm', /\\d\\d:\\d\\d/], ['HHmmss.SSSS', /\\d\\d\\d\\d\\d\\d\\.\\d+/], ['HHmmss,SSSS', /\\d\\d\\d\\d\\d\\d,\\d+/], ['HHmmss', /\\d\\d\\d\\d\\d\\d/], ['HHmm', /\\d\\d\\d\\d/], ['HH', /\\d\\d/]];\n  var aspNetJsonRegex = /^\\/?Date\\((\\-?\\d+)/i; // date from iso format\n\n  function configFromISO(config) {\n    var i,\n        l,\n        string = config._i,\n        match = extendedIsoRegex.exec(string) || basicIsoRegex.exec(string),\n        allowTime,\n        dateFormat,\n        timeFormat,\n        tzFormat;\n\n    if (match) {\n      getParsingFlags(config).iso = true;\n\n      for (i = 0, l = isoDates.length; i < l; i++) {\n        if (isoDates[i][1].exec(match[1])) {\n          dateFormat = isoDates[i][0];\n          allowTime = isoDates[i][2] !== false;\n          break;\n        }\n      }\n\n      if (dateFormat == null) {\n        config._isValid = false;\n        return;\n      }\n\n      if (match[3]) {\n        for (i = 0, l = isoTimes.length; i < l; i++) {\n          if (isoTimes[i][1].exec(match[3])) {\n            // match[2] should be 'T' or space\n            timeFormat = (match[2] || ' ') + isoTimes[i][0];\n            break;\n          }\n        }\n\n        if (timeFormat == null) {\n          config._isValid = false;\n          return;\n        }\n      }\n\n      if (!allowTime && timeFormat != null) {\n        config._isValid = false;\n        return;\n      }\n\n      if (match[4]) {\n        if (tzRegex.exec(match[4])) {\n          tzFormat = 'Z';\n        } else {\n          config._isValid = false;\n          return;\n        }\n      }\n\n      config._f = dateFormat + (timeFormat || '') + (tzFormat || '');\n      configFromStringAndFormat(config);\n    } else {\n      config._isValid = false;\n    }\n  } // RFC 2822 regex: For details see https://tools.ietf.org/html/rfc2822#section-3.3\n\n\n  var rfc2822 = /^(?:(Mon|Tue|Wed|Thu|Fri|Sat|Sun),?\\s)?(\\d{1,2})\\s(Jan|Feb|Mar|Apr|May|Jun|Jul|Aug|Sep|Oct|Nov|Dec)\\s(\\d{2,4})\\s(\\d\\d):(\\d\\d)(?::(\\d\\d))?\\s(?:(UT|GMT|[ECMP][SD]T)|([Zz])|([+-]\\d{4}))$/;\n\n  function extractFromRFC2822Strings(yearStr, monthStr, dayStr, hourStr, minuteStr, secondStr) {\n    var result = [untruncateYear(yearStr), defaultLocaleMonthsShort.indexOf(monthStr), parseInt(dayStr, 10), parseInt(hourStr, 10), parseInt(minuteStr, 10)];\n\n    if (secondStr) {\n      result.push(parseInt(secondStr, 10));\n    }\n\n    return result;\n  }\n\n  function untruncateYear(yearStr) {\n    var year = parseInt(yearStr, 10);\n\n    if (year <= 49) {\n      return 2000 + year;\n    } else if (year <= 999) {\n      return 1900 + year;\n    }\n\n    return year;\n  }\n\n  function preprocessRFC2822(s) {\n    // Remove comments and folding whitespace and replace multiple-spaces with a single space\n    return s.replace(/\\([^)]*\\)|[\\n\\t]/g, ' ').replace(/(\\s\\s+)/g, ' ').replace(/^\\s\\s*/, '').replace(/\\s\\s*$/, '');\n  }\n\n  function checkWeekday(weekdayStr, parsedInput, config) {\n    if (weekdayStr) {\n      // TODO: Replace the vanilla JS Date object with an indepentent day-of-week check.\n      var weekdayProvided = defaultLocaleWeekdaysShort.indexOf(weekdayStr),\n          weekdayActual = new Date(parsedInput[0], parsedInput[1], parsedInput[2]).getDay();\n\n      if (weekdayProvided !== weekdayActual) {\n        getParsingFlags(config).weekdayMismatch = true;\n        config._isValid = false;\n        return false;\n      }\n    }\n\n    return true;\n  }\n\n  var obsOffsets = {\n    UT: 0,\n    GMT: 0,\n    EDT: -4 * 60,\n    EST: -5 * 60,\n    CDT: -5 * 60,\n    CST: -6 * 60,\n    MDT: -6 * 60,\n    MST: -7 * 60,\n    PDT: -7 * 60,\n    PST: -8 * 60\n  };\n\n  function calculateOffset(obsOffset, militaryOffset, numOffset) {\n    if (obsOffset) {\n      return obsOffsets[obsOffset];\n    } else if (militaryOffset) {\n      // the only allowed military tz is Z\n      return 0;\n    } else {\n      var hm = parseInt(numOffset, 10);\n      var m = hm % 100,\n          h = (hm - m) / 100;\n      return h * 60 + m;\n    }\n  } // date and time from ref 2822 format\n\n\n  function configFromRFC2822(config) {\n    var match = rfc2822.exec(preprocessRFC2822(config._i));\n\n    if (match) {\n      var parsedArray = extractFromRFC2822Strings(match[4], match[3], match[2], match[5], match[6], match[7]);\n\n      if (!checkWeekday(match[1], parsedArray, config)) {\n        return;\n      }\n\n      config._a = parsedArray;\n      config._tzm = calculateOffset(match[8], match[9], match[10]);\n      config._d = createUTCDate.apply(null, config._a);\n\n      config._d.setUTCMinutes(config._d.getUTCMinutes() - config._tzm);\n\n      getParsingFlags(config).rfc2822 = true;\n    } else {\n      config._isValid = false;\n    }\n  } // date from iso format or fallback\n\n\n  function configFromString(config) {\n    var matched = aspNetJsonRegex.exec(config._i);\n\n    if (matched !== null) {\n      config._d = new Date(+matched[1]);\n      return;\n    }\n\n    configFromISO(config);\n\n    if (config._isValid === false) {\n      delete config._isValid;\n    } else {\n      return;\n    }\n\n    configFromRFC2822(config);\n\n    if (config._isValid === false) {\n      delete config._isValid;\n    } else {\n      return;\n    } // Final attempt, use Input Fallback\n\n\n    hooks.createFromInputFallback(config);\n  }\n\n  hooks.createFromInputFallback = deprecate('value provided is not in a recognized RFC2822 or ISO format. moment construction falls back to js Date(), ' + 'which is not reliable across all browsers and versions. Non RFC2822/ISO date formats are ' + 'discouraged and will be removed in an upcoming major release. Please refer to ' + 'http://momentjs.com/guides/#/warnings/js-date/ for more info.', function (config) {\n    config._d = new Date(config._i + (config._useUTC ? ' UTC' : ''));\n  }); // constant that refers to the ISO standard\n\n  hooks.ISO_8601 = function () {}; // constant that refers to the RFC 2822 form\n\n\n  hooks.RFC_2822 = function () {}; // date from string and format string\n\n\n  function configFromStringAndFormat(config) {\n    // TODO: Move this to another part of the creation flow to prevent circular deps\n    if (config._f === hooks.ISO_8601) {\n      configFromISO(config);\n      return;\n    }\n\n    if (config._f === hooks.RFC_2822) {\n      configFromRFC2822(config);\n      return;\n    }\n\n    config._a = [];\n    getParsingFlags(config).empty = true; // This array is used to make a Date, either with `new Date` or `Date.UTC`\n\n    var string = '' + config._i,\n        i,\n        parsedInput,\n        tokens,\n        token,\n        skipped,\n        stringLength = string.length,\n        totalParsedInputLength = 0;\n    tokens = expandFormat(config._f, config._locale).match(formattingTokens) || [];\n\n    for (i = 0; i < tokens.length; i++) {\n      token = tokens[i];\n      parsedInput = (string.match(getParseRegexForToken(token, config)) || [])[0]; // console.log('token', token, 'parsedInput', parsedInput,\n      //         'regex', getParseRegexForToken(token, config));\n\n      if (parsedInput) {\n        skipped = string.substr(0, string.indexOf(parsedInput));\n\n        if (skipped.length > 0) {\n          getParsingFlags(config).unusedInput.push(skipped);\n        }\n\n        string = string.slice(string.indexOf(parsedInput) + parsedInput.length);\n        totalParsedInputLength += parsedInput.length;\n      } // don't parse if it's not a known token\n\n\n      if (formatTokenFunctions[token]) {\n        if (parsedInput) {\n          getParsingFlags(config).empty = false;\n        } else {\n          getParsingFlags(config).unusedTokens.push(token);\n        }\n\n        addTimeToArrayFromToken(token, parsedInput, config);\n      } else if (config._strict && !parsedInput) {\n        getParsingFlags(config).unusedTokens.push(token);\n      }\n    } // add remaining unparsed input length to the string\n\n\n    getParsingFlags(config).charsLeftOver = stringLength - totalParsedInputLength;\n\n    if (string.length > 0) {\n      getParsingFlags(config).unusedInput.push(string);\n    } // clear _12h flag if hour is <= 12\n\n\n    if (config._a[HOUR] <= 12 && getParsingFlags(config).bigHour === true && config._a[HOUR] > 0) {\n      getParsingFlags(config).bigHour = undefined;\n    }\n\n    getParsingFlags(config).parsedDateParts = config._a.slice(0);\n    getParsingFlags(config).meridiem = config._meridiem; // handle meridiem\n\n    config._a[HOUR] = meridiemFixWrap(config._locale, config._a[HOUR], config._meridiem);\n    configFromArray(config);\n    checkOverflow(config);\n  }\n\n  function meridiemFixWrap(locale, hour, meridiem) {\n    var isPm;\n\n    if (meridiem == null) {\n      // nothing to do\n      return hour;\n    }\n\n    if (locale.meridiemHour != null) {\n      return locale.meridiemHour(hour, meridiem);\n    } else if (locale.isPM != null) {\n      // Fallback\n      isPm = locale.isPM(meridiem);\n\n      if (isPm && hour < 12) {\n        hour += 12;\n      }\n\n      if (!isPm && hour === 12) {\n        hour = 0;\n      }\n\n      return hour;\n    } else {\n      // this is not supposed to happen\n      return hour;\n    }\n  } // date from string and array of format strings\n\n\n  function configFromStringAndArray(config) {\n    var tempConfig, bestMoment, scoreToBeat, i, currentScore;\n\n    if (config._f.length === 0) {\n      getParsingFlags(config).invalidFormat = true;\n      config._d = new Date(NaN);\n      return;\n    }\n\n    for (i = 0; i < config._f.length; i++) {\n      currentScore = 0;\n      tempConfig = copyConfig({}, config);\n\n      if (config._useUTC != null) {\n        tempConfig._useUTC = config._useUTC;\n      }\n\n      tempConfig._f = config._f[i];\n      configFromStringAndFormat(tempConfig);\n\n      if (!isValid(tempConfig)) {\n        continue;\n      } // if there is any input that was not parsed add a penalty for that format\n\n\n      currentScore += getParsingFlags(tempConfig).charsLeftOver; //or tokens\n\n      currentScore += getParsingFlags(tempConfig).unusedTokens.length * 10;\n      getParsingFlags(tempConfig).score = currentScore;\n\n      if (scoreToBeat == null || currentScore < scoreToBeat) {\n        scoreToBeat = currentScore;\n        bestMoment = tempConfig;\n      }\n    }\n\n    extend(config, bestMoment || tempConfig);\n  }\n\n  function configFromObject(config) {\n    if (config._d) {\n      return;\n    }\n\n    var i = normalizeObjectUnits(config._i);\n    config._a = map([i.year, i.month, i.day || i.date, i.hour, i.minute, i.second, i.millisecond], function (obj) {\n      return obj && parseInt(obj, 10);\n    });\n    configFromArray(config);\n  }\n\n  function createFromConfig(config) {\n    var res = new Moment(checkOverflow(prepareConfig(config)));\n\n    if (res._nextDay) {\n      // Adding is smart enough around DST\n      res.add(1, 'd');\n      res._nextDay = undefined;\n    }\n\n    return res;\n  }\n\n  function prepareConfig(config) {\n    var input = config._i,\n        format = config._f;\n    config._locale = config._locale || getLocale(config._l);\n\n    if (input === null || format === undefined && input === '') {\n      return createInvalid({\n        nullInput: true\n      });\n    }\n\n    if (typeof input === 'string') {\n      config._i = input = config._locale.preparse(input);\n    }\n\n    if (isMoment(input)) {\n      return new Moment(checkOverflow(input));\n    } else if (isDate(input)) {\n      config._d = input;\n    } else if (isArray(format)) {\n      configFromStringAndArray(config);\n    } else if (format) {\n      configFromStringAndFormat(config);\n    } else {\n      configFromInput(config);\n    }\n\n    if (!isValid(config)) {\n      config._d = null;\n    }\n\n    return config;\n  }\n\n  function configFromInput(config) {\n    var input = config._i;\n\n    if (isUndefined(input)) {\n      config._d = new Date(hooks.now());\n    } else if (isDate(input)) {\n      config._d = new Date(input.valueOf());\n    } else if (typeof input === 'string') {\n      configFromString(config);\n    } else if (isArray(input)) {\n      config._a = map(input.slice(0), function (obj) {\n        return parseInt(obj, 10);\n      });\n      configFromArray(config);\n    } else if (isObject(input)) {\n      configFromObject(config);\n    } else if (isNumber(input)) {\n      // from milliseconds\n      config._d = new Date(input);\n    } else {\n      hooks.createFromInputFallback(config);\n    }\n  }\n\n  function createLocalOrUTC(input, format, locale, strict, isUTC) {\n    var c = {};\n\n    if (locale === true || locale === false) {\n      strict = locale;\n      locale = undefined;\n    }\n\n    if (isObject(input) && isObjectEmpty(input) || isArray(input) && input.length === 0) {\n      input = undefined;\n    } // object construction must be done this way.\n    // https://github.com/moment/moment/issues/1423\n\n\n    c._isAMomentObject = true;\n    c._useUTC = c._isUTC = isUTC;\n    c._l = locale;\n    c._i = input;\n    c._f = format;\n    c._strict = strict;\n    return createFromConfig(c);\n  }\n\n  function createLocal(input, format, locale, strict) {\n    return createLocalOrUTC(input, format, locale, strict, false);\n  }\n\n  var prototypeMin = deprecate('moment().min is deprecated, use moment.max instead. http://momentjs.com/guides/#/warnings/min-max/', function () {\n    var other = createLocal.apply(null, arguments);\n\n    if (this.isValid() && other.isValid()) {\n      return other < this ? this : other;\n    } else {\n      return createInvalid();\n    }\n  });\n  var prototypeMax = deprecate('moment().max is deprecated, use moment.min instead. http://momentjs.com/guides/#/warnings/min-max/', function () {\n    var other = createLocal.apply(null, arguments);\n\n    if (this.isValid() && other.isValid()) {\n      return other > this ? this : other;\n    } else {\n      return createInvalid();\n    }\n  }); // Pick a moment m from moments so that m[fn](other) is true for all\n  // other. This relies on the function fn to be transitive.\n  //\n  // moments should either be an array of moment objects or an array, whose\n  // first element is an array of moment objects.\n\n  function pickBy(fn, moments) {\n    var res, i;\n\n    if (moments.length === 1 && isArray(moments[0])) {\n      moments = moments[0];\n    }\n\n    if (!moments.length) {\n      return createLocal();\n    }\n\n    res = moments[0];\n\n    for (i = 1; i < moments.length; ++i) {\n      if (!moments[i].isValid() || moments[i][fn](res)) {\n        res = moments[i];\n      }\n    }\n\n    return res;\n  } // TODO: Use [].sort instead?\n\n\n  function min() {\n    var args = [].slice.call(arguments, 0);\n    return pickBy('isBefore', args);\n  }\n\n  function max() {\n    var args = [].slice.call(arguments, 0);\n    return pickBy('isAfter', args);\n  }\n\n  var now = function now() {\n    return Date.now ? Date.now() : +new Date();\n  };\n\n  var ordering = ['year', 'quarter', 'month', 'week', 'day', 'hour', 'minute', 'second', 'millisecond'];\n\n  function isDurationValid(m) {\n    for (var key in m) {\n      if (!(indexOf.call(ordering, key) !== -1 && (m[key] == null || !isNaN(m[key])))) {\n        return false;\n      }\n    }\n\n    var unitHasDecimal = false;\n\n    for (var i = 0; i < ordering.length; ++i) {\n      if (m[ordering[i]]) {\n        if (unitHasDecimal) {\n          return false; // only allow non-integers for smallest unit\n        }\n\n        if (parseFloat(m[ordering[i]]) !== toInt(m[ordering[i]])) {\n          unitHasDecimal = true;\n        }\n      }\n    }\n\n    return true;\n  }\n\n  function isValid$1() {\n    return this._isValid;\n  }\n\n  function createInvalid$1() {\n    return createDuration(NaN);\n  }\n\n  function Duration(duration) {\n    var normalizedInput = normalizeObjectUnits(duration),\n        years = normalizedInput.year || 0,\n        quarters = normalizedInput.quarter || 0,\n        months = normalizedInput.month || 0,\n        weeks = normalizedInput.week || normalizedInput.isoWeek || 0,\n        days = normalizedInput.day || 0,\n        hours = normalizedInput.hour || 0,\n        minutes = normalizedInput.minute || 0,\n        seconds = normalizedInput.second || 0,\n        milliseconds = normalizedInput.millisecond || 0;\n    this._isValid = isDurationValid(normalizedInput); // representation for dateAddRemove\n\n    this._milliseconds = +milliseconds + seconds * 1e3 + // 1000\n    minutes * 6e4 + // 1000 * 60\n    hours * 1000 * 60 * 60; //using 1000 * 60 * 60 instead of 36e5 to avoid floating point rounding errors https://github.com/moment/moment/issues/2978\n    // Because of dateAddRemove treats 24 hours as different from a\n    // day when working around DST, we need to store them separately\n\n    this._days = +days + weeks * 7; // It is impossible to translate months into days without knowing\n    // which months you are are talking about, so we have to store\n    // it separately.\n\n    this._months = +months + quarters * 3 + years * 12;\n    this._data = {};\n    this._locale = getLocale();\n\n    this._bubble();\n  }\n\n  function isDuration(obj) {\n    return obj instanceof Duration;\n  }\n\n  function absRound(number) {\n    if (number < 0) {\n      return Math.round(-1 * number) * -1;\n    } else {\n      return Math.round(number);\n    }\n  } // FORMATTING\n\n\n  function offset(token, separator) {\n    addFormatToken(token, 0, 0, function () {\n      var offset = this.utcOffset();\n      var sign = '+';\n\n      if (offset < 0) {\n        offset = -offset;\n        sign = '-';\n      }\n\n      return sign + zeroFill(~~(offset / 60), 2) + separator + zeroFill(~~offset % 60, 2);\n    });\n  }\n\n  offset('Z', ':');\n  offset('ZZ', ''); // PARSING\n\n  addRegexToken('Z', matchShortOffset);\n  addRegexToken('ZZ', matchShortOffset);\n  addParseToken(['Z', 'ZZ'], function (input, array, config) {\n    config._useUTC = true;\n    config._tzm = offsetFromString(matchShortOffset, input);\n  }); // HELPERS\n  // timezone chunker\n  // '+10:00' > ['10',  '00']\n  // '-1530'  > ['-15', '30']\n\n  var chunkOffset = /([\\+\\-]|\\d\\d)/gi;\n\n  function offsetFromString(matcher, string) {\n    var matches = (string || '').match(matcher);\n\n    if (matches === null) {\n      return null;\n    }\n\n    var chunk = matches[matches.length - 1] || [];\n    var parts = (chunk + '').match(chunkOffset) || ['-', 0, 0];\n    var minutes = +(parts[1] * 60) + toInt(parts[2]);\n    return minutes === 0 ? 0 : parts[0] === '+' ? minutes : -minutes;\n  } // Return a moment from input, that is local/utc/zone equivalent to model.\n\n\n  function cloneWithOffset(input, model) {\n    var res, diff;\n\n    if (model._isUTC) {\n      res = model.clone();\n      diff = (isMoment(input) || isDate(input) ? input.valueOf() : createLocal(input).valueOf()) - res.valueOf(); // Use low-level api, because this fn is low-level api.\n\n      res._d.setTime(res._d.valueOf() + diff);\n\n      hooks.updateOffset(res, false);\n      return res;\n    } else {\n      return createLocal(input).local();\n    }\n  }\n\n  function getDateOffset(m) {\n    // On Firefox.24 Date#getTimezoneOffset returns a floating point.\n    // https://github.com/moment/moment/pull/1871\n    return -Math.round(m._d.getTimezoneOffset() / 15) * 15;\n  } // HOOKS\n  // This function will be called whenever a moment is mutated.\n  // It is intended to keep the offset in sync with the timezone.\n\n\n  hooks.updateOffset = function () {}; // MOMENTS\n  // keepLocalTime = true means only change the timezone, without\n  // affecting the local hour. So 5:31:26 +0300 --[utcOffset(2, true)]-->\n  // 5:31:26 +0200 It is possible that 5:31:26 doesn't exist with offset\n  // +0200, so we adjust the time as needed, to be valid.\n  //\n  // Keeping the time actually adds/subtracts (one hour)\n  // from the actual represented time. That is why we call updateOffset\n  // a second time. In case it wants us to change the offset again\n  // _changeInProgress == true case, then we have to adjust, because\n  // there is no such time in the given timezone.\n\n\n  function getSetOffset(input, keepLocalTime, keepMinutes) {\n    var offset = this._offset || 0,\n        localAdjust;\n\n    if (!this.isValid()) {\n      return input != null ? this : NaN;\n    }\n\n    if (input != null) {\n      if (typeof input === 'string') {\n        input = offsetFromString(matchShortOffset, input);\n\n        if (input === null) {\n          return this;\n        }\n      } else if (Math.abs(input) < 16 && !keepMinutes) {\n        input = input * 60;\n      }\n\n      if (!this._isUTC && keepLocalTime) {\n        localAdjust = getDateOffset(this);\n      }\n\n      this._offset = input;\n      this._isUTC = true;\n\n      if (localAdjust != null) {\n        this.add(localAdjust, 'm');\n      }\n\n      if (offset !== input) {\n        if (!keepLocalTime || this._changeInProgress) {\n          addSubtract(this, createDuration(input - offset, 'm'), 1, false);\n        } else if (!this._changeInProgress) {\n          this._changeInProgress = true;\n          hooks.updateOffset(this, true);\n          this._changeInProgress = null;\n        }\n      }\n\n      return this;\n    } else {\n      return this._isUTC ? offset : getDateOffset(this);\n    }\n  }\n\n  function getSetZone(input, keepLocalTime) {\n    if (input != null) {\n      if (typeof input !== 'string') {\n        input = -input;\n      }\n\n      this.utcOffset(input, keepLocalTime);\n      return this;\n    } else {\n      return -this.utcOffset();\n    }\n  }\n\n  function setOffsetToUTC(keepLocalTime) {\n    return this.utcOffset(0, keepLocalTime);\n  }\n\n  function setOffsetToLocal(keepLocalTime) {\n    if (this._isUTC) {\n      this.utcOffset(0, keepLocalTime);\n      this._isUTC = false;\n\n      if (keepLocalTime) {\n        this.subtract(getDateOffset(this), 'm');\n      }\n    }\n\n    return this;\n  }\n\n  function setOffsetToParsedOffset() {\n    if (this._tzm != null) {\n      this.utcOffset(this._tzm, false, true);\n    } else if (typeof this._i === 'string') {\n      var tZone = offsetFromString(matchOffset, this._i);\n\n      if (tZone != null) {\n        this.utcOffset(tZone);\n      } else {\n        this.utcOffset(0, true);\n      }\n    }\n\n    return this;\n  }\n\n  function hasAlignedHourOffset(input) {\n    if (!this.isValid()) {\n      return false;\n    }\n\n    input = input ? createLocal(input).utcOffset() : 0;\n    return (this.utcOffset() - input) % 60 === 0;\n  }\n\n  function isDaylightSavingTime() {\n    return this.utcOffset() > this.clone().month(0).utcOffset() || this.utcOffset() > this.clone().month(5).utcOffset();\n  }\n\n  function isDaylightSavingTimeShifted() {\n    if (!isUndefined(this._isDSTShifted)) {\n      return this._isDSTShifted;\n    }\n\n    var c = {};\n    copyConfig(c, this);\n    c = prepareConfig(c);\n\n    if (c._a) {\n      var other = c._isUTC ? createUTC(c._a) : createLocal(c._a);\n      this._isDSTShifted = this.isValid() && compareArrays(c._a, other.toArray()) > 0;\n    } else {\n      this._isDSTShifted = false;\n    }\n\n    return this._isDSTShifted;\n  }\n\n  function isLocal() {\n    return this.isValid() ? !this._isUTC : false;\n  }\n\n  function isUtcOffset() {\n    return this.isValid() ? this._isUTC : false;\n  }\n\n  function isUtc() {\n    return this.isValid() ? this._isUTC && this._offset === 0 : false;\n  } // ASP.NET json date format regex\n\n\n  var aspNetRegex = /^(\\-|\\+)?(?:(\\d*)[. ])?(\\d+)\\:(\\d+)(?:\\:(\\d+)(\\.\\d*)?)?$/; // from http://docs.closure-library.googlecode.com/git/closure_goog_date_date.js.source.html\n  // somewhat more in line with 4.4.3.2 2004 spec, but allows decimal anywhere\n  // and further modified to allow for strings containing both week and day\n\n  var isoRegex = /^(-|\\+)?P(?:([-+]?[0-9,.]*)Y)?(?:([-+]?[0-9,.]*)M)?(?:([-+]?[0-9,.]*)W)?(?:([-+]?[0-9,.]*)D)?(?:T(?:([-+]?[0-9,.]*)H)?(?:([-+]?[0-9,.]*)M)?(?:([-+]?[0-9,.]*)S)?)?$/;\n\n  function createDuration(input, key) {\n    var duration = input,\n        // matching against regexp is expensive, do it on demand\n    match = null,\n        sign,\n        ret,\n        diffRes;\n\n    if (isDuration(input)) {\n      duration = {\n        ms: input._milliseconds,\n        d: input._days,\n        M: input._months\n      };\n    } else if (isNumber(input)) {\n      duration = {};\n\n      if (key) {\n        duration[key] = input;\n      } else {\n        duration.milliseconds = input;\n      }\n    } else if (!!(match = aspNetRegex.exec(input))) {\n      sign = match[1] === '-' ? -1 : 1;\n      duration = {\n        y: 0,\n        d: toInt(match[DATE]) * sign,\n        h: toInt(match[HOUR]) * sign,\n        m: toInt(match[MINUTE]) * sign,\n        s: toInt(match[SECOND]) * sign,\n        ms: toInt(absRound(match[MILLISECOND] * 1000)) * sign // the millisecond decimal point is included in the match\n\n      };\n    } else if (!!(match = isoRegex.exec(input))) {\n      sign = match[1] === '-' ? -1 : 1;\n      duration = {\n        y: parseIso(match[2], sign),\n        M: parseIso(match[3], sign),\n        w: parseIso(match[4], sign),\n        d: parseIso(match[5], sign),\n        h: parseIso(match[6], sign),\n        m: parseIso(match[7], sign),\n        s: parseIso(match[8], sign)\n      };\n    } else if (duration == null) {\n      // checks for null or undefined\n      duration = {};\n    } else if (typeof duration === 'object' && ('from' in duration || 'to' in duration)) {\n      diffRes = momentsDifference(createLocal(duration.from), createLocal(duration.to));\n      duration = {};\n      duration.ms = diffRes.milliseconds;\n      duration.M = diffRes.months;\n    }\n\n    ret = new Duration(duration);\n\n    if (isDuration(input) && hasOwnProp(input, '_locale')) {\n      ret._locale = input._locale;\n    }\n\n    return ret;\n  }\n\n  createDuration.fn = Duration.prototype;\n  createDuration.invalid = createInvalid$1;\n\n  function parseIso(inp, sign) {\n    // We'd normally use ~~inp for this, but unfortunately it also\n    // converts floats to ints.\n    // inp may be undefined, so careful calling replace on it.\n    var res = inp && parseFloat(inp.replace(',', '.')); // apply sign while we're at it\n\n    return (isNaN(res) ? 0 : res) * sign;\n  }\n\n  function positiveMomentsDifference(base, other) {\n    var res = {};\n    res.months = other.month() - base.month() + (other.year() - base.year()) * 12;\n\n    if (base.clone().add(res.months, 'M').isAfter(other)) {\n      --res.months;\n    }\n\n    res.milliseconds = +other - +base.clone().add(res.months, 'M');\n    return res;\n  }\n\n  function momentsDifference(base, other) {\n    var res;\n\n    if (!(base.isValid() && other.isValid())) {\n      return {\n        milliseconds: 0,\n        months: 0\n      };\n    }\n\n    other = cloneWithOffset(other, base);\n\n    if (base.isBefore(other)) {\n      res = positiveMomentsDifference(base, other);\n    } else {\n      res = positiveMomentsDifference(other, base);\n      res.milliseconds = -res.milliseconds;\n      res.months = -res.months;\n    }\n\n    return res;\n  } // TODO: remove 'name' arg after deprecation is removed\n\n\n  function createAdder(direction, name) {\n    return function (val, period) {\n      var dur, tmp; //invert the arguments, but complain about it\n\n      if (period !== null && !isNaN(+period)) {\n        deprecateSimple(name, 'moment().' + name + '(period, number) is deprecated. Please use moment().' + name + '(number, period). ' + 'See http://momentjs.com/guides/#/warnings/add-inverted-param/ for more info.');\n        tmp = val;\n        val = period;\n        period = tmp;\n      }\n\n      val = typeof val === 'string' ? +val : val;\n      dur = createDuration(val, period);\n      addSubtract(this, dur, direction);\n      return this;\n    };\n  }\n\n  function addSubtract(mom, duration, isAdding, updateOffset) {\n    var milliseconds = duration._milliseconds,\n        days = absRound(duration._days),\n        months = absRound(duration._months);\n\n    if (!mom.isValid()) {\n      // No op\n      return;\n    }\n\n    updateOffset = updateOffset == null ? true : updateOffset;\n\n    if (months) {\n      setMonth(mom, get(mom, 'Month') + months * isAdding);\n    }\n\n    if (days) {\n      set$1(mom, 'Date', get(mom, 'Date') + days * isAdding);\n    }\n\n    if (milliseconds) {\n      mom._d.setTime(mom._d.valueOf() + milliseconds * isAdding);\n    }\n\n    if (updateOffset) {\n      hooks.updateOffset(mom, days || months);\n    }\n  }\n\n  var add = createAdder(1, 'add');\n  var subtract = createAdder(-1, 'subtract');\n\n  function getCalendarFormat(myMoment, now) {\n    var diff = myMoment.diff(now, 'days', true);\n    return diff < -6 ? 'sameElse' : diff < -1 ? 'lastWeek' : diff < 0 ? 'lastDay' : diff < 1 ? 'sameDay' : diff < 2 ? 'nextDay' : diff < 7 ? 'nextWeek' : 'sameElse';\n  }\n\n  function calendar$1(time, formats) {\n    // We want to compare the start of today, vs this.\n    // Getting start-of-today depends on whether we're local/utc/offset or not.\n    var now = time || createLocal(),\n        sod = cloneWithOffset(now, this).startOf('day'),\n        format = hooks.calendarFormat(this, sod) || 'sameElse';\n    var output = formats && (isFunction(formats[format]) ? formats[format].call(this, now) : formats[format]);\n    return this.format(output || this.localeData().calendar(format, this, createLocal(now)));\n  }\n\n  function clone() {\n    return new Moment(this);\n  }\n\n  function isAfter(input, units) {\n    var localInput = isMoment(input) ? input : createLocal(input);\n\n    if (!(this.isValid() && localInput.isValid())) {\n      return false;\n    }\n\n    units = normalizeUnits(units) || 'millisecond';\n\n    if (units === 'millisecond') {\n      return this.valueOf() > localInput.valueOf();\n    } else {\n      return localInput.valueOf() < this.clone().startOf(units).valueOf();\n    }\n  }\n\n  function isBefore(input, units) {\n    var localInput = isMoment(input) ? input : createLocal(input);\n\n    if (!(this.isValid() && localInput.isValid())) {\n      return false;\n    }\n\n    units = normalizeUnits(units) || 'millisecond';\n\n    if (units === 'millisecond') {\n      return this.valueOf() < localInput.valueOf();\n    } else {\n      return this.clone().endOf(units).valueOf() < localInput.valueOf();\n    }\n  }\n\n  function isBetween(from, to, units, inclusivity) {\n    var localFrom = isMoment(from) ? from : createLocal(from),\n        localTo = isMoment(to) ? to : createLocal(to);\n\n    if (!(this.isValid() && localFrom.isValid() && localTo.isValid())) {\n      return false;\n    }\n\n    inclusivity = inclusivity || '()';\n    return (inclusivity[0] === '(' ? this.isAfter(localFrom, units) : !this.isBefore(localFrom, units)) && (inclusivity[1] === ')' ? this.isBefore(localTo, units) : !this.isAfter(localTo, units));\n  }\n\n  function isSame(input, units) {\n    var localInput = isMoment(input) ? input : createLocal(input),\n        inputMs;\n\n    if (!(this.isValid() && localInput.isValid())) {\n      return false;\n    }\n\n    units = normalizeUnits(units) || 'millisecond';\n\n    if (units === 'millisecond') {\n      return this.valueOf() === localInput.valueOf();\n    } else {\n      inputMs = localInput.valueOf();\n      return this.clone().startOf(units).valueOf() <= inputMs && inputMs <= this.clone().endOf(units).valueOf();\n    }\n  }\n\n  function isSameOrAfter(input, units) {\n    return this.isSame(input, units) || this.isAfter(input, units);\n  }\n\n  function isSameOrBefore(input, units) {\n    return this.isSame(input, units) || this.isBefore(input, units);\n  }\n\n  function diff(input, units, asFloat) {\n    var that, zoneDelta, output;\n\n    if (!this.isValid()) {\n      return NaN;\n    }\n\n    that = cloneWithOffset(input, this);\n\n    if (!that.isValid()) {\n      return NaN;\n    }\n\n    zoneDelta = (that.utcOffset() - this.utcOffset()) * 6e4;\n    units = normalizeUnits(units);\n\n    switch (units) {\n      case 'year':\n        output = monthDiff(this, that) / 12;\n        break;\n\n      case 'month':\n        output = monthDiff(this, that);\n        break;\n\n      case 'quarter':\n        output = monthDiff(this, that) / 3;\n        break;\n\n      case 'second':\n        output = (this - that) / 1e3;\n        break;\n      // 1000\n\n      case 'minute':\n        output = (this - that) / 6e4;\n        break;\n      // 1000 * 60\n\n      case 'hour':\n        output = (this - that) / 36e5;\n        break;\n      // 1000 * 60 * 60\n\n      case 'day':\n        output = (this - that - zoneDelta) / 864e5;\n        break;\n      // 1000 * 60 * 60 * 24, negate dst\n\n      case 'week':\n        output = (this - that - zoneDelta) / 6048e5;\n        break;\n      // 1000 * 60 * 60 * 24 * 7, negate dst\n\n      default:\n        output = this - that;\n    }\n\n    return asFloat ? output : absFloor(output);\n  }\n\n  function monthDiff(a, b) {\n    // difference in months\n    var wholeMonthDiff = (b.year() - a.year()) * 12 + (b.month() - a.month()),\n        // b is in (anchor - 1 month, anchor + 1 month)\n    anchor = a.clone().add(wholeMonthDiff, 'months'),\n        anchor2,\n        adjust;\n\n    if (b - anchor < 0) {\n      anchor2 = a.clone().add(wholeMonthDiff - 1, 'months'); // linear across the month\n\n      adjust = (b - anchor) / (anchor - anchor2);\n    } else {\n      anchor2 = a.clone().add(wholeMonthDiff + 1, 'months'); // linear across the month\n\n      adjust = (b - anchor) / (anchor2 - anchor);\n    } //check for negative zero, return zero if negative zero\n\n\n    return -(wholeMonthDiff + adjust) || 0;\n  }\n\n  hooks.defaultFormat = 'YYYY-MM-DDTHH:mm:ssZ';\n  hooks.defaultFormatUtc = 'YYYY-MM-DDTHH:mm:ss[Z]';\n\n  function toString() {\n    return this.clone().locale('en').format('ddd MMM DD YYYY HH:mm:ss [GMT]ZZ');\n  }\n\n  function toISOString(keepOffset) {\n    if (!this.isValid()) {\n      return null;\n    }\n\n    var utc = keepOffset !== true;\n    var m = utc ? this.clone().utc() : this;\n\n    if (m.year() < 0 || m.year() > 9999) {\n      return formatMoment(m, utc ? 'YYYYYY-MM-DD[T]HH:mm:ss.SSS[Z]' : 'YYYYYY-MM-DD[T]HH:mm:ss.SSSZ');\n    }\n\n    if (isFunction(Date.prototype.toISOString)) {\n      // native implementation is ~50x faster, use it when we can\n      if (utc) {\n        return this.toDate().toISOString();\n      } else {\n        return new Date(this.valueOf() + this.utcOffset() * 60 * 1000).toISOString().replace('Z', formatMoment(m, 'Z'));\n      }\n    }\n\n    return formatMoment(m, utc ? 'YYYY-MM-DD[T]HH:mm:ss.SSS[Z]' : 'YYYY-MM-DD[T]HH:mm:ss.SSSZ');\n  }\n  /**\n   * Return a human readable representation of a moment that can\n   * also be evaluated to get a new moment which is the same\n   *\n   * @link https://nodejs.org/dist/latest/docs/api/util.html#util_custom_inspect_function_on_objects\n   */\n\n\n  function inspect() {\n    if (!this.isValid()) {\n      return 'moment.invalid(/* ' + this._i + ' */)';\n    }\n\n    var func = 'moment';\n    var zone = '';\n\n    if (!this.isLocal()) {\n      func = this.utcOffset() === 0 ? 'moment.utc' : 'moment.parseZone';\n      zone = 'Z';\n    }\n\n    var prefix = '[' + func + '(\"]';\n    var year = 0 <= this.year() && this.year() <= 9999 ? 'YYYY' : 'YYYYYY';\n    var datetime = '-MM-DD[T]HH:mm:ss.SSS';\n    var suffix = zone + '[\")]';\n    return this.format(prefix + year + datetime + suffix);\n  }\n\n  function format(inputString) {\n    if (!inputString) {\n      inputString = this.isUtc() ? hooks.defaultFormatUtc : hooks.defaultFormat;\n    }\n\n    var output = formatMoment(this, inputString);\n    return this.localeData().postformat(output);\n  }\n\n  function from(time, withoutSuffix) {\n    if (this.isValid() && (isMoment(time) && time.isValid() || createLocal(time).isValid())) {\n      return createDuration({\n        to: this,\n        from: time\n      }).locale(this.locale()).humanize(!withoutSuffix);\n    } else {\n      return this.localeData().invalidDate();\n    }\n  }\n\n  function fromNow(withoutSuffix) {\n    return this.from(createLocal(), withoutSuffix);\n  }\n\n  function to(time, withoutSuffix) {\n    if (this.isValid() && (isMoment(time) && time.isValid() || createLocal(time).isValid())) {\n      return createDuration({\n        from: this,\n        to: time\n      }).locale(this.locale()).humanize(!withoutSuffix);\n    } else {\n      return this.localeData().invalidDate();\n    }\n  }\n\n  function toNow(withoutSuffix) {\n    return this.to(createLocal(), withoutSuffix);\n  } // If passed a locale key, it will set the locale for this\n  // instance.  Otherwise, it will return the locale configuration\n  // variables for this instance.\n\n\n  function locale(key) {\n    var newLocaleData;\n\n    if (key === undefined) {\n      return this._locale._abbr;\n    } else {\n      newLocaleData = getLocale(key);\n\n      if (newLocaleData != null) {\n        this._locale = newLocaleData;\n      }\n\n      return this;\n    }\n  }\n\n  var lang = deprecate('moment().lang() is deprecated. Instead, use moment().localeData() to get the language configuration. Use moment().locale() to change languages.', function (key) {\n    if (key === undefined) {\n      return this.localeData();\n    } else {\n      return this.locale(key);\n    }\n  });\n\n  function localeData() {\n    return this._locale;\n  }\n\n  var MS_PER_SECOND = 1000;\n  var MS_PER_MINUTE = 60 * MS_PER_SECOND;\n  var MS_PER_HOUR = 60 * MS_PER_MINUTE;\n  var MS_PER_400_YEARS = (365 * 400 + 97) * 24 * MS_PER_HOUR; // actual modulo - handles negative numbers (for dates before 1970):\n\n  function mod$1(dividend, divisor) {\n    return (dividend % divisor + divisor) % divisor;\n  }\n\n  function localStartOfDate(y, m, d) {\n    // the date constructor remaps years 0-99 to 1900-1999\n    if (y < 100 && y >= 0) {\n      // preserve leap years using a full 400 year cycle, then reset\n      return new Date(y + 400, m, d) - MS_PER_400_YEARS;\n    } else {\n      return new Date(y, m, d).valueOf();\n    }\n  }\n\n  function utcStartOfDate(y, m, d) {\n    // Date.UTC remaps years 0-99 to 1900-1999\n    if (y < 100 && y >= 0) {\n      // preserve leap years using a full 400 year cycle, then reset\n      return Date.UTC(y + 400, m, d) - MS_PER_400_YEARS;\n    } else {\n      return Date.UTC(y, m, d);\n    }\n  }\n\n  function startOf(units) {\n    var time;\n    units = normalizeUnits(units);\n\n    if (units === undefined || units === 'millisecond' || !this.isValid()) {\n      return this;\n    }\n\n    var startOfDate = this._isUTC ? utcStartOfDate : localStartOfDate;\n\n    switch (units) {\n      case 'year':\n        time = startOfDate(this.year(), 0, 1);\n        break;\n\n      case 'quarter':\n        time = startOfDate(this.year(), this.month() - this.month() % 3, 1);\n        break;\n\n      case 'month':\n        time = startOfDate(this.year(), this.month(), 1);\n        break;\n\n      case 'week':\n        time = startOfDate(this.year(), this.month(), this.date() - this.weekday());\n        break;\n\n      case 'isoWeek':\n        time = startOfDate(this.year(), this.month(), this.date() - (this.isoWeekday() - 1));\n        break;\n\n      case 'day':\n      case 'date':\n        time = startOfDate(this.year(), this.month(), this.date());\n        break;\n\n      case 'hour':\n        time = this._d.valueOf();\n        time -= mod$1(time + (this._isUTC ? 0 : this.utcOffset() * MS_PER_MINUTE), MS_PER_HOUR);\n        break;\n\n      case 'minute':\n        time = this._d.valueOf();\n        time -= mod$1(time, MS_PER_MINUTE);\n        break;\n\n      case 'second':\n        time = this._d.valueOf();\n        time -= mod$1(time, MS_PER_SECOND);\n        break;\n    }\n\n    this._d.setTime(time);\n\n    hooks.updateOffset(this, true);\n    return this;\n  }\n\n  function endOf(units) {\n    var time;\n    units = normalizeUnits(units);\n\n    if (units === undefined || units === 'millisecond' || !this.isValid()) {\n      return this;\n    }\n\n    var startOfDate = this._isUTC ? utcStartOfDate : localStartOfDate;\n\n    switch (units) {\n      case 'year':\n        time = startOfDate(this.year() + 1, 0, 1) - 1;\n        break;\n\n      case 'quarter':\n        time = startOfDate(this.year(), this.month() - this.month() % 3 + 3, 1) - 1;\n        break;\n\n      case 'month':\n        time = startOfDate(this.year(), this.month() + 1, 1) - 1;\n        break;\n\n      case 'week':\n        time = startOfDate(this.year(), this.month(), this.date() - this.weekday() + 7) - 1;\n        break;\n\n      case 'isoWeek':\n        time = startOfDate(this.year(), this.month(), this.date() - (this.isoWeekday() - 1) + 7) - 1;\n        break;\n\n      case 'day':\n      case 'date':\n        time = startOfDate(this.year(), this.month(), this.date() + 1) - 1;\n        break;\n\n      case 'hour':\n        time = this._d.valueOf();\n        time += MS_PER_HOUR - mod$1(time + (this._isUTC ? 0 : this.utcOffset() * MS_PER_MINUTE), MS_PER_HOUR) - 1;\n        break;\n\n      case 'minute':\n        time = this._d.valueOf();\n        time += MS_PER_MINUTE - mod$1(time, MS_PER_MINUTE) - 1;\n        break;\n\n      case 'second':\n        time = this._d.valueOf();\n        time += MS_PER_SECOND - mod$1(time, MS_PER_SECOND) - 1;\n        break;\n    }\n\n    this._d.setTime(time);\n\n    hooks.updateOffset(this, true);\n    return this;\n  }\n\n  function valueOf() {\n    return this._d.valueOf() - (this._offset || 0) * 60000;\n  }\n\n  function unix() {\n    return Math.floor(this.valueOf() / 1000);\n  }\n\n  function toDate() {\n    return new Date(this.valueOf());\n  }\n\n  function toArray() {\n    var m = this;\n    return [m.year(), m.month(), m.date(), m.hour(), m.minute(), m.second(), m.millisecond()];\n  }\n\n  function toObject() {\n    var m = this;\n    return {\n      years: m.year(),\n      months: m.month(),\n      date: m.date(),\n      hours: m.hours(),\n      minutes: m.minutes(),\n      seconds: m.seconds(),\n      milliseconds: m.milliseconds()\n    };\n  }\n\n  function toJSON() {\n    // new Date(NaN).toJSON() === null\n    return this.isValid() ? this.toISOString() : null;\n  }\n\n  function isValid$2() {\n    return isValid(this);\n  }\n\n  function parsingFlags() {\n    return extend({}, getParsingFlags(this));\n  }\n\n  function invalidAt() {\n    return getParsingFlags(this).overflow;\n  }\n\n  function creationData() {\n    return {\n      input: this._i,\n      format: this._f,\n      locale: this._locale,\n      isUTC: this._isUTC,\n      strict: this._strict\n    };\n  } // FORMATTING\n\n\n  addFormatToken(0, ['gg', 2], 0, function () {\n    return this.weekYear() % 100;\n  });\n  addFormatToken(0, ['GG', 2], 0, function () {\n    return this.isoWeekYear() % 100;\n  });\n\n  function addWeekYearFormatToken(token, getter) {\n    addFormatToken(0, [token, token.length], 0, getter);\n  }\n\n  addWeekYearFormatToken('gggg', 'weekYear');\n  addWeekYearFormatToken('ggggg', 'weekYear');\n  addWeekYearFormatToken('GGGG', 'isoWeekYear');\n  addWeekYearFormatToken('GGGGG', 'isoWeekYear'); // ALIASES\n\n  addUnitAlias('weekYear', 'gg');\n  addUnitAlias('isoWeekYear', 'GG'); // PRIORITY\n\n  addUnitPriority('weekYear', 1);\n  addUnitPriority('isoWeekYear', 1); // PARSING\n\n  addRegexToken('G', matchSigned);\n  addRegexToken('g', matchSigned);\n  addRegexToken('GG', match1to2, match2);\n  addRegexToken('gg', match1to2, match2);\n  addRegexToken('GGGG', match1to4, match4);\n  addRegexToken('gggg', match1to4, match4);\n  addRegexToken('GGGGG', match1to6, match6);\n  addRegexToken('ggggg', match1to6, match6);\n  addWeekParseToken(['gggg', 'ggggg', 'GGGG', 'GGGGG'], function (input, week, config, token) {\n    week[token.substr(0, 2)] = toInt(input);\n  });\n  addWeekParseToken(['gg', 'GG'], function (input, week, config, token) {\n    week[token] = hooks.parseTwoDigitYear(input);\n  }); // MOMENTS\n\n  function getSetWeekYear(input) {\n    return getSetWeekYearHelper.call(this, input, this.week(), this.weekday(), this.localeData()._week.dow, this.localeData()._week.doy);\n  }\n\n  function getSetISOWeekYear(input) {\n    return getSetWeekYearHelper.call(this, input, this.isoWeek(), this.isoWeekday(), 1, 4);\n  }\n\n  function getISOWeeksInYear() {\n    return weeksInYear(this.year(), 1, 4);\n  }\n\n  function getWeeksInYear() {\n    var weekInfo = this.localeData()._week;\n\n    return weeksInYear(this.year(), weekInfo.dow, weekInfo.doy);\n  }\n\n  function getSetWeekYearHelper(input, week, weekday, dow, doy) {\n    var weeksTarget;\n\n    if (input == null) {\n      return weekOfYear(this, dow, doy).year;\n    } else {\n      weeksTarget = weeksInYear(input, dow, doy);\n\n      if (week > weeksTarget) {\n        week = weeksTarget;\n      }\n\n      return setWeekAll.call(this, input, week, weekday, dow, doy);\n    }\n  }\n\n  function setWeekAll(weekYear, week, weekday, dow, doy) {\n    var dayOfYearData = dayOfYearFromWeeks(weekYear, week, weekday, dow, doy),\n        date = createUTCDate(dayOfYearData.year, 0, dayOfYearData.dayOfYear);\n    this.year(date.getUTCFullYear());\n    this.month(date.getUTCMonth());\n    this.date(date.getUTCDate());\n    return this;\n  } // FORMATTING\n\n\n  addFormatToken('Q', 0, 'Qo', 'quarter'); // ALIASES\n\n  addUnitAlias('quarter', 'Q'); // PRIORITY\n\n  addUnitPriority('quarter', 7); // PARSING\n\n  addRegexToken('Q', match1);\n  addParseToken('Q', function (input, array) {\n    array[MONTH] = (toInt(input) - 1) * 3;\n  }); // MOMENTS\n\n  function getSetQuarter(input) {\n    return input == null ? Math.ceil((this.month() + 1) / 3) : this.month((input - 1) * 3 + this.month() % 3);\n  } // FORMATTING\n\n\n  addFormatToken('D', ['DD', 2], 'Do', 'date'); // ALIASES\n\n  addUnitAlias('date', 'D'); // PRIORITY\n\n  addUnitPriority('date', 9); // PARSING\n\n  addRegexToken('D', match1to2);\n  addRegexToken('DD', match1to2, match2);\n  addRegexToken('Do', function (isStrict, locale) {\n    // TODO: Remove \"ordinalParse\" fallback in next major release.\n    return isStrict ? locale._dayOfMonthOrdinalParse || locale._ordinalParse : locale._dayOfMonthOrdinalParseLenient;\n  });\n  addParseToken(['D', 'DD'], DATE);\n  addParseToken('Do', function (input, array) {\n    array[DATE] = toInt(input.match(match1to2)[0]);\n  }); // MOMENTS\n\n  var getSetDayOfMonth = makeGetSet('Date', true); // FORMATTING\n\n  addFormatToken('DDD', ['DDDD', 3], 'DDDo', 'dayOfYear'); // ALIASES\n\n  addUnitAlias('dayOfYear', 'DDD'); // PRIORITY\n\n  addUnitPriority('dayOfYear', 4); // PARSING\n\n  addRegexToken('DDD', match1to3);\n  addRegexToken('DDDD', match3);\n  addParseToken(['DDD', 'DDDD'], function (input, array, config) {\n    config._dayOfYear = toInt(input);\n  }); // HELPERS\n  // MOMENTS\n\n  function getSetDayOfYear(input) {\n    var dayOfYear = Math.round((this.clone().startOf('day') - this.clone().startOf('year')) / 864e5) + 1;\n    return input == null ? dayOfYear : this.add(input - dayOfYear, 'd');\n  } // FORMATTING\n\n\n  addFormatToken('m', ['mm', 2], 0, 'minute'); // ALIASES\n\n  addUnitAlias('minute', 'm'); // PRIORITY\n\n  addUnitPriority('minute', 14); // PARSING\n\n  addRegexToken('m', match1to2);\n  addRegexToken('mm', match1to2, match2);\n  addParseToken(['m', 'mm'], MINUTE); // MOMENTS\n\n  var getSetMinute = makeGetSet('Minutes', false); // FORMATTING\n\n  addFormatToken('s', ['ss', 2], 0, 'second'); // ALIASES\n\n  addUnitAlias('second', 's'); // PRIORITY\n\n  addUnitPriority('second', 15); // PARSING\n\n  addRegexToken('s', match1to2);\n  addRegexToken('ss', match1to2, match2);\n  addParseToken(['s', 'ss'], SECOND); // MOMENTS\n\n  var getSetSecond = makeGetSet('Seconds', false); // FORMATTING\n\n  addFormatToken('S', 0, 0, function () {\n    return ~~(this.millisecond() / 100);\n  });\n  addFormatToken(0, ['SS', 2], 0, function () {\n    return ~~(this.millisecond() / 10);\n  });\n  addFormatToken(0, ['SSS', 3], 0, 'millisecond');\n  addFormatToken(0, ['SSSS', 4], 0, function () {\n    return this.millisecond() * 10;\n  });\n  addFormatToken(0, ['SSSSS', 5], 0, function () {\n    return this.millisecond() * 100;\n  });\n  addFormatToken(0, ['SSSSSS', 6], 0, function () {\n    return this.millisecond() * 1000;\n  });\n  addFormatToken(0, ['SSSSSSS', 7], 0, function () {\n    return this.millisecond() * 10000;\n  });\n  addFormatToken(0, ['SSSSSSSS', 8], 0, function () {\n    return this.millisecond() * 100000;\n  });\n  addFormatToken(0, ['SSSSSSSSS', 9], 0, function () {\n    return this.millisecond() * 1000000;\n  }); // ALIASES\n\n  addUnitAlias('millisecond', 'ms'); // PRIORITY\n\n  addUnitPriority('millisecond', 16); // PARSING\n\n  addRegexToken('S', match1to3, match1);\n  addRegexToken('SS', match1to3, match2);\n  addRegexToken('SSS', match1to3, match3);\n  var token;\n\n  for (token = 'SSSS'; token.length <= 9; token += 'S') {\n    addRegexToken(token, matchUnsigned);\n  }\n\n  function parseMs(input, array) {\n    array[MILLISECOND] = toInt(('0.' + input) * 1000);\n  }\n\n  for (token = 'S'; token.length <= 9; token += 'S') {\n    addParseToken(token, parseMs);\n  } // MOMENTS\n\n\n  var getSetMillisecond = makeGetSet('Milliseconds', false); // FORMATTING\n\n  addFormatToken('z', 0, 0, 'zoneAbbr');\n  addFormatToken('zz', 0, 0, 'zoneName'); // MOMENTS\n\n  function getZoneAbbr() {\n    return this._isUTC ? 'UTC' : '';\n  }\n\n  function getZoneName() {\n    return this._isUTC ? 'Coordinated Universal Time' : '';\n  }\n\n  var proto = Moment.prototype;\n  proto.add = add;\n  proto.calendar = calendar$1;\n  proto.clone = clone;\n  proto.diff = diff;\n  proto.endOf = endOf;\n  proto.format = format;\n  proto.from = from;\n  proto.fromNow = fromNow;\n  proto.to = to;\n  proto.toNow = toNow;\n  proto.get = stringGet;\n  proto.invalidAt = invalidAt;\n  proto.isAfter = isAfter;\n  proto.isBefore = isBefore;\n  proto.isBetween = isBetween;\n  proto.isSame = isSame;\n  proto.isSameOrAfter = isSameOrAfter;\n  proto.isSameOrBefore = isSameOrBefore;\n  proto.isValid = isValid$2;\n  proto.lang = lang;\n  proto.locale = locale;\n  proto.localeData = localeData;\n  proto.max = prototypeMax;\n  proto.min = prototypeMin;\n  proto.parsingFlags = parsingFlags;\n  proto.set = stringSet;\n  proto.startOf = startOf;\n  proto.subtract = subtract;\n  proto.toArray = toArray;\n  proto.toObject = toObject;\n  proto.toDate = toDate;\n  proto.toISOString = toISOString;\n  proto.inspect = inspect;\n  proto.toJSON = toJSON;\n  proto.toString = toString;\n  proto.unix = unix;\n  proto.valueOf = valueOf;\n  proto.creationData = creationData;\n  proto.year = getSetYear;\n  proto.isLeapYear = getIsLeapYear;\n  proto.weekYear = getSetWeekYear;\n  proto.isoWeekYear = getSetISOWeekYear;\n  proto.quarter = proto.quarters = getSetQuarter;\n  proto.month = getSetMonth;\n  proto.daysInMonth = getDaysInMonth;\n  proto.week = proto.weeks = getSetWeek;\n  proto.isoWeek = proto.isoWeeks = getSetISOWeek;\n  proto.weeksInYear = getWeeksInYear;\n  proto.isoWeeksInYear = getISOWeeksInYear;\n  proto.date = getSetDayOfMonth;\n  proto.day = proto.days = getSetDayOfWeek;\n  proto.weekday = getSetLocaleDayOfWeek;\n  proto.isoWeekday = getSetISODayOfWeek;\n  proto.dayOfYear = getSetDayOfYear;\n  proto.hour = proto.hours = getSetHour;\n  proto.minute = proto.minutes = getSetMinute;\n  proto.second = proto.seconds = getSetSecond;\n  proto.millisecond = proto.milliseconds = getSetMillisecond;\n  proto.utcOffset = getSetOffset;\n  proto.utc = setOffsetToUTC;\n  proto.local = setOffsetToLocal;\n  proto.parseZone = setOffsetToParsedOffset;\n  proto.hasAlignedHourOffset = hasAlignedHourOffset;\n  proto.isDST = isDaylightSavingTime;\n  proto.isLocal = isLocal;\n  proto.isUtcOffset = isUtcOffset;\n  proto.isUtc = isUtc;\n  proto.isUTC = isUtc;\n  proto.zoneAbbr = getZoneAbbr;\n  proto.zoneName = getZoneName;\n  proto.dates = deprecate('dates accessor is deprecated. Use date instead.', getSetDayOfMonth);\n  proto.months = deprecate('months accessor is deprecated. Use month instead', getSetMonth);\n  proto.years = deprecate('years accessor is deprecated. Use year instead', getSetYear);\n  proto.zone = deprecate('moment().zone is deprecated, use moment().utcOffset instead. http://momentjs.com/guides/#/warnings/zone/', getSetZone);\n  proto.isDSTShifted = deprecate('isDSTShifted is deprecated. See http://momentjs.com/guides/#/warnings/dst-shifted/ for more information', isDaylightSavingTimeShifted);\n\n  function createUnix(input) {\n    return createLocal(input * 1000);\n  }\n\n  function createInZone() {\n    return createLocal.apply(null, arguments).parseZone();\n  }\n\n  function preParsePostFormat(string) {\n    return string;\n  }\n\n  var proto$1 = Locale.prototype;\n  proto$1.calendar = calendar;\n  proto$1.longDateFormat = longDateFormat;\n  proto$1.invalidDate = invalidDate;\n  proto$1.ordinal = ordinal;\n  proto$1.preparse = preParsePostFormat;\n  proto$1.postformat = preParsePostFormat;\n  proto$1.relativeTime = relativeTime;\n  proto$1.pastFuture = pastFuture;\n  proto$1.set = set;\n  proto$1.months = localeMonths;\n  proto$1.monthsShort = localeMonthsShort;\n  proto$1.monthsParse = localeMonthsParse;\n  proto$1.monthsRegex = monthsRegex;\n  proto$1.monthsShortRegex = monthsShortRegex;\n  proto$1.week = localeWeek;\n  proto$1.firstDayOfYear = localeFirstDayOfYear;\n  proto$1.firstDayOfWeek = localeFirstDayOfWeek;\n  proto$1.weekdays = localeWeekdays;\n  proto$1.weekdaysMin = localeWeekdaysMin;\n  proto$1.weekdaysShort = localeWeekdaysShort;\n  proto$1.weekdaysParse = localeWeekdaysParse;\n  proto$1.weekdaysRegex = weekdaysRegex;\n  proto$1.weekdaysShortRegex = weekdaysShortRegex;\n  proto$1.weekdaysMinRegex = weekdaysMinRegex;\n  proto$1.isPM = localeIsPM;\n  proto$1.meridiem = localeMeridiem;\n\n  function get$1(format, index, field, setter) {\n    var locale = getLocale();\n    var utc = createUTC().set(setter, index);\n    return locale[field](utc, format);\n  }\n\n  function listMonthsImpl(format, index, field) {\n    if (isNumber(format)) {\n      index = format;\n      format = undefined;\n    }\n\n    format = format || '';\n\n    if (index != null) {\n      return get$1(format, index, field, 'month');\n    }\n\n    var i;\n    var out = [];\n\n    for (i = 0; i < 12; i++) {\n      out[i] = get$1(format, i, field, 'month');\n    }\n\n    return out;\n  } // ()\n  // (5)\n  // (fmt, 5)\n  // (fmt)\n  // (true)\n  // (true, 5)\n  // (true, fmt, 5)\n  // (true, fmt)\n\n\n  function listWeekdaysImpl(localeSorted, format, index, field) {\n    if (typeof localeSorted === 'boolean') {\n      if (isNumber(format)) {\n        index = format;\n        format = undefined;\n      }\n\n      format = format || '';\n    } else {\n      format = localeSorted;\n      index = format;\n      localeSorted = false;\n\n      if (isNumber(format)) {\n        index = format;\n        format = undefined;\n      }\n\n      format = format || '';\n    }\n\n    var locale = getLocale(),\n        shift = localeSorted ? locale._week.dow : 0;\n\n    if (index != null) {\n      return get$1(format, (index + shift) % 7, field, 'day');\n    }\n\n    var i;\n    var out = [];\n\n    for (i = 0; i < 7; i++) {\n      out[i] = get$1(format, (i + shift) % 7, field, 'day');\n    }\n\n    return out;\n  }\n\n  function listMonths(format, index) {\n    return listMonthsImpl(format, index, 'months');\n  }\n\n  function listMonthsShort(format, index) {\n    return listMonthsImpl(format, index, 'monthsShort');\n  }\n\n  function listWeekdays(localeSorted, format, index) {\n    return listWeekdaysImpl(localeSorted, format, index, 'weekdays');\n  }\n\n  function listWeekdaysShort(localeSorted, format, index) {\n    return listWeekdaysImpl(localeSorted, format, index, 'weekdaysShort');\n  }\n\n  function listWeekdaysMin(localeSorted, format, index) {\n    return listWeekdaysImpl(localeSorted, format, index, 'weekdaysMin');\n  }\n\n  getSetGlobalLocale('en', {\n    dayOfMonthOrdinalParse: /\\d{1,2}(th|st|nd|rd)/,\n    ordinal: function ordinal(number) {\n      var b = number % 10,\n          output = toInt(number % 100 / 10) === 1 ? 'th' : b === 1 ? 'st' : b === 2 ? 'nd' : b === 3 ? 'rd' : 'th';\n      return number + output;\n    }\n  }); // Side effect imports\n\n  hooks.lang = deprecate('moment.lang is deprecated. Use moment.locale instead.', getSetGlobalLocale);\n  hooks.langData = deprecate('moment.langData is deprecated. Use moment.localeData instead.', getLocale);\n  var mathAbs = Math.abs;\n\n  function abs() {\n    var data = this._data;\n    this._milliseconds = mathAbs(this._milliseconds);\n    this._days = mathAbs(this._days);\n    this._months = mathAbs(this._months);\n    data.milliseconds = mathAbs(data.milliseconds);\n    data.seconds = mathAbs(data.seconds);\n    data.minutes = mathAbs(data.minutes);\n    data.hours = mathAbs(data.hours);\n    data.months = mathAbs(data.months);\n    data.years = mathAbs(data.years);\n    return this;\n  }\n\n  function addSubtract$1(duration, input, value, direction) {\n    var other = createDuration(input, value);\n    duration._milliseconds += direction * other._milliseconds;\n    duration._days += direction * other._days;\n    duration._months += direction * other._months;\n    return duration._bubble();\n  } // supports only 2.0-style add(1, 's') or add(duration)\n\n\n  function add$1(input, value) {\n    return addSubtract$1(this, input, value, 1);\n  } // supports only 2.0-style subtract(1, 's') or subtract(duration)\n\n\n  function subtract$1(input, value) {\n    return addSubtract$1(this, input, value, -1);\n  }\n\n  function absCeil(number) {\n    if (number < 0) {\n      return Math.floor(number);\n    } else {\n      return Math.ceil(number);\n    }\n  }\n\n  function bubble() {\n    var milliseconds = this._milliseconds;\n    var days = this._days;\n    var months = this._months;\n    var data = this._data;\n    var seconds, minutes, hours, years, monthsFromDays; // if we have a mix of positive and negative values, bubble down first\n    // check: https://github.com/moment/moment/issues/2166\n\n    if (!(milliseconds >= 0 && days >= 0 && months >= 0 || milliseconds <= 0 && days <= 0 && months <= 0)) {\n      milliseconds += absCeil(monthsToDays(months) + days) * 864e5;\n      days = 0;\n      months = 0;\n    } // The following code bubbles up values, see the tests for\n    // examples of what that means.\n\n\n    data.milliseconds = milliseconds % 1000;\n    seconds = absFloor(milliseconds / 1000);\n    data.seconds = seconds % 60;\n    minutes = absFloor(seconds / 60);\n    data.minutes = minutes % 60;\n    hours = absFloor(minutes / 60);\n    data.hours = hours % 24;\n    days += absFloor(hours / 24); // convert days to months\n\n    monthsFromDays = absFloor(daysToMonths(days));\n    months += monthsFromDays;\n    days -= absCeil(monthsToDays(monthsFromDays)); // 12 months -> 1 year\n\n    years = absFloor(months / 12);\n    months %= 12;\n    data.days = days;\n    data.months = months;\n    data.years = years;\n    return this;\n  }\n\n  function daysToMonths(days) {\n    // 400 years have 146097 days (taking into account leap year rules)\n    // 400 years have 12 months === 4800\n    return days * 4800 / 146097;\n  }\n\n  function monthsToDays(months) {\n    // the reverse of daysToMonths\n    return months * 146097 / 4800;\n  }\n\n  function as(units) {\n    if (!this.isValid()) {\n      return NaN;\n    }\n\n    var days;\n    var months;\n    var milliseconds = this._milliseconds;\n    units = normalizeUnits(units);\n\n    if (units === 'month' || units === 'quarter' || units === 'year') {\n      days = this._days + milliseconds / 864e5;\n      months = this._months + daysToMonths(days);\n\n      switch (units) {\n        case 'month':\n          return months;\n\n        case 'quarter':\n          return months / 3;\n\n        case 'year':\n          return months / 12;\n      }\n    } else {\n      // handle milliseconds separately because of floating point math errors (issue #1867)\n      days = this._days + Math.round(monthsToDays(this._months));\n\n      switch (units) {\n        case 'week':\n          return days / 7 + milliseconds / 6048e5;\n\n        case 'day':\n          return days + milliseconds / 864e5;\n\n        case 'hour':\n          return days * 24 + milliseconds / 36e5;\n\n        case 'minute':\n          return days * 1440 + milliseconds / 6e4;\n\n        case 'second':\n          return days * 86400 + milliseconds / 1000;\n        // Math.floor prevents floating point math errors here\n\n        case 'millisecond':\n          return Math.floor(days * 864e5) + milliseconds;\n\n        default:\n          throw new Error('Unknown unit ' + units);\n      }\n    }\n  } // TODO: Use this.as('ms')?\n\n\n  function valueOf$1() {\n    if (!this.isValid()) {\n      return NaN;\n    }\n\n    return this._milliseconds + this._days * 864e5 + this._months % 12 * 2592e6 + toInt(this._months / 12) * 31536e6;\n  }\n\n  function makeAs(alias) {\n    return function () {\n      return this.as(alias);\n    };\n  }\n\n  var asMilliseconds = makeAs('ms');\n  var asSeconds = makeAs('s');\n  var asMinutes = makeAs('m');\n  var asHours = makeAs('h');\n  var asDays = makeAs('d');\n  var asWeeks = makeAs('w');\n  var asMonths = makeAs('M');\n  var asQuarters = makeAs('Q');\n  var asYears = makeAs('y');\n\n  function clone$1() {\n    return createDuration(this);\n  }\n\n  function get$2(units) {\n    units = normalizeUnits(units);\n    return this.isValid() ? this[units + 's']() : NaN;\n  }\n\n  function makeGetter(name) {\n    return function () {\n      return this.isValid() ? this._data[name] : NaN;\n    };\n  }\n\n  var milliseconds = makeGetter('milliseconds');\n  var seconds = makeGetter('seconds');\n  var minutes = makeGetter('minutes');\n  var hours = makeGetter('hours');\n  var days = makeGetter('days');\n  var months = makeGetter('months');\n  var years = makeGetter('years');\n\n  function weeks() {\n    return absFloor(this.days() / 7);\n  }\n\n  var round = Math.round;\n  var thresholds = {\n    ss: 44,\n    // a few seconds to seconds\n    s: 45,\n    // seconds to minute\n    m: 45,\n    // minutes to hour\n    h: 22,\n    // hours to day\n    d: 26,\n    // days to month\n    M: 11 // months to year\n\n  }; // helper function for moment.fn.from, moment.fn.fromNow, and moment.duration.fn.humanize\n\n  function substituteTimeAgo(string, number, withoutSuffix, isFuture, locale) {\n    return locale.relativeTime(number || 1, !!withoutSuffix, string, isFuture);\n  }\n\n  function relativeTime$1(posNegDuration, withoutSuffix, locale) {\n    var duration = createDuration(posNegDuration).abs();\n    var seconds = round(duration.as('s'));\n    var minutes = round(duration.as('m'));\n    var hours = round(duration.as('h'));\n    var days = round(duration.as('d'));\n    var months = round(duration.as('M'));\n    var years = round(duration.as('y'));\n    var a = seconds <= thresholds.ss && ['s', seconds] || seconds < thresholds.s && ['ss', seconds] || minutes <= 1 && ['m'] || minutes < thresholds.m && ['mm', minutes] || hours <= 1 && ['h'] || hours < thresholds.h && ['hh', hours] || days <= 1 && ['d'] || days < thresholds.d && ['dd', days] || months <= 1 && ['M'] || months < thresholds.M && ['MM', months] || years <= 1 && ['y'] || ['yy', years];\n    a[2] = withoutSuffix;\n    a[3] = +posNegDuration > 0;\n    a[4] = locale;\n    return substituteTimeAgo.apply(null, a);\n  } // This function allows you to set the rounding function for relative time strings\n\n\n  function getSetRelativeTimeRounding(roundingFunction) {\n    if (roundingFunction === undefined) {\n      return round;\n    }\n\n    if (typeof roundingFunction === 'function') {\n      round = roundingFunction;\n      return true;\n    }\n\n    return false;\n  } // This function allows you to set a threshold for relative time strings\n\n\n  function getSetRelativeTimeThreshold(threshold, limit) {\n    if (thresholds[threshold] === undefined) {\n      return false;\n    }\n\n    if (limit === undefined) {\n      return thresholds[threshold];\n    }\n\n    thresholds[threshold] = limit;\n\n    if (threshold === 's') {\n      thresholds.ss = limit - 1;\n    }\n\n    return true;\n  }\n\n  function humanize(withSuffix) {\n    if (!this.isValid()) {\n      return this.localeData().invalidDate();\n    }\n\n    var locale = this.localeData();\n    var output = relativeTime$1(this, !withSuffix, locale);\n\n    if (withSuffix) {\n      output = locale.pastFuture(+this, output);\n    }\n\n    return locale.postformat(output);\n  }\n\n  var abs$1 = Math.abs;\n\n  function sign(x) {\n    return (x > 0) - (x < 0) || +x;\n  }\n\n  function toISOString$1() {\n    // for ISO strings we do not use the normal bubbling rules:\n    //  * milliseconds bubble up until they become hours\n    //  * days do not bubble at all\n    //  * months bubble up until they become years\n    // This is because there is no context-free conversion between hours and days\n    // (think of clock changes)\n    // and also not between days and months (28-31 days per month)\n    if (!this.isValid()) {\n      return this.localeData().invalidDate();\n    }\n\n    var seconds = abs$1(this._milliseconds) / 1000;\n    var days = abs$1(this._days);\n    var months = abs$1(this._months);\n    var minutes, hours, years; // 3600 seconds -> 60 minutes -> 1 hour\n\n    minutes = absFloor(seconds / 60);\n    hours = absFloor(minutes / 60);\n    seconds %= 60;\n    minutes %= 60; // 12 months -> 1 year\n\n    years = absFloor(months / 12);\n    months %= 12; // inspired by https://github.com/dordille/moment-isoduration/blob/master/moment.isoduration.js\n\n    var Y = years;\n    var M = months;\n    var D = days;\n    var h = hours;\n    var m = minutes;\n    var s = seconds ? seconds.toFixed(3).replace(/\\.?0+$/, '') : '';\n    var total = this.asSeconds();\n\n    if (!total) {\n      // this is the same as C#'s (Noda) and python (isodate)...\n      // but not other JS (goog.date)\n      return 'P0D';\n    }\n\n    var totalSign = total < 0 ? '-' : '';\n    var ymSign = sign(this._months) !== sign(total) ? '-' : '';\n    var daysSign = sign(this._days) !== sign(total) ? '-' : '';\n    var hmsSign = sign(this._milliseconds) !== sign(total) ? '-' : '';\n    return totalSign + 'P' + (Y ? ymSign + Y + 'Y' : '') + (M ? ymSign + M + 'M' : '') + (D ? daysSign + D + 'D' : '') + (h || m || s ? 'T' : '') + (h ? hmsSign + h + 'H' : '') + (m ? hmsSign + m + 'M' : '') + (s ? hmsSign + s + 'S' : '');\n  }\n\n  var proto$2 = Duration.prototype;\n  proto$2.isValid = isValid$1;\n  proto$2.abs = abs;\n  proto$2.add = add$1;\n  proto$2.subtract = subtract$1;\n  proto$2.as = as;\n  proto$2.asMilliseconds = asMilliseconds;\n  proto$2.asSeconds = asSeconds;\n  proto$2.asMinutes = asMinutes;\n  proto$2.asHours = asHours;\n  proto$2.asDays = asDays;\n  proto$2.asWeeks = asWeeks;\n  proto$2.asMonths = asMonths;\n  proto$2.asQuarters = asQuarters;\n  proto$2.asYears = asYears;\n  proto$2.valueOf = valueOf$1;\n  proto$2._bubble = bubble;\n  proto$2.clone = clone$1;\n  proto$2.get = get$2;\n  proto$2.milliseconds = milliseconds;\n  proto$2.seconds = seconds;\n  proto$2.minutes = minutes;\n  proto$2.hours = hours;\n  proto$2.days = days;\n  proto$2.weeks = weeks;\n  proto$2.months = months;\n  proto$2.years = years;\n  proto$2.humanize = humanize;\n  proto$2.toISOString = toISOString$1;\n  proto$2.toString = toISOString$1;\n  proto$2.toJSON = toISOString$1;\n  proto$2.locale = locale;\n  proto$2.localeData = localeData;\n  proto$2.toIsoString = deprecate('toIsoString() is deprecated. Please use toISOString() instead (notice the capitals)', toISOString$1);\n  proto$2.lang = lang; // Side effect imports\n  // FORMATTING\n\n  addFormatToken('X', 0, 0, 'unix');\n  addFormatToken('x', 0, 0, 'valueOf'); // PARSING\n\n  addRegexToken('x', matchSigned);\n  addRegexToken('X', matchTimestamp);\n  addParseToken('X', function (input, array, config) {\n    config._d = new Date(parseFloat(input, 10) * 1000);\n  });\n  addParseToken('x', function (input, array, config) {\n    config._d = new Date(toInt(input));\n  }); // Side effect imports\n\n  hooks.version = '2.24.0';\n  setHookCallback(createLocal);\n  hooks.fn = proto;\n  hooks.min = min;\n  hooks.max = max;\n  hooks.now = now;\n  hooks.utc = createUTC;\n  hooks.unix = createUnix;\n  hooks.months = listMonths;\n  hooks.isDate = isDate;\n  hooks.locale = getSetGlobalLocale;\n  hooks.invalid = createInvalid;\n  hooks.duration = createDuration;\n  hooks.isMoment = isMoment;\n  hooks.weekdays = listWeekdays;\n  hooks.parseZone = createInZone;\n  hooks.localeData = getLocale;\n  hooks.isDuration = isDuration;\n  hooks.monthsShort = listMonthsShort;\n  hooks.weekdaysMin = listWeekdaysMin;\n  hooks.defineLocale = defineLocale;\n  hooks.updateLocale = updateLocale;\n  hooks.locales = listLocales;\n  hooks.weekdaysShort = listWeekdaysShort;\n  hooks.normalizeUnits = normalizeUnits;\n  hooks.relativeTimeRounding = getSetRelativeTimeRounding;\n  hooks.relativeTimeThreshold = getSetRelativeTimeThreshold;\n  hooks.calendarFormat = getCalendarFormat;\n  hooks.prototype = proto; // currently HTML5 input type only supports 24-hour formats\n\n  hooks.HTML5_FMT = {\n    DATETIME_LOCAL: 'YYYY-MM-DDTHH:mm',\n    // <input type=\"datetime-local\" />\n    DATETIME_LOCAL_SECONDS: 'YYYY-MM-DDTHH:mm:ss',\n    // <input type=\"datetime-local\" step=\"1\" />\n    DATETIME_LOCAL_MS: 'YYYY-MM-DDTHH:mm:ss.SSS',\n    // <input type=\"datetime-local\" step=\"0.001\" />\n    DATE: 'YYYY-MM-DD',\n    // <input type=\"date\" />\n    TIME: 'HH:mm',\n    // <input type=\"time\" />\n    TIME_SECONDS: 'HH:mm:ss',\n    // <input type=\"time\" step=\"1\" />\n    TIME_MS: 'HH:mm:ss.SSS',\n    // <input type=\"time\" step=\"0.001\" />\n    WEEK: 'GGGG-[W]WW',\n    // <input type=\"week\" />\n    MONTH: 'YYYY-MM' // <input type=\"month\" />\n\n  };\n  return hooks;\n});","var baseIsEqual = require('./_baseIsEqual');\n/**\n * Performs a deep comparison between two values to determine if they are\n * equivalent.\n *\n * **Note:** This method supports comparing arrays, array buffers, booleans,\n * date objects, error objects, maps, numbers, `Object` objects, regexes,\n * sets, strings, symbols, and typed arrays. `Object` objects are compared\n * by their own, not inherited, enumerable properties. Functions and DOM\n * nodes are compared by strict equality, i.e. `===`.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Lang\n * @param {*} value The value to compare.\n * @param {*} other The other value to compare.\n * @returns {boolean} Returns `true` if the values are equivalent, else `false`.\n * @example\n *\n * var object = { 'a': 1 };\n * var other = { 'a': 1 };\n *\n * _.isEqual(object, other);\n * // => true\n *\n * object === other;\n * // => false\n */\n\n\nfunction isEqual(value, other) {\n  return baseIsEqual(value, other);\n}\n\nmodule.exports = isEqual;","var baseAssignValue = require('./_baseAssignValue'),\n    createAggregator = require('./_createAggregator');\n/**\n * Creates an object composed of keys generated from the results of running\n * each element of `collection` thru `iteratee`. The corresponding value of\n * each key is the last element responsible for generating the key. The\n * iteratee is invoked with one argument: (value).\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Collection\n * @param {Array|Object} collection The collection to iterate over.\n * @param {Function} [iteratee=_.identity] The iteratee to transform keys.\n * @returns {Object} Returns the composed aggregate object.\n * @example\n *\n * var array = [\n *   { 'dir': 'left', 'code': 97 },\n *   { 'dir': 'right', 'code': 100 }\n * ];\n *\n * _.keyBy(array, function(o) {\n *   return String.fromCharCode(o.code);\n * });\n * // => { 'a': { 'dir': 'left', 'code': 97 }, 'd': { 'dir': 'right', 'code': 100 } }\n *\n * _.keyBy(array, 'dir');\n * // => { 'left': { 'dir': 'left', 'code': 97 }, 'right': { 'dir': 'right', 'code': 100 } }\n */\n\n\nvar keyBy = createAggregator(function (result, value, key) {\n  baseAssignValue(result, key, value);\n});\nmodule.exports = keyBy;","var baseMatches = require('./_baseMatches'),\n    baseMatchesProperty = require('./_baseMatchesProperty'),\n    identity = require('./identity'),\n    isArray = require('./isArray'),\n    property = require('./property');\n/**\n * The base implementation of `_.iteratee`.\n *\n * @private\n * @param {*} [value=_.identity] The value to convert to an iteratee.\n * @returns {Function} Returns the iteratee.\n */\n\n\nfunction baseIteratee(value) {\n  // Don't store the `typeof` result in a variable to avoid a JIT bug in Safari 9.\n  // See https://bugs.webkit.org/show_bug.cgi?id=156034 for more details.\n  if (typeof value == 'function') {\n    return value;\n  }\n\n  if (value == null) {\n    return identity;\n  }\n\n  if (typeof value == 'object') {\n    return isArray(value) ? baseMatchesProperty(value[0], value[1]) : baseMatches(value);\n  }\n\n  return property(value);\n}\n\nmodule.exports = baseIteratee;","var listCacheClear = require('./_listCacheClear'),\n    listCacheDelete = require('./_listCacheDelete'),\n    listCacheGet = require('./_listCacheGet'),\n    listCacheHas = require('./_listCacheHas'),\n    listCacheSet = require('./_listCacheSet');\n/**\n * Creates an list cache object.\n *\n * @private\n * @constructor\n * @param {Array} [entries] The key-value pairs to cache.\n */\n\n\nfunction ListCache(entries) {\n  var index = -1,\n      length = entries == null ? 0 : entries.length;\n  this.clear();\n\n  while (++index < length) {\n    var entry = entries[index];\n    this.set(entry[0], entry[1]);\n  }\n} // Add methods to `ListCache`.\n\n\nListCache.prototype.clear = listCacheClear;\nListCache.prototype['delete'] = listCacheDelete;\nListCache.prototype.get = listCacheGet;\nListCache.prototype.has = listCacheHas;\nListCache.prototype.set = listCacheSet;\nmodule.exports = ListCache;","var eq = require('./eq');\n/**\n * Gets the index at which the `key` is found in `array` of key-value pairs.\n *\n * @private\n * @param {Array} array The array to inspect.\n * @param {*} key The key to search for.\n * @returns {number} Returns the index of the matched value, else `-1`.\n */\n\n\nfunction assocIndexOf(array, key) {\n  var length = array.length;\n\n  while (length--) {\n    if (eq(array[length][0], key)) {\n      return length;\n    }\n  }\n\n  return -1;\n}\n\nmodule.exports = assocIndexOf;","/**\n * Performs a\n * [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)\n * comparison between two values to determine if they are equivalent.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to compare.\n * @param {*} other The other value to compare.\n * @returns {boolean} Returns `true` if the values are equivalent, else `false`.\n * @example\n *\n * var object = { 'a': 1 };\n * var other = { 'a': 1 };\n *\n * _.eq(object, object);\n * // => true\n *\n * _.eq(object, other);\n * // => false\n *\n * _.eq('a', 'a');\n * // => true\n *\n * _.eq('a', Object('a'));\n * // => false\n *\n * _.eq(NaN, NaN);\n * // => true\n */\nfunction eq(value, other) {\n  return value === other || value !== value && other !== other;\n}\n\nmodule.exports = eq;","var getNative = require('./_getNative');\n/* Built-in method references that are verified to be native. */\n\n\nvar nativeCreate = getNative(Object, 'create');\nmodule.exports = nativeCreate;","var isKeyable = require('./_isKeyable');\n/**\n * Gets the data for `map`.\n *\n * @private\n * @param {Object} map The map to query.\n * @param {string} key The reference key.\n * @returns {*} Returns the map data.\n */\n\n\nfunction getMapData(map, key) {\n  var data = map.__data__;\n  return isKeyable(key) ? data[typeof key == 'string' ? 'string' : 'hash'] : data.map;\n}\n\nmodule.exports = getMapData;","var isArray = require('./isArray'),\n    isKey = require('./_isKey'),\n    stringToPath = require('./_stringToPath'),\n    toString = require('./toString');\n/**\n * Casts `value` to a path array if it's not one.\n *\n * @private\n * @param {*} value The value to inspect.\n * @param {Object} [object] The object to query keys on.\n * @returns {Array} Returns the cast property path array.\n */\n\n\nfunction castPath(value, object) {\n  if (isArray(value)) {\n    return value;\n  }\n\n  return isKey(value, object) ? [value] : stringToPath(toString(value));\n}\n\nmodule.exports = castPath;","/**\n * A specialized version of `_.map` for arrays without support for iteratee\n * shorthands.\n *\n * @private\n * @param {Array} [array] The array to iterate over.\n * @param {Function} iteratee The function invoked per iteration.\n * @returns {Array} Returns the new mapped array.\n */\nfunction arrayMap(array, iteratee) {\n  var index = -1,\n      length = array == null ? 0 : array.length,\n      result = Array(length);\n\n  while (++index < length) {\n    result[index] = iteratee(array[index], index, array);\n  }\n\n  return result;\n}\n\nmodule.exports = arrayMap;","/**\n * This method returns the first argument it receives.\n *\n * @static\n * @since 0.1.0\n * @memberOf _\n * @category Util\n * @param {*} value Any value.\n * @returns {*} Returns `value`.\n * @example\n *\n * var object = { 'a': 1 };\n *\n * console.log(_.identity(object) === object);\n * // => true\n */\nfunction identity(value) {\n  return value;\n}\n\nmodule.exports = identity;","var baseIsArguments = require('./_baseIsArguments'),\n    isObjectLike = require('./isObjectLike');\n/** Used for built-in method references. */\n\n\nvar objectProto = Object.prototype;\n/** Used to check objects for own properties. */\n\nvar hasOwnProperty = objectProto.hasOwnProperty;\n/** Built-in value references. */\n\nvar propertyIsEnumerable = objectProto.propertyIsEnumerable;\n/**\n * Checks if `value` is likely an `arguments` object.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is an `arguments` object,\n *  else `false`.\n * @example\n *\n * _.isArguments(function() { return arguments; }());\n * // => true\n *\n * _.isArguments([1, 2, 3]);\n * // => false\n */\n\nvar isArguments = baseIsArguments(function () {\n  return arguments;\n}()) ? baseIsArguments : function (value) {\n  return isObjectLike(value) && hasOwnProperty.call(value, 'callee') && !propertyIsEnumerable.call(value, 'callee');\n};\nmodule.exports = isArguments;","var root = require('./_root'),\n    stubFalse = require('./stubFalse');\n/** Detect free variable `exports`. */\n\n\nvar freeExports = typeof exports == 'object' && exports && !exports.nodeType && exports;\n/** Detect free variable `module`. */\n\nvar freeModule = freeExports && typeof module == 'object' && module && !module.nodeType && module;\n/** Detect the popular CommonJS extension `module.exports`. */\n\nvar moduleExports = freeModule && freeModule.exports === freeExports;\n/** Built-in value references. */\n\nvar Buffer = moduleExports ? root.Buffer : undefined;\n/* Built-in method references for those with the same name as other `lodash` methods. */\n\nvar nativeIsBuffer = Buffer ? Buffer.isBuffer : undefined;\n/**\n * Checks if `value` is a buffer.\n *\n * @static\n * @memberOf _\n * @since 4.3.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a buffer, else `false`.\n * @example\n *\n * _.isBuffer(new Buffer(2));\n * // => true\n *\n * _.isBuffer(new Uint8Array(2));\n * // => false\n */\n\nvar isBuffer = nativeIsBuffer || stubFalse;\nmodule.exports = isBuffer;","var baseToString = require('./_baseToString');\n/**\n * Converts `value` to a string. An empty string is returned for `null`\n * and `undefined` values. The sign of `-0` is preserved.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to convert.\n * @returns {string} Returns the converted string.\n * @example\n *\n * _.toString(null);\n * // => ''\n *\n * _.toString(-0);\n * // => '-0'\n *\n * _.toString([1, 2, 3]);\n * // => '1,2,3'\n */\n\n\nfunction toString(value) {\n  return value == null ? '' : baseToString(value);\n}\n\nmodule.exports = toString;","var ListCache = require('./_ListCache'),\n    stackClear = require('./_stackClear'),\n    stackDelete = require('./_stackDelete'),\n    stackGet = require('./_stackGet'),\n    stackHas = require('./_stackHas'),\n    stackSet = require('./_stackSet');\n/**\n * Creates a stack cache object to store key-value pairs.\n *\n * @private\n * @constructor\n * @param {Array} [entries] The key-value pairs to cache.\n */\n\n\nfunction Stack(entries) {\n  var data = this.__data__ = new ListCache(entries);\n  this.size = data.size;\n} // Add methods to `Stack`.\n\n\nStack.prototype.clear = stackClear;\nStack.prototype['delete'] = stackDelete;\nStack.prototype.get = stackGet;\nStack.prototype.has = stackHas;\nStack.prototype.set = stackSet;\nmodule.exports = Stack;","var getNative = require('./_getNative'),\n    root = require('./_root');\n/* Built-in method references that are verified to be native. */\n\n\nvar Map = getNative(root, 'Map');\nmodule.exports = Map;","/** Detect free variable `global` from Node.js. */\nvar freeGlobal = typeof global == 'object' && global && global.Object === Object && global;\nmodule.exports = freeGlobal;","var mapCacheClear = require('./_mapCacheClear'),\n    mapCacheDelete = require('./_mapCacheDelete'),\n    mapCacheGet = require('./_mapCacheGet'),\n    mapCacheHas = require('./_mapCacheHas'),\n    mapCacheSet = require('./_mapCacheSet');\n/**\n * Creates a map cache object to store key-value pairs.\n *\n * @private\n * @constructor\n * @param {Array} [entries] The key-value pairs to cache.\n */\n\n\nfunction MapCache(entries) {\n  var index = -1,\n      length = entries == null ? 0 : entries.length;\n  this.clear();\n\n  while (++index < length) {\n    var entry = entries[index];\n    this.set(entry[0], entry[1]);\n  }\n} // Add methods to `MapCache`.\n\n\nMapCache.prototype.clear = mapCacheClear;\nMapCache.prototype['delete'] = mapCacheDelete;\nMapCache.prototype.get = mapCacheGet;\nMapCache.prototype.has = mapCacheHas;\nMapCache.prototype.set = mapCacheSet;\nmodule.exports = MapCache;","/** Used as references for various `Number` constants. */\nvar MAX_SAFE_INTEGER = 9007199254740991;\n/** Used to detect unsigned integer values. */\n\nvar reIsUint = /^(?:0|[1-9]\\d*)$/;\n/**\n * Checks if `value` is a valid array-like index.\n *\n * @private\n * @param {*} value The value to check.\n * @param {number} [length=MAX_SAFE_INTEGER] The upper bounds of a valid index.\n * @returns {boolean} Returns `true` if `value` is a valid index, else `false`.\n */\n\nfunction isIndex(value, length) {\n  var type = typeof value;\n  length = length == null ? MAX_SAFE_INTEGER : length;\n  return !!length && (type == 'number' || type != 'symbol' && reIsUint.test(value)) && value > -1 && value % 1 == 0 && value < length;\n}\n\nmodule.exports = isIndex;","var baseIsTypedArray = require('./_baseIsTypedArray'),\n    baseUnary = require('./_baseUnary'),\n    nodeUtil = require('./_nodeUtil');\n/* Node.js helper references. */\n\n\nvar nodeIsTypedArray = nodeUtil && nodeUtil.isTypedArray;\n/**\n * Checks if `value` is classified as a typed array.\n *\n * @static\n * @memberOf _\n * @since 3.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a typed array, else `false`.\n * @example\n *\n * _.isTypedArray(new Uint8Array);\n * // => true\n *\n * _.isTypedArray([]);\n * // => false\n */\n\nvar isTypedArray = nodeIsTypedArray ? baseUnary(nodeIsTypedArray) : baseIsTypedArray;\nmodule.exports = isTypedArray;","/** Used as references for various `Number` constants. */\nvar MAX_SAFE_INTEGER = 9007199254740991;\n/**\n * Checks if `value` is a valid array-like length.\n *\n * **Note:** This method is loosely based on\n * [`ToLength`](http://ecma-international.org/ecma-262/7.0/#sec-tolength).\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a valid length, else `false`.\n * @example\n *\n * _.isLength(3);\n * // => true\n *\n * _.isLength(Number.MIN_VALUE);\n * // => false\n *\n * _.isLength(Infinity);\n * // => false\n *\n * _.isLength('3');\n * // => false\n */\n\nfunction isLength(value) {\n  return typeof value == 'number' && value > -1 && value % 1 == 0 && value <= MAX_SAFE_INTEGER;\n}\n\nmodule.exports = isLength;","/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n/**\n * Checks if `value` is likely a prototype object.\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a prototype, else `false`.\n */\n\nfunction isPrototype(value) {\n  var Ctor = value && value.constructor,\n      proto = typeof Ctor == 'function' && Ctor.prototype || objectProto;\n  return value === proto;\n}\n\nmodule.exports = isPrototype;","var DataView = require('./_DataView'),\n    Map = require('./_Map'),\n    Promise = require('./_Promise'),\n    Set = require('./_Set'),\n    WeakMap = require('./_WeakMap'),\n    baseGetTag = require('./_baseGetTag'),\n    toSource = require('./_toSource');\n/** `Object#toString` result references. */\n\n\nvar mapTag = '[object Map]',\n    objectTag = '[object Object]',\n    promiseTag = '[object Promise]',\n    setTag = '[object Set]',\n    weakMapTag = '[object WeakMap]';\nvar dataViewTag = '[object DataView]';\n/** Used to detect maps, sets, and weakmaps. */\n\nvar dataViewCtorString = toSource(DataView),\n    mapCtorString = toSource(Map),\n    promiseCtorString = toSource(Promise),\n    setCtorString = toSource(Set),\n    weakMapCtorString = toSource(WeakMap);\n/**\n * Gets the `toStringTag` of `value`.\n *\n * @private\n * @param {*} value The value to query.\n * @returns {string} Returns the `toStringTag`.\n */\n\nvar getTag = baseGetTag; // Fallback for data views, maps, sets, and weak maps in IE 11 and promises in Node.js < 6.\n\nif (DataView && getTag(new DataView(new ArrayBuffer(1))) != dataViewTag || Map && getTag(new Map()) != mapTag || Promise && getTag(Promise.resolve()) != promiseTag || Set && getTag(new Set()) != setTag || WeakMap && getTag(new WeakMap()) != weakMapTag) {\n  getTag = function getTag(value) {\n    var result = baseGetTag(value),\n        Ctor = result == objectTag ? value.constructor : undefined,\n        ctorString = Ctor ? toSource(Ctor) : '';\n\n    if (ctorString) {\n      switch (ctorString) {\n        case dataViewCtorString:\n          return dataViewTag;\n\n        case mapCtorString:\n          return mapTag;\n\n        case promiseCtorString:\n          return promiseTag;\n\n        case setCtorString:\n          return setTag;\n\n        case weakMapCtorString:\n          return weakMapTag;\n      }\n    }\n\n    return result;\n  };\n}\n\nmodule.exports = getTag;","var castPath = require('./_castPath'),\n    toKey = require('./_toKey');\n/**\n * The base implementation of `_.get` without support for default values.\n *\n * @private\n * @param {Object} object The object to query.\n * @param {Array|string} path The path of the property to get.\n * @returns {*} Returns the resolved value.\n */\n\n\nfunction baseGet(object, path) {\n  path = castPath(path, object);\n  var index = 0,\n      length = path.length;\n\n  while (object != null && index < length) {\n    object = object[toKey(path[index++])];\n  }\n\n  return index && index == length ? object : undefined;\n}\n\nmodule.exports = baseGet;","var isArray = require('./isArray'),\n    isSymbol = require('./isSymbol');\n/** Used to match property names within property paths. */\n\n\nvar reIsDeepProp = /\\.|\\[(?:[^[\\]]*|([\"'])(?:(?!\\1)[^\\\\]|\\\\.)*?\\1)\\]/,\n    reIsPlainProp = /^\\w*$/;\n/**\n * Checks if `value` is a property name and not a property path.\n *\n * @private\n * @param {*} value The value to check.\n * @param {Object} [object] The object to query keys on.\n * @returns {boolean} Returns `true` if `value` is a property name, else `false`.\n */\n\nfunction isKey(value, object) {\n  if (isArray(value)) {\n    return false;\n  }\n\n  var type = typeof value;\n\n  if (type == 'number' || type == 'symbol' || type == 'boolean' || value == null || isSymbol(value)) {\n    return true;\n  }\n\n  return reIsPlainProp.test(value) || !reIsDeepProp.test(value) || object != null && value in Object(object);\n}\n\nmodule.exports = isKey;","var baseForOwn = require('./_baseForOwn'),\n    createBaseEach = require('./_createBaseEach');\n/**\n * The base implementation of `_.forEach` without support for iteratee shorthands.\n *\n * @private\n * @param {Array|Object} collection The collection to iterate over.\n * @param {Function} iteratee The function invoked per iteration.\n * @returns {Array|Object} Returns `collection`.\n */\n\n\nvar baseEach = createBaseEach(baseForOwn);\nmodule.exports = baseEach;","var baseIsEqualDeep = require('./_baseIsEqualDeep'),\n    isObjectLike = require('./isObjectLike');\n/**\n * The base implementation of `_.isEqual` which supports partial comparisons\n * and tracks traversed objects.\n *\n * @private\n * @param {*} value The value to compare.\n * @param {*} other The other value to compare.\n * @param {boolean} bitmask The bitmask flags.\n *  1 - Unordered comparison\n *  2 - Partial comparison\n * @param {Function} [customizer] The function to customize comparisons.\n * @param {Object} [stack] Tracks traversed `value` and `other` objects.\n * @returns {boolean} Returns `true` if the values are equivalent, else `false`.\n */\n\n\nfunction baseIsEqual(value, other, bitmask, customizer, stack) {\n  if (value === other) {\n    return true;\n  }\n\n  if (value == null || other == null || !isObjectLike(value) && !isObjectLike(other)) {\n    return value !== value && other !== other;\n  }\n\n  return baseIsEqualDeep(value, other, bitmask, customizer, baseIsEqual, stack);\n}\n\nmodule.exports = baseIsEqual;","/**\n * The base implementation of `_.unary` without support for storing metadata.\n *\n * @private\n * @param {Function} func The function to cap arguments for.\n * @returns {Function} Returns the new capped function.\n */\nfunction baseUnary(func) {\n  return function (value) {\n    return func(value);\n  };\n}\n\nmodule.exports = baseUnary;","/**\n * Creates a unary function that invokes `func` with its argument transformed.\n *\n * @private\n * @param {Function} func The function to wrap.\n * @param {Function} transform The argument transform.\n * @returns {Function} Returns the new function.\n */\nfunction overArg(func, transform) {\n  return function (arg) {\n    return func(transform(arg));\n  };\n}\n\nmodule.exports = overArg;","var defineProperty = require('./_defineProperty');\n/**\n * The base implementation of `assignValue` and `assignMergeValue` without\n * value checks.\n *\n * @private\n * @param {Object} object The object to modify.\n * @param {string} key The key of the property to assign.\n * @param {*} value The value to assign.\n */\n\n\nfunction baseAssignValue(object, key, value) {\n  if (key == '__proto__' && defineProperty) {\n    defineProperty(object, key, {\n      'configurable': true,\n      'enumerable': true,\n      'value': value,\n      'writable': true\n    });\n  } else {\n    object[key] = value;\n  }\n}\n\nmodule.exports = baseAssignValue;","var Symbol = require('./_Symbol');\n/** Used for built-in method references. */\n\n\nvar objectProto = Object.prototype;\n/** Used to check objects for own properties. */\n\nvar hasOwnProperty = objectProto.hasOwnProperty;\n/**\n * Used to resolve the\n * [`toStringTag`](http://ecma-international.org/ecma-262/7.0/#sec-object.prototype.tostring)\n * of values.\n */\n\nvar nativeObjectToString = objectProto.toString;\n/** Built-in value references. */\n\nvar symToStringTag = Symbol ? Symbol.toStringTag : undefined;\n/**\n * A specialized version of `baseGetTag` which ignores `Symbol.toStringTag` values.\n *\n * @private\n * @param {*} value The value to query.\n * @returns {string} Returns the raw `toStringTag`.\n */\n\nfunction getRawTag(value) {\n  var isOwn = hasOwnProperty.call(value, symToStringTag),\n      tag = value[symToStringTag];\n\n  try {\n    value[symToStringTag] = undefined;\n    var unmasked = true;\n  } catch (e) {}\n\n  var result = nativeObjectToString.call(value);\n\n  if (unmasked) {\n    if (isOwn) {\n      value[symToStringTag] = tag;\n    } else {\n      delete value[symToStringTag];\n    }\n  }\n\n  return result;\n}\n\nmodule.exports = getRawTag;","/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n/**\n * Used to resolve the\n * [`toStringTag`](http://ecma-international.org/ecma-262/7.0/#sec-object.prototype.tostring)\n * of values.\n */\n\nvar nativeObjectToString = objectProto.toString;\n/**\n * Converts `value` to a string using `Object.prototype.toString`.\n *\n * @private\n * @param {*} value The value to convert.\n * @returns {string} Returns the converted string.\n */\n\nfunction objectToString(value) {\n  return nativeObjectToString.call(value);\n}\n\nmodule.exports = objectToString;","/** Used for built-in method references. */\nvar funcProto = Function.prototype;\n/** Used to resolve the decompiled source of functions. */\n\nvar funcToString = funcProto.toString;\n/**\n * Converts `func` to its source code.\n *\n * @private\n * @param {Function} func The function to convert.\n * @returns {string} Returns the source code.\n */\n\nfunction toSource(func) {\n  if (func != null) {\n    try {\n      return funcToString.call(func);\n    } catch (e) {}\n\n    try {\n      return func + '';\n    } catch (e) {}\n  }\n\n  return '';\n}\n\nmodule.exports = toSource;","var SetCache = require('./_SetCache'),\n    arraySome = require('./_arraySome'),\n    cacheHas = require('./_cacheHas');\n/** Used to compose bitmasks for value comparisons. */\n\n\nvar COMPARE_PARTIAL_FLAG = 1,\n    COMPARE_UNORDERED_FLAG = 2;\n/**\n * A specialized version of `baseIsEqualDeep` for arrays with support for\n * partial deep comparisons.\n *\n * @private\n * @param {Array} array The array to compare.\n * @param {Array} other The other array to compare.\n * @param {number} bitmask The bitmask flags. See `baseIsEqual` for more details.\n * @param {Function} customizer The function to customize comparisons.\n * @param {Function} equalFunc The function to determine equivalents of values.\n * @param {Object} stack Tracks traversed `array` and `other` objects.\n * @returns {boolean} Returns `true` if the arrays are equivalent, else `false`.\n */\n\nfunction equalArrays(array, other, bitmask, customizer, equalFunc, stack) {\n  var isPartial = bitmask & COMPARE_PARTIAL_FLAG,\n      arrLength = array.length,\n      othLength = other.length;\n\n  if (arrLength != othLength && !(isPartial && othLength > arrLength)) {\n    return false;\n  } // Assume cyclic values are equal.\n\n\n  var stacked = stack.get(array);\n\n  if (stacked && stack.get(other)) {\n    return stacked == other;\n  }\n\n  var index = -1,\n      result = true,\n      seen = bitmask & COMPARE_UNORDERED_FLAG ? new SetCache() : undefined;\n  stack.set(array, other);\n  stack.set(other, array); // Ignore non-index properties.\n\n  while (++index < arrLength) {\n    var arrValue = array[index],\n        othValue = other[index];\n\n    if (customizer) {\n      var compared = isPartial ? customizer(othValue, arrValue, index, other, array, stack) : customizer(arrValue, othValue, index, array, other, stack);\n    }\n\n    if (compared !== undefined) {\n      if (compared) {\n        continue;\n      }\n\n      result = false;\n      break;\n    } // Recursively compare arrays (susceptible to call stack limits).\n\n\n    if (seen) {\n      if (!arraySome(other, function (othValue, othIndex) {\n        if (!cacheHas(seen, othIndex) && (arrValue === othValue || equalFunc(arrValue, othValue, bitmask, customizer, stack))) {\n          return seen.push(othIndex);\n        }\n      })) {\n        result = false;\n        break;\n      }\n    } else if (!(arrValue === othValue || equalFunc(arrValue, othValue, bitmask, customizer, stack))) {\n      result = false;\n      break;\n    }\n  }\n\n  stack['delete'](array);\n  stack['delete'](other);\n  return result;\n}\n\nmodule.exports = equalArrays;","/**\n * Converts `set` to an array of its values.\n *\n * @private\n * @param {Object} set The set to convert.\n * @returns {Array} Returns the values.\n */\nfunction setToArray(set) {\n  var index = -1,\n      result = Array(set.size);\n  set.forEach(function (value) {\n    result[++index] = value;\n  });\n  return result;\n}\n\nmodule.exports = setToArray;","/**\n * Appends the elements of `values` to `array`.\n *\n * @private\n * @param {Array} array The array to modify.\n * @param {Array} values The values to append.\n * @returns {Array} Returns `array`.\n */\nfunction arrayPush(array, values) {\n  var index = -1,\n      length = values.length,\n      offset = array.length;\n\n  while (++index < length) {\n    array[offset + index] = values[index];\n  }\n\n  return array;\n}\n\nmodule.exports = arrayPush;","var arrayFilter = require('./_arrayFilter'),\n    stubArray = require('./stubArray');\n/** Used for built-in method references. */\n\n\nvar objectProto = Object.prototype;\n/** Built-in value references. */\n\nvar propertyIsEnumerable = objectProto.propertyIsEnumerable;\n/* Built-in method references for those with the same name as other `lodash` methods. */\n\nvar nativeGetSymbols = Object.getOwnPropertySymbols;\n/**\n * Creates an array of the own enumerable symbols of `object`.\n *\n * @private\n * @param {Object} object The object to query.\n * @returns {Array} Returns the array of symbols.\n */\n\nvar getSymbols = !nativeGetSymbols ? stubArray : function (object) {\n  if (object == null) {\n    return [];\n  }\n\n  object = Object(object);\n  return arrayFilter(nativeGetSymbols(object), function (symbol) {\n    return propertyIsEnumerable.call(object, symbol);\n  });\n};\nmodule.exports = getSymbols;","var freeGlobal = require('./_freeGlobal');\n/** Detect free variable `exports`. */\n\n\nvar freeExports = typeof exports == 'object' && exports && !exports.nodeType && exports;\n/** Detect free variable `module`. */\n\nvar freeModule = freeExports && typeof module == 'object' && module && !module.nodeType && module;\n/** Detect the popular CommonJS extension `module.exports`. */\n\nvar moduleExports = freeModule && freeModule.exports === freeExports;\n/** Detect free variable `process` from Node.js. */\n\nvar freeProcess = moduleExports && freeGlobal.process;\n/** Used to access faster Node.js helpers. */\n\nvar nodeUtil = function () {\n  try {\n    // Use `util.types` for Node.js 10+.\n    var types = freeModule && freeModule.require && freeModule.require('util').types;\n\n    if (types) {\n      return types;\n    } // Legacy `process.binding('util')` for Node.js < 10.\n\n\n    return freeProcess && freeProcess.binding && freeProcess.binding('util');\n  } catch (e) {}\n}();\n\nmodule.exports = nodeUtil;","var isObject = require('./isObject');\n/**\n * Checks if `value` is suitable for strict equality comparisons, i.e. `===`.\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` if suitable for strict\n *  equality comparisons, else `false`.\n */\n\n\nfunction isStrictComparable(value) {\n  return value === value && !isObject(value);\n}\n\nmodule.exports = isStrictComparable;","/**\n * A specialized version of `matchesProperty` for source values suitable\n * for strict equality comparisons, i.e. `===`.\n *\n * @private\n * @param {string} key The key of the property to get.\n * @param {*} srcValue The value to match.\n * @returns {Function} Returns the new spec function.\n */\nfunction matchesStrictComparable(key, srcValue) {\n  return function (object) {\n    if (object == null) {\n      return false;\n    }\n\n    return object[key] === srcValue && (srcValue !== undefined || key in Object(object));\n  };\n}\n\nmodule.exports = matchesStrictComparable;","var Symbol = require('./_Symbol'),\n    arrayMap = require('./_arrayMap'),\n    isArray = require('./isArray'),\n    isSymbol = require('./isSymbol');\n/** Used as references for various `Number` constants. */\n\n\nvar INFINITY = 1 / 0;\n/** Used to convert symbols to primitives and strings. */\n\nvar symbolProto = Symbol ? Symbol.prototype : undefined,\n    symbolToString = symbolProto ? symbolProto.toString : undefined;\n/**\n * The base implementation of `_.toString` which doesn't convert nullish\n * values to empty strings.\n *\n * @private\n * @param {*} value The value to process.\n * @returns {string} Returns the string.\n */\n\nfunction baseToString(value) {\n  // Exit early for strings to avoid a performance hit in some environments.\n  if (typeof value == 'string') {\n    return value;\n  }\n\n  if (isArray(value)) {\n    // Recursively convert values (susceptible to call stack limits).\n    return arrayMap(value, baseToString) + '';\n  }\n\n  if (isSymbol(value)) {\n    return symbolToString ? symbolToString.call(value) : '';\n  }\n\n  var result = value + '';\n  return result == '0' && 1 / value == -INFINITY ? '-0' : result;\n}\n\nmodule.exports = baseToString;","var MapCache = require('./_MapCache'),\n    setCacheAdd = require('./_setCacheAdd'),\n    setCacheHas = require('./_setCacheHas');\n/**\n *\n * Creates an array cache object to store unique values.\n *\n * @private\n * @constructor\n * @param {Array} [values] The values to cache.\n */\n\n\nfunction SetCache(values) {\n  var index = -1,\n      length = values == null ? 0 : values.length;\n  this.__data__ = new MapCache();\n\n  while (++index < length) {\n    this.add(values[index]);\n  }\n} // Add methods to `SetCache`.\n\n\nSetCache.prototype.add = SetCache.prototype.push = setCacheAdd;\nSetCache.prototype.has = setCacheHas;\nmodule.exports = SetCache;","/**\n * Checks if a `cache` value for `key` exists.\n *\n * @private\n * @param {Object} cache The cache to query.\n * @param {string} key The key of the entry to check.\n * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.\n */\nfunction cacheHas(cache, key) {\n  return cache.has(key);\n}\n\nmodule.exports = cacheHas;","var root = require('./_root');\n/** Built-in value references. */\n\n\nvar Uint8Array = root.Uint8Array;\nmodule.exports = Uint8Array;","var baseGetAllKeys = require('./_baseGetAllKeys'),\n    getSymbols = require('./_getSymbols'),\n    keys = require('./keys');\n/**\n * Creates an array of own enumerable property names and symbols of `object`.\n *\n * @private\n * @param {Object} object The object to query.\n * @returns {Array} Returns the array of property names and symbols.\n */\n\n\nfunction getAllKeys(object) {\n  return baseGetAllKeys(object, keys, getSymbols);\n}\n\nmodule.exports = getAllKeys;","var arrayPush = require('./_arrayPush'),\n    isArray = require('./isArray');\n/**\n * The base implementation of `getAllKeys` and `getAllKeysIn` which uses\n * `keysFunc` and `symbolsFunc` to get the enumerable property names and\n * symbols of `object`.\n *\n * @private\n * @param {Object} object The object to query.\n * @param {Function} keysFunc The function to get the keys of `object`.\n * @param {Function} symbolsFunc The function to get the symbols of `object`.\n * @returns {Array} Returns the array of property names and symbols.\n */\n\n\nfunction baseGetAllKeys(object, keysFunc, symbolsFunc) {\n  var result = keysFunc(object);\n  return isArray(object) ? result : arrayPush(result, symbolsFunc(object));\n}\n\nmodule.exports = baseGetAllKeys;","/**\n * A specialized version of `_.filter` for arrays without support for\n * iteratee shorthands.\n *\n * @private\n * @param {Array} [array] The array to iterate over.\n * @param {Function} predicate The function invoked per iteration.\n * @returns {Array} Returns the new filtered array.\n */\nfunction arrayFilter(array, predicate) {\n  var index = -1,\n      length = array == null ? 0 : array.length,\n      resIndex = 0,\n      result = [];\n\n  while (++index < length) {\n    var value = array[index];\n\n    if (predicate(value, index, array)) {\n      result[resIndex++] = value;\n    }\n  }\n\n  return result;\n}\n\nmodule.exports = arrayFilter;","/**\n * This method returns a new empty array.\n *\n * @static\n * @memberOf _\n * @since 4.13.0\n * @category Util\n * @returns {Array} Returns the new empty array.\n * @example\n *\n * var arrays = _.times(2, _.stubArray);\n *\n * console.log(arrays);\n * // => [[], []]\n *\n * console.log(arrays[0] === arrays[1]);\n * // => false\n */\nfunction stubArray() {\n  return [];\n}\n\nmodule.exports = stubArray;","var baseTimes = require('./_baseTimes'),\n    isArguments = require('./isArguments'),\n    isArray = require('./isArray'),\n    isBuffer = require('./isBuffer'),\n    isIndex = require('./_isIndex'),\n    isTypedArray = require('./isTypedArray');\n/** Used for built-in method references. */\n\n\nvar objectProto = Object.prototype;\n/** Used to check objects for own properties. */\n\nvar hasOwnProperty = objectProto.hasOwnProperty;\n/**\n * Creates an array of the enumerable property names of the array-like `value`.\n *\n * @private\n * @param {*} value The value to query.\n * @param {boolean} inherited Specify returning inherited property names.\n * @returns {Array} Returns the array of property names.\n */\n\nfunction arrayLikeKeys(value, inherited) {\n  var isArr = isArray(value),\n      isArg = !isArr && isArguments(value),\n      isBuff = !isArr && !isArg && isBuffer(value),\n      isType = !isArr && !isArg && !isBuff && isTypedArray(value),\n      skipIndexes = isArr || isArg || isBuff || isType,\n      result = skipIndexes ? baseTimes(value.length, String) : [],\n      length = result.length;\n\n  for (var key in value) {\n    if ((inherited || hasOwnProperty.call(value, key)) && !(skipIndexes && ( // Safari 9 has enumerable `arguments.length` in strict mode.\n    key == 'length' || // Node.js 0.10 has enumerable non-index properties on buffers.\n    isBuff && (key == 'offset' || key == 'parent') || // PhantomJS 2 has enumerable non-index properties on typed arrays.\n    isType && (key == 'buffer' || key == 'byteLength' || key == 'byteOffset') || // Skip index properties.\n    isIndex(key, length)))) {\n      result.push(key);\n    }\n  }\n\n  return result;\n}\n\nmodule.exports = arrayLikeKeys;","var isPrototype = require('./_isPrototype'),\n    nativeKeys = require('./_nativeKeys');\n/** Used for built-in method references. */\n\n\nvar objectProto = Object.prototype;\n/** Used to check objects for own properties. */\n\nvar hasOwnProperty = objectProto.hasOwnProperty;\n/**\n * The base implementation of `_.keys` which doesn't treat sparse arrays as dense.\n *\n * @private\n * @param {Object} object The object to query.\n * @returns {Array} Returns the array of property names.\n */\n\nfunction baseKeys(object) {\n  if (!isPrototype(object)) {\n    return nativeKeys(object);\n  }\n\n  var result = [];\n\n  for (var key in Object(object)) {\n    if (hasOwnProperty.call(object, key) && key != 'constructor') {\n      result.push(key);\n    }\n  }\n\n  return result;\n}\n\nmodule.exports = baseKeys;","var getNative = require('./_getNative'),\n    root = require('./_root');\n/* Built-in method references that are verified to be native. */\n\n\nvar Set = getNative(root, 'Set');\nmodule.exports = Set;","var baseHasIn = require('./_baseHasIn'),\n    hasPath = require('./_hasPath');\n/**\n * Checks if `path` is a direct or inherited property of `object`.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Object\n * @param {Object} object The object to query.\n * @param {Array|string} path The path to check.\n * @returns {boolean} Returns `true` if `path` exists, else `false`.\n * @example\n *\n * var object = _.create({ 'a': _.create({ 'b': 2 }) });\n *\n * _.hasIn(object, 'a');\n * // => true\n *\n * _.hasIn(object, 'a.b');\n * // => true\n *\n * _.hasIn(object, ['a', 'b']);\n * // => true\n *\n * _.hasIn(object, 'b');\n * // => false\n */\n\n\nfunction hasIn(object, path) {\n  return object != null && hasPath(object, path, baseHasIn);\n}\n\nmodule.exports = hasIn;","var getNative = require('./_getNative');\n\nvar defineProperty = function () {\n  try {\n    var func = getNative(Object, 'defineProperty');\n    func({}, '', {});\n    return func;\n  } catch (e) {}\n}();\n\nmodule.exports = defineProperty;","var createBaseFor = require('./_createBaseFor');\n/**\n * The base implementation of `baseForOwn` which iterates over `object`\n * properties returned by `keysFunc` and invokes `iteratee` for each property.\n * Iteratee functions may exit iteration early by explicitly returning `false`.\n *\n * @private\n * @param {Object} object The object to iterate over.\n * @param {Function} iteratee The function invoked per iteration.\n * @param {Function} keysFunc The function to get the keys of `object`.\n * @returns {Object} Returns `object`.\n */\n\n\nvar baseFor = createBaseFor();\nmodule.exports = baseFor;","var baseIsMatch = require('./_baseIsMatch'),\n    getMatchData = require('./_getMatchData'),\n    matchesStrictComparable = require('./_matchesStrictComparable');\n/**\n * The base implementation of `_.matches` which doesn't clone `source`.\n *\n * @private\n * @param {Object} source The object of property values to match.\n * @returns {Function} Returns the new spec function.\n */\n\n\nfunction baseMatches(source) {\n  var matchData = getMatchData(source);\n\n  if (matchData.length == 1 && matchData[0][2]) {\n    return matchesStrictComparable(matchData[0][0], matchData[0][1]);\n  }\n\n  return function (object) {\n    return object === source || baseIsMatch(object, source, matchData);\n  };\n}\n\nmodule.exports = baseMatches;","var Stack = require('./_Stack'),\n    baseIsEqual = require('./_baseIsEqual');\n/** Used to compose bitmasks for value comparisons. */\n\n\nvar COMPARE_PARTIAL_FLAG = 1,\n    COMPARE_UNORDERED_FLAG = 2;\n/**\n * The base implementation of `_.isMatch` without support for iteratee shorthands.\n *\n * @private\n * @param {Object} object The object to inspect.\n * @param {Object} source The object of property values to match.\n * @param {Array} matchData The property names, values, and compare flags to match.\n * @param {Function} [customizer] The function to customize comparisons.\n * @returns {boolean} Returns `true` if `object` is a match, else `false`.\n */\n\nfunction baseIsMatch(object, source, matchData, customizer) {\n  var index = matchData.length,\n      length = index,\n      noCustomizer = !customizer;\n\n  if (object == null) {\n    return !length;\n  }\n\n  object = Object(object);\n\n  while (index--) {\n    var data = matchData[index];\n\n    if (noCustomizer && data[2] ? data[1] !== object[data[0]] : !(data[0] in object)) {\n      return false;\n    }\n  }\n\n  while (++index < length) {\n    data = matchData[index];\n    var key = data[0],\n        objValue = object[key],\n        srcValue = data[1];\n\n    if (noCustomizer && data[2]) {\n      if (objValue === undefined && !(key in object)) {\n        return false;\n      }\n    } else {\n      var stack = new Stack();\n\n      if (customizer) {\n        var result = customizer(objValue, srcValue, key, object, source, stack);\n      }\n\n      if (!(result === undefined ? baseIsEqual(srcValue, objValue, COMPARE_PARTIAL_FLAG | COMPARE_UNORDERED_FLAG, customizer, stack) : result)) {\n        return false;\n      }\n    }\n  }\n\n  return true;\n}\n\nmodule.exports = baseIsMatch;","/**\n * Removes all key-value entries from the list cache.\n *\n * @private\n * @name clear\n * @memberOf ListCache\n */\nfunction listCacheClear() {\n  this.__data__ = [];\n  this.size = 0;\n}\n\nmodule.exports = listCacheClear;","var assocIndexOf = require('./_assocIndexOf');\n/** Used for built-in method references. */\n\n\nvar arrayProto = Array.prototype;\n/** Built-in value references. */\n\nvar splice = arrayProto.splice;\n/**\n * Removes `key` and its value from the list cache.\n *\n * @private\n * @name delete\n * @memberOf ListCache\n * @param {string} key The key of the value to remove.\n * @returns {boolean} Returns `true` if the entry was removed, else `false`.\n */\n\nfunction listCacheDelete(key) {\n  var data = this.__data__,\n      index = assocIndexOf(data, key);\n\n  if (index < 0) {\n    return false;\n  }\n\n  var lastIndex = data.length - 1;\n\n  if (index == lastIndex) {\n    data.pop();\n  } else {\n    splice.call(data, index, 1);\n  }\n\n  --this.size;\n  return true;\n}\n\nmodule.exports = listCacheDelete;","var assocIndexOf = require('./_assocIndexOf');\n/**\n * Gets the list cache value for `key`.\n *\n * @private\n * @name get\n * @memberOf ListCache\n * @param {string} key The key of the value to get.\n * @returns {*} Returns the entry value.\n */\n\n\nfunction listCacheGet(key) {\n  var data = this.__data__,\n      index = assocIndexOf(data, key);\n  return index < 0 ? undefined : data[index][1];\n}\n\nmodule.exports = listCacheGet;","var assocIndexOf = require('./_assocIndexOf');\n/**\n * Checks if a list cache value for `key` exists.\n *\n * @private\n * @name has\n * @memberOf ListCache\n * @param {string} key The key of the entry to check.\n * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.\n */\n\n\nfunction listCacheHas(key) {\n  return assocIndexOf(this.__data__, key) > -1;\n}\n\nmodule.exports = listCacheHas;","var assocIndexOf = require('./_assocIndexOf');\n/**\n * Sets the list cache `key` to `value`.\n *\n * @private\n * @name set\n * @memberOf ListCache\n * @param {string} key The key of the value to set.\n * @param {*} value The value to set.\n * @returns {Object} Returns the list cache instance.\n */\n\n\nfunction listCacheSet(key, value) {\n  var data = this.__data__,\n      index = assocIndexOf(data, key);\n\n  if (index < 0) {\n    ++this.size;\n    data.push([key, value]);\n  } else {\n    data[index][1] = value;\n  }\n\n  return this;\n}\n\nmodule.exports = listCacheSet;","var ListCache = require('./_ListCache');\n/**\n * Removes all key-value entries from the stack.\n *\n * @private\n * @name clear\n * @memberOf Stack\n */\n\n\nfunction stackClear() {\n  this.__data__ = new ListCache();\n  this.size = 0;\n}\n\nmodule.exports = stackClear;","/**\n * Removes `key` and its value from the stack.\n *\n * @private\n * @name delete\n * @memberOf Stack\n * @param {string} key The key of the value to remove.\n * @returns {boolean} Returns `true` if the entry was removed, else `false`.\n */\nfunction stackDelete(key) {\n  var data = this.__data__,\n      result = data['delete'](key);\n  this.size = data.size;\n  return result;\n}\n\nmodule.exports = stackDelete;","/**\n * Gets the stack value for `key`.\n *\n * @private\n * @name get\n * @memberOf Stack\n * @param {string} key The key of the value to get.\n * @returns {*} Returns the entry value.\n */\nfunction stackGet(key) {\n  return this.__data__.get(key);\n}\n\nmodule.exports = stackGet;","/**\n * Checks if a stack value for `key` exists.\n *\n * @private\n * @name has\n * @memberOf Stack\n * @param {string} key The key of the entry to check.\n * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.\n */\nfunction stackHas(key) {\n  return this.__data__.has(key);\n}\n\nmodule.exports = stackHas;","var ListCache = require('./_ListCache'),\n    Map = require('./_Map'),\n    MapCache = require('./_MapCache');\n/** Used as the size to enable large array optimizations. */\n\n\nvar LARGE_ARRAY_SIZE = 200;\n/**\n * Sets the stack `key` to `value`.\n *\n * @private\n * @name set\n * @memberOf Stack\n * @param {string} key The key of the value to set.\n * @param {*} value The value to set.\n * @returns {Object} Returns the stack cache instance.\n */\n\nfunction stackSet(key, value) {\n  var data = this.__data__;\n\n  if (data instanceof ListCache) {\n    var pairs = data.__data__;\n\n    if (!Map || pairs.length < LARGE_ARRAY_SIZE - 1) {\n      pairs.push([key, value]);\n      this.size = ++data.size;\n      return this;\n    }\n\n    data = this.__data__ = new MapCache(pairs);\n  }\n\n  data.set(key, value);\n  this.size = data.size;\n  return this;\n}\n\nmodule.exports = stackSet;","var isFunction = require('./isFunction'),\n    isMasked = require('./_isMasked'),\n    isObject = require('./isObject'),\n    toSource = require('./_toSource');\n/**\n * Used to match `RegExp`\n * [syntax characters](http://ecma-international.org/ecma-262/7.0/#sec-patterns).\n */\n\n\nvar reRegExpChar = /[\\\\^$.*+?()[\\]{}|]/g;\n/** Used to detect host constructors (Safari). */\n\nvar reIsHostCtor = /^\\[object .+?Constructor\\]$/;\n/** Used for built-in method references. */\n\nvar funcProto = Function.prototype,\n    objectProto = Object.prototype;\n/** Used to resolve the decompiled source of functions. */\n\nvar funcToString = funcProto.toString;\n/** Used to check objects for own properties. */\n\nvar hasOwnProperty = objectProto.hasOwnProperty;\n/** Used to detect if a method is native. */\n\nvar reIsNative = RegExp('^' + funcToString.call(hasOwnProperty).replace(reRegExpChar, '\\\\$&').replace(/hasOwnProperty|(function).*?(?=\\\\\\()| for .+?(?=\\\\\\])/g, '$1.*?') + '$');\n/**\n * The base implementation of `_.isNative` without bad shim checks.\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a native function,\n *  else `false`.\n */\n\nfunction baseIsNative(value) {\n  if (!isObject(value) || isMasked(value)) {\n    return false;\n  }\n\n  var pattern = isFunction(value) ? reIsNative : reIsHostCtor;\n  return pattern.test(toSource(value));\n}\n\nmodule.exports = baseIsNative;","var coreJsData = require('./_coreJsData');\n/** Used to detect methods masquerading as native. */\n\n\nvar maskSrcKey = function () {\n  var uid = /[^.]+$/.exec(coreJsData && coreJsData.keys && coreJsData.keys.IE_PROTO || '');\n  return uid ? 'Symbol(src)_1.' + uid : '';\n}();\n/**\n * Checks if `func` has its source masked.\n *\n * @private\n * @param {Function} func The function to check.\n * @returns {boolean} Returns `true` if `func` is masked, else `false`.\n */\n\n\nfunction isMasked(func) {\n  return !!maskSrcKey && maskSrcKey in func;\n}\n\nmodule.exports = isMasked;","var root = require('./_root');\n/** Used to detect overreaching core-js shims. */\n\n\nvar coreJsData = root['__core-js_shared__'];\nmodule.exports = coreJsData;","/**\n * Gets the value at `key` of `object`.\n *\n * @private\n * @param {Object} [object] The object to query.\n * @param {string} key The key of the property to get.\n * @returns {*} Returns the property value.\n */\nfunction getValue(object, key) {\n  return object == null ? undefined : object[key];\n}\n\nmodule.exports = getValue;","var Hash = require('./_Hash'),\n    ListCache = require('./_ListCache'),\n    Map = require('./_Map');\n/**\n * Removes all key-value entries from the map.\n *\n * @private\n * @name clear\n * @memberOf MapCache\n */\n\n\nfunction mapCacheClear() {\n  this.size = 0;\n  this.__data__ = {\n    'hash': new Hash(),\n    'map': new (Map || ListCache)(),\n    'string': new Hash()\n  };\n}\n\nmodule.exports = mapCacheClear;","var hashClear = require('./_hashClear'),\n    hashDelete = require('./_hashDelete'),\n    hashGet = require('./_hashGet'),\n    hashHas = require('./_hashHas'),\n    hashSet = require('./_hashSet');\n/**\n * Creates a hash object.\n *\n * @private\n * @constructor\n * @param {Array} [entries] The key-value pairs to cache.\n */\n\n\nfunction Hash(entries) {\n  var index = -1,\n      length = entries == null ? 0 : entries.length;\n  this.clear();\n\n  while (++index < length) {\n    var entry = entries[index];\n    this.set(entry[0], entry[1]);\n  }\n} // Add methods to `Hash`.\n\n\nHash.prototype.clear = hashClear;\nHash.prototype['delete'] = hashDelete;\nHash.prototype.get = hashGet;\nHash.prototype.has = hashHas;\nHash.prototype.set = hashSet;\nmodule.exports = Hash;","var nativeCreate = require('./_nativeCreate');\n/**\n * Removes all key-value entries from the hash.\n *\n * @private\n * @name clear\n * @memberOf Hash\n */\n\n\nfunction hashClear() {\n  this.__data__ = nativeCreate ? nativeCreate(null) : {};\n  this.size = 0;\n}\n\nmodule.exports = hashClear;","/**\n * Removes `key` and its value from the hash.\n *\n * @private\n * @name delete\n * @memberOf Hash\n * @param {Object} hash The hash to modify.\n * @param {string} key The key of the value to remove.\n * @returns {boolean} Returns `true` if the entry was removed, else `false`.\n */\nfunction hashDelete(key) {\n  var result = this.has(key) && delete this.__data__[key];\n  this.size -= result ? 1 : 0;\n  return result;\n}\n\nmodule.exports = hashDelete;","var nativeCreate = require('./_nativeCreate');\n/** Used to stand-in for `undefined` hash values. */\n\n\nvar HASH_UNDEFINED = '__lodash_hash_undefined__';\n/** Used for built-in method references. */\n\nvar objectProto = Object.prototype;\n/** Used to check objects for own properties. */\n\nvar hasOwnProperty = objectProto.hasOwnProperty;\n/**\n * Gets the hash value for `key`.\n *\n * @private\n * @name get\n * @memberOf Hash\n * @param {string} key The key of the value to get.\n * @returns {*} Returns the entry value.\n */\n\nfunction hashGet(key) {\n  var data = this.__data__;\n\n  if (nativeCreate) {\n    var result = data[key];\n    return result === HASH_UNDEFINED ? undefined : result;\n  }\n\n  return hasOwnProperty.call(data, key) ? data[key] : undefined;\n}\n\nmodule.exports = hashGet;","var nativeCreate = require('./_nativeCreate');\n/** Used for built-in method references. */\n\n\nvar objectProto = Object.prototype;\n/** Used to check objects for own properties. */\n\nvar hasOwnProperty = objectProto.hasOwnProperty;\n/**\n * Checks if a hash value for `key` exists.\n *\n * @private\n * @name has\n * @memberOf Hash\n * @param {string} key The key of the entry to check.\n * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.\n */\n\nfunction hashHas(key) {\n  var data = this.__data__;\n  return nativeCreate ? data[key] !== undefined : hasOwnProperty.call(data, key);\n}\n\nmodule.exports = hashHas;","var nativeCreate = require('./_nativeCreate');\n/** Used to stand-in for `undefined` hash values. */\n\n\nvar HASH_UNDEFINED = '__lodash_hash_undefined__';\n/**\n * Sets the hash `key` to `value`.\n *\n * @private\n * @name set\n * @memberOf Hash\n * @param {string} key The key of the value to set.\n * @param {*} value The value to set.\n * @returns {Object} Returns the hash instance.\n */\n\nfunction hashSet(key, value) {\n  var data = this.__data__;\n  this.size += this.has(key) ? 0 : 1;\n  data[key] = nativeCreate && value === undefined ? HASH_UNDEFINED : value;\n  return this;\n}\n\nmodule.exports = hashSet;","var getMapData = require('./_getMapData');\n/**\n * Removes `key` and its value from the map.\n *\n * @private\n * @name delete\n * @memberOf MapCache\n * @param {string} key The key of the value to remove.\n * @returns {boolean} Returns `true` if the entry was removed, else `false`.\n */\n\n\nfunction mapCacheDelete(key) {\n  var result = getMapData(this, key)['delete'](key);\n  this.size -= result ? 1 : 0;\n  return result;\n}\n\nmodule.exports = mapCacheDelete;","/**\n * Checks if `value` is suitable for use as unique object key.\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is suitable, else `false`.\n */\nfunction isKeyable(value) {\n  var type = typeof value;\n  return type == 'string' || type == 'number' || type == 'symbol' || type == 'boolean' ? value !== '__proto__' : value === null;\n}\n\nmodule.exports = isKeyable;","var getMapData = require('./_getMapData');\n/**\n * Gets the map value for `key`.\n *\n * @private\n * @name get\n * @memberOf MapCache\n * @param {string} key The key of the value to get.\n * @returns {*} Returns the entry value.\n */\n\n\nfunction mapCacheGet(key) {\n  return getMapData(this, key).get(key);\n}\n\nmodule.exports = mapCacheGet;","var getMapData = require('./_getMapData');\n/**\n * Checks if a map value for `key` exists.\n *\n * @private\n * @name has\n * @memberOf MapCache\n * @param {string} key The key of the entry to check.\n * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.\n */\n\n\nfunction mapCacheHas(key) {\n  return getMapData(this, key).has(key);\n}\n\nmodule.exports = mapCacheHas;","var getMapData = require('./_getMapData');\n/**\n * Sets the map `key` to `value`.\n *\n * @private\n * @name set\n * @memberOf MapCache\n * @param {string} key The key of the value to set.\n * @param {*} value The value to set.\n * @returns {Object} Returns the map cache instance.\n */\n\n\nfunction mapCacheSet(key, value) {\n  var data = getMapData(this, key),\n      size = data.size;\n  data.set(key, value);\n  this.size += data.size == size ? 0 : 1;\n  return this;\n}\n\nmodule.exports = mapCacheSet;","var Stack = require('./_Stack'),\n    equalArrays = require('./_equalArrays'),\n    equalByTag = require('./_equalByTag'),\n    equalObjects = require('./_equalObjects'),\n    getTag = require('./_getTag'),\n    isArray = require('./isArray'),\n    isBuffer = require('./isBuffer'),\n    isTypedArray = require('./isTypedArray');\n/** Used to compose bitmasks for value comparisons. */\n\n\nvar COMPARE_PARTIAL_FLAG = 1;\n/** `Object#toString` result references. */\n\nvar argsTag = '[object Arguments]',\n    arrayTag = '[object Array]',\n    objectTag = '[object Object]';\n/** Used for built-in method references. */\n\nvar objectProto = Object.prototype;\n/** Used to check objects for own properties. */\n\nvar hasOwnProperty = objectProto.hasOwnProperty;\n/**\n * A specialized version of `baseIsEqual` for arrays and objects which performs\n * deep comparisons and tracks traversed objects enabling objects with circular\n * references to be compared.\n *\n * @private\n * @param {Object} object The object to compare.\n * @param {Object} other The other object to compare.\n * @param {number} bitmask The bitmask flags. See `baseIsEqual` for more details.\n * @param {Function} customizer The function to customize comparisons.\n * @param {Function} equalFunc The function to determine equivalents of values.\n * @param {Object} [stack] Tracks traversed `object` and `other` objects.\n * @returns {boolean} Returns `true` if the objects are equivalent, else `false`.\n */\n\nfunction baseIsEqualDeep(object, other, bitmask, customizer, equalFunc, stack) {\n  var objIsArr = isArray(object),\n      othIsArr = isArray(other),\n      objTag = objIsArr ? arrayTag : getTag(object),\n      othTag = othIsArr ? arrayTag : getTag(other);\n  objTag = objTag == argsTag ? objectTag : objTag;\n  othTag = othTag == argsTag ? objectTag : othTag;\n  var objIsObj = objTag == objectTag,\n      othIsObj = othTag == objectTag,\n      isSameTag = objTag == othTag;\n\n  if (isSameTag && isBuffer(object)) {\n    if (!isBuffer(other)) {\n      return false;\n    }\n\n    objIsArr = true;\n    objIsObj = false;\n  }\n\n  if (isSameTag && !objIsObj) {\n    stack || (stack = new Stack());\n    return objIsArr || isTypedArray(object) ? equalArrays(object, other, bitmask, customizer, equalFunc, stack) : equalByTag(object, other, objTag, bitmask, customizer, equalFunc, stack);\n  }\n\n  if (!(bitmask & COMPARE_PARTIAL_FLAG)) {\n    var objIsWrapped = objIsObj && hasOwnProperty.call(object, '__wrapped__'),\n        othIsWrapped = othIsObj && hasOwnProperty.call(other, '__wrapped__');\n\n    if (objIsWrapped || othIsWrapped) {\n      var objUnwrapped = objIsWrapped ? object.value() : object,\n          othUnwrapped = othIsWrapped ? other.value() : other;\n      stack || (stack = new Stack());\n      return equalFunc(objUnwrapped, othUnwrapped, bitmask, customizer, stack);\n    }\n  }\n\n  if (!isSameTag) {\n    return false;\n  }\n\n  stack || (stack = new Stack());\n  return equalObjects(object, other, bitmask, customizer, equalFunc, stack);\n}\n\nmodule.exports = baseIsEqualDeep;","/** Used to stand-in for `undefined` hash values. */\nvar HASH_UNDEFINED = '__lodash_hash_undefined__';\n/**\n * Adds `value` to the array cache.\n *\n * @private\n * @name add\n * @memberOf SetCache\n * @alias push\n * @param {*} value The value to cache.\n * @returns {Object} Returns the cache instance.\n */\n\nfunction setCacheAdd(value) {\n  this.__data__.set(value, HASH_UNDEFINED);\n\n  return this;\n}\n\nmodule.exports = setCacheAdd;","/**\n * Checks if `value` is in the array cache.\n *\n * @private\n * @name has\n * @memberOf SetCache\n * @param {*} value The value to search for.\n * @returns {number} Returns `true` if `value` is found, else `false`.\n */\nfunction setCacheHas(value) {\n  return this.__data__.has(value);\n}\n\nmodule.exports = setCacheHas;","/**\n * A specialized version of `_.some` for arrays without support for iteratee\n * shorthands.\n *\n * @private\n * @param {Array} [array] The array to iterate over.\n * @param {Function} predicate The function invoked per iteration.\n * @returns {boolean} Returns `true` if any element passes the predicate check,\n *  else `false`.\n */\nfunction arraySome(array, predicate) {\n  var index = -1,\n      length = array == null ? 0 : array.length;\n\n  while (++index < length) {\n    if (predicate(array[index], index, array)) {\n      return true;\n    }\n  }\n\n  return false;\n}\n\nmodule.exports = arraySome;","var Symbol = require('./_Symbol'),\n    Uint8Array = require('./_Uint8Array'),\n    eq = require('./eq'),\n    equalArrays = require('./_equalArrays'),\n    mapToArray = require('./_mapToArray'),\n    setToArray = require('./_setToArray');\n/** Used to compose bitmasks for value comparisons. */\n\n\nvar COMPARE_PARTIAL_FLAG = 1,\n    COMPARE_UNORDERED_FLAG = 2;\n/** `Object#toString` result references. */\n\nvar boolTag = '[object Boolean]',\n    dateTag = '[object Date]',\n    errorTag = '[object Error]',\n    mapTag = '[object Map]',\n    numberTag = '[object Number]',\n    regexpTag = '[object RegExp]',\n    setTag = '[object Set]',\n    stringTag = '[object String]',\n    symbolTag = '[object Symbol]';\nvar arrayBufferTag = '[object ArrayBuffer]',\n    dataViewTag = '[object DataView]';\n/** Used to convert symbols to primitives and strings. */\n\nvar symbolProto = Symbol ? Symbol.prototype : undefined,\n    symbolValueOf = symbolProto ? symbolProto.valueOf : undefined;\n/**\n * A specialized version of `baseIsEqualDeep` for comparing objects of\n * the same `toStringTag`.\n *\n * **Note:** This function only supports comparing values with tags of\n * `Boolean`, `Date`, `Error`, `Number`, `RegExp`, or `String`.\n *\n * @private\n * @param {Object} object The object to compare.\n * @param {Object} other The other object to compare.\n * @param {string} tag The `toStringTag` of the objects to compare.\n * @param {number} bitmask The bitmask flags. See `baseIsEqual` for more details.\n * @param {Function} customizer The function to customize comparisons.\n * @param {Function} equalFunc The function to determine equivalents of values.\n * @param {Object} stack Tracks traversed `object` and `other` objects.\n * @returns {boolean} Returns `true` if the objects are equivalent, else `false`.\n */\n\nfunction equalByTag(object, other, tag, bitmask, customizer, equalFunc, stack) {\n  switch (tag) {\n    case dataViewTag:\n      if (object.byteLength != other.byteLength || object.byteOffset != other.byteOffset) {\n        return false;\n      }\n\n      object = object.buffer;\n      other = other.buffer;\n\n    case arrayBufferTag:\n      if (object.byteLength != other.byteLength || !equalFunc(new Uint8Array(object), new Uint8Array(other))) {\n        return false;\n      }\n\n      return true;\n\n    case boolTag:\n    case dateTag:\n    case numberTag:\n      // Coerce booleans to `1` or `0` and dates to milliseconds.\n      // Invalid dates are coerced to `NaN`.\n      return eq(+object, +other);\n\n    case errorTag:\n      return object.name == other.name && object.message == other.message;\n\n    case regexpTag:\n    case stringTag:\n      // Coerce regexes to strings and treat strings, primitives and objects,\n      // as equal. See http://www.ecma-international.org/ecma-262/7.0/#sec-regexp.prototype.tostring\n      // for more details.\n      return object == other + '';\n\n    case mapTag:\n      var convert = mapToArray;\n\n    case setTag:\n      var isPartial = bitmask & COMPARE_PARTIAL_FLAG;\n      convert || (convert = setToArray);\n\n      if (object.size != other.size && !isPartial) {\n        return false;\n      } // Assume cyclic values are equal.\n\n\n      var stacked = stack.get(object);\n\n      if (stacked) {\n        return stacked == other;\n      }\n\n      bitmask |= COMPARE_UNORDERED_FLAG; // Recursively compare objects (susceptible to call stack limits).\n\n      stack.set(object, other);\n      var result = equalArrays(convert(object), convert(other), bitmask, customizer, equalFunc, stack);\n      stack['delete'](object);\n      return result;\n\n    case symbolTag:\n      if (symbolValueOf) {\n        return symbolValueOf.call(object) == symbolValueOf.call(other);\n      }\n\n  }\n\n  return false;\n}\n\nmodule.exports = equalByTag;","/**\n * Converts `map` to its key-value pairs.\n *\n * @private\n * @param {Object} map The map to convert.\n * @returns {Array} Returns the key-value pairs.\n */\nfunction mapToArray(map) {\n  var index = -1,\n      result = Array(map.size);\n  map.forEach(function (value, key) {\n    result[++index] = [key, value];\n  });\n  return result;\n}\n\nmodule.exports = mapToArray;","var getAllKeys = require('./_getAllKeys');\n/** Used to compose bitmasks for value comparisons. */\n\n\nvar COMPARE_PARTIAL_FLAG = 1;\n/** Used for built-in method references. */\n\nvar objectProto = Object.prototype;\n/** Used to check objects for own properties. */\n\nvar hasOwnProperty = objectProto.hasOwnProperty;\n/**\n * A specialized version of `baseIsEqualDeep` for objects with support for\n * partial deep comparisons.\n *\n * @private\n * @param {Object} object The object to compare.\n * @param {Object} other The other object to compare.\n * @param {number} bitmask The bitmask flags. See `baseIsEqual` for more details.\n * @param {Function} customizer The function to customize comparisons.\n * @param {Function} equalFunc The function to determine equivalents of values.\n * @param {Object} stack Tracks traversed `object` and `other` objects.\n * @returns {boolean} Returns `true` if the objects are equivalent, else `false`.\n */\n\nfunction equalObjects(object, other, bitmask, customizer, equalFunc, stack) {\n  var isPartial = bitmask & COMPARE_PARTIAL_FLAG,\n      objProps = getAllKeys(object),\n      objLength = objProps.length,\n      othProps = getAllKeys(other),\n      othLength = othProps.length;\n\n  if (objLength != othLength && !isPartial) {\n    return false;\n  }\n\n  var index = objLength;\n\n  while (index--) {\n    var key = objProps[index];\n\n    if (!(isPartial ? key in other : hasOwnProperty.call(other, key))) {\n      return false;\n    }\n  } // Assume cyclic values are equal.\n\n\n  var stacked = stack.get(object);\n\n  if (stacked && stack.get(other)) {\n    return stacked == other;\n  }\n\n  var result = true;\n  stack.set(object, other);\n  stack.set(other, object);\n  var skipCtor = isPartial;\n\n  while (++index < objLength) {\n    key = objProps[index];\n    var objValue = object[key],\n        othValue = other[key];\n\n    if (customizer) {\n      var compared = isPartial ? customizer(othValue, objValue, key, other, object, stack) : customizer(objValue, othValue, key, object, other, stack);\n    } // Recursively compare objects (susceptible to call stack limits).\n\n\n    if (!(compared === undefined ? objValue === othValue || equalFunc(objValue, othValue, bitmask, customizer, stack) : compared)) {\n      result = false;\n      break;\n    }\n\n    skipCtor || (skipCtor = key == 'constructor');\n  }\n\n  if (result && !skipCtor) {\n    var objCtor = object.constructor,\n        othCtor = other.constructor; // Non `Object` object instances with different constructors are not equal.\n\n    if (objCtor != othCtor && 'constructor' in object && 'constructor' in other && !(typeof objCtor == 'function' && objCtor instanceof objCtor && typeof othCtor == 'function' && othCtor instanceof othCtor)) {\n      result = false;\n    }\n  }\n\n  stack['delete'](object);\n  stack['delete'](other);\n  return result;\n}\n\nmodule.exports = equalObjects;","/**\n * The base implementation of `_.times` without support for iteratee shorthands\n * or max array length checks.\n *\n * @private\n * @param {number} n The number of times to invoke `iteratee`.\n * @param {Function} iteratee The function invoked per iteration.\n * @returns {Array} Returns the array of results.\n */\nfunction baseTimes(n, iteratee) {\n  var index = -1,\n      result = Array(n);\n\n  while (++index < n) {\n    result[index] = iteratee(index);\n  }\n\n  return result;\n}\n\nmodule.exports = baseTimes;","var baseGetTag = require('./_baseGetTag'),\n    isObjectLike = require('./isObjectLike');\n/** `Object#toString` result references. */\n\n\nvar argsTag = '[object Arguments]';\n/**\n * The base implementation of `_.isArguments`.\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is an `arguments` object,\n */\n\nfunction baseIsArguments(value) {\n  return isObjectLike(value) && baseGetTag(value) == argsTag;\n}\n\nmodule.exports = baseIsArguments;","/**\n * This method returns `false`.\n *\n * @static\n * @memberOf _\n * @since 4.13.0\n * @category Util\n * @returns {boolean} Returns `false`.\n * @example\n *\n * _.times(2, _.stubFalse);\n * // => [false, false]\n */\nfunction stubFalse() {\n  return false;\n}\n\nmodule.exports = stubFalse;","var baseGetTag = require('./_baseGetTag'),\n    isLength = require('./isLength'),\n    isObjectLike = require('./isObjectLike');\n/** `Object#toString` result references. */\n\n\nvar argsTag = '[object Arguments]',\n    arrayTag = '[object Array]',\n    boolTag = '[object Boolean]',\n    dateTag = '[object Date]',\n    errorTag = '[object Error]',\n    funcTag = '[object Function]',\n    mapTag = '[object Map]',\n    numberTag = '[object Number]',\n    objectTag = '[object Object]',\n    regexpTag = '[object RegExp]',\n    setTag = '[object Set]',\n    stringTag = '[object String]',\n    weakMapTag = '[object WeakMap]';\nvar arrayBufferTag = '[object ArrayBuffer]',\n    dataViewTag = '[object DataView]',\n    float32Tag = '[object Float32Array]',\n    float64Tag = '[object Float64Array]',\n    int8Tag = '[object Int8Array]',\n    int16Tag = '[object Int16Array]',\n    int32Tag = '[object Int32Array]',\n    uint8Tag = '[object Uint8Array]',\n    uint8ClampedTag = '[object Uint8ClampedArray]',\n    uint16Tag = '[object Uint16Array]',\n    uint32Tag = '[object Uint32Array]';\n/** Used to identify `toStringTag` values of typed arrays. */\n\nvar typedArrayTags = {};\ntypedArrayTags[float32Tag] = typedArrayTags[float64Tag] = typedArrayTags[int8Tag] = typedArrayTags[int16Tag] = typedArrayTags[int32Tag] = typedArrayTags[uint8Tag] = typedArrayTags[uint8ClampedTag] = typedArrayTags[uint16Tag] = typedArrayTags[uint32Tag] = true;\ntypedArrayTags[argsTag] = typedArrayTags[arrayTag] = typedArrayTags[arrayBufferTag] = typedArrayTags[boolTag] = typedArrayTags[dataViewTag] = typedArrayTags[dateTag] = typedArrayTags[errorTag] = typedArrayTags[funcTag] = typedArrayTags[mapTag] = typedArrayTags[numberTag] = typedArrayTags[objectTag] = typedArrayTags[regexpTag] = typedArrayTags[setTag] = typedArrayTags[stringTag] = typedArrayTags[weakMapTag] = false;\n/**\n * The base implementation of `_.isTypedArray` without Node.js optimizations.\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a typed array, else `false`.\n */\n\nfunction baseIsTypedArray(value) {\n  return isObjectLike(value) && isLength(value.length) && !!typedArrayTags[baseGetTag(value)];\n}\n\nmodule.exports = baseIsTypedArray;","var overArg = require('./_overArg');\n/* Built-in method references for those with the same name as other `lodash` methods. */\n\n\nvar nativeKeys = overArg(Object.keys, Object);\nmodule.exports = nativeKeys;","var getNative = require('./_getNative'),\n    root = require('./_root');\n/* Built-in method references that are verified to be native. */\n\n\nvar DataView = getNative(root, 'DataView');\nmodule.exports = DataView;","var getNative = require('./_getNative'),\n    root = require('./_root');\n/* Built-in method references that are verified to be native. */\n\n\nvar Promise = getNative(root, 'Promise');\nmodule.exports = Promise;","var getNative = require('./_getNative'),\n    root = require('./_root');\n/* Built-in method references that are verified to be native. */\n\n\nvar WeakMap = getNative(root, 'WeakMap');\nmodule.exports = WeakMap;","var isStrictComparable = require('./_isStrictComparable'),\n    keys = require('./keys');\n/**\n * Gets the property names, values, and compare flags of `object`.\n *\n * @private\n * @param {Object} object The object to query.\n * @returns {Array} Returns the match data of `object`.\n */\n\n\nfunction getMatchData(object) {\n  var result = keys(object),\n      length = result.length;\n\n  while (length--) {\n    var key = result[length],\n        value = object[key];\n    result[length] = [key, value, isStrictComparable(value)];\n  }\n\n  return result;\n}\n\nmodule.exports = getMatchData;","var baseIsEqual = require('./_baseIsEqual'),\n    get = require('./get'),\n    hasIn = require('./hasIn'),\n    isKey = require('./_isKey'),\n    isStrictComparable = require('./_isStrictComparable'),\n    matchesStrictComparable = require('./_matchesStrictComparable'),\n    toKey = require('./_toKey');\n/** Used to compose bitmasks for value comparisons. */\n\n\nvar COMPARE_PARTIAL_FLAG = 1,\n    COMPARE_UNORDERED_FLAG = 2;\n/**\n * The base implementation of `_.matchesProperty` which doesn't clone `srcValue`.\n *\n * @private\n * @param {string} path The path of the property to get.\n * @param {*} srcValue The value to match.\n * @returns {Function} Returns the new spec function.\n */\n\nfunction baseMatchesProperty(path, srcValue) {\n  if (isKey(path) && isStrictComparable(srcValue)) {\n    return matchesStrictComparable(toKey(path), srcValue);\n  }\n\n  return function (object) {\n    var objValue = get(object, path);\n    return objValue === undefined && objValue === srcValue ? hasIn(object, path) : baseIsEqual(srcValue, objValue, COMPARE_PARTIAL_FLAG | COMPARE_UNORDERED_FLAG);\n  };\n}\n\nmodule.exports = baseMatchesProperty;","var baseGet = require('./_baseGet');\n/**\n * Gets the value at `path` of `object`. If the resolved value is\n * `undefined`, the `defaultValue` is returned in its place.\n *\n * @static\n * @memberOf _\n * @since 3.7.0\n * @category Object\n * @param {Object} object The object to query.\n * @param {Array|string} path The path of the property to get.\n * @param {*} [defaultValue] The value returned for `undefined` resolved values.\n * @returns {*} Returns the resolved value.\n * @example\n *\n * var object = { 'a': [{ 'b': { 'c': 3 } }] };\n *\n * _.get(object, 'a[0].b.c');\n * // => 3\n *\n * _.get(object, ['a', '0', 'b', 'c']);\n * // => 3\n *\n * _.get(object, 'a.b.c', 'default');\n * // => 'default'\n */\n\n\nfunction get(object, path, defaultValue) {\n  var result = object == null ? undefined : baseGet(object, path);\n  return result === undefined ? defaultValue : result;\n}\n\nmodule.exports = get;","var memoizeCapped = require('./_memoizeCapped');\n/** Used to match property names within property paths. */\n\n\nvar rePropName = /[^.[\\]]+|\\[(?:(-?\\d+(?:\\.\\d+)?)|([\"'])((?:(?!\\2)[^\\\\]|\\\\.)*?)\\2)\\]|(?=(?:\\.|\\[\\])(?:\\.|\\[\\]|$))/g;\n/** Used to match backslashes in property paths. */\n\nvar reEscapeChar = /\\\\(\\\\)?/g;\n/**\n * Converts `string` to a property path array.\n *\n * @private\n * @param {string} string The string to convert.\n * @returns {Array} Returns the property path array.\n */\n\nvar stringToPath = memoizeCapped(function (string) {\n  var result = [];\n\n  if (string.charCodeAt(0) === 46\n  /* . */\n  ) {\n      result.push('');\n    }\n\n  string.replace(rePropName, function (match, number, quote, subString) {\n    result.push(quote ? subString.replace(reEscapeChar, '$1') : number || match);\n  });\n  return result;\n});\nmodule.exports = stringToPath;","var memoize = require('./memoize');\n/** Used as the maximum memoize cache size. */\n\n\nvar MAX_MEMOIZE_SIZE = 500;\n/**\n * A specialized version of `_.memoize` which clears the memoized function's\n * cache when it exceeds `MAX_MEMOIZE_SIZE`.\n *\n * @private\n * @param {Function} func The function to have its output memoized.\n * @returns {Function} Returns the new memoized function.\n */\n\nfunction memoizeCapped(func) {\n  var result = memoize(func, function (key) {\n    if (cache.size === MAX_MEMOIZE_SIZE) {\n      cache.clear();\n    }\n\n    return key;\n  });\n  var cache = result.cache;\n  return result;\n}\n\nmodule.exports = memoizeCapped;","var MapCache = require('./_MapCache');\n/** Error message constants. */\n\n\nvar FUNC_ERROR_TEXT = 'Expected a function';\n/**\n * Creates a function that memoizes the result of `func`. If `resolver` is\n * provided, it determines the cache key for storing the result based on the\n * arguments provided to the memoized function. By default, the first argument\n * provided to the memoized function is used as the map cache key. The `func`\n * is invoked with the `this` binding of the memoized function.\n *\n * **Note:** The cache is exposed as the `cache` property on the memoized\n * function. Its creation may be customized by replacing the `_.memoize.Cache`\n * constructor with one whose instances implement the\n * [`Map`](http://ecma-international.org/ecma-262/7.0/#sec-properties-of-the-map-prototype-object)\n * method interface of `clear`, `delete`, `get`, `has`, and `set`.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Function\n * @param {Function} func The function to have its output memoized.\n * @param {Function} [resolver] The function to resolve the cache key.\n * @returns {Function} Returns the new memoized function.\n * @example\n *\n * var object = { 'a': 1, 'b': 2 };\n * var other = { 'c': 3, 'd': 4 };\n *\n * var values = _.memoize(_.values);\n * values(object);\n * // => [1, 2]\n *\n * values(other);\n * // => [3, 4]\n *\n * object.a = 2;\n * values(object);\n * // => [1, 2]\n *\n * // Modify the result cache.\n * values.cache.set(object, ['a', 'b']);\n * values(object);\n * // => ['a', 'b']\n *\n * // Replace `_.memoize.Cache`.\n * _.memoize.Cache = WeakMap;\n */\n\nfunction memoize(func, resolver) {\n  if (typeof func != 'function' || resolver != null && typeof resolver != 'function') {\n    throw new TypeError(FUNC_ERROR_TEXT);\n  }\n\n  var memoized = function memoized() {\n    var args = arguments,\n        key = resolver ? resolver.apply(this, args) : args[0],\n        cache = memoized.cache;\n\n    if (cache.has(key)) {\n      return cache.get(key);\n    }\n\n    var result = func.apply(this, args);\n    memoized.cache = cache.set(key, result) || cache;\n    return result;\n  };\n\n  memoized.cache = new (memoize.Cache || MapCache)();\n  return memoized;\n} // Expose `MapCache`.\n\n\nmemoize.Cache = MapCache;\nmodule.exports = memoize;","/**\n * The base implementation of `_.hasIn` without support for deep paths.\n *\n * @private\n * @param {Object} [object] The object to query.\n * @param {Array|string} key The key to check.\n * @returns {boolean} Returns `true` if `key` exists, else `false`.\n */\nfunction baseHasIn(object, key) {\n  return object != null && key in Object(object);\n}\n\nmodule.exports = baseHasIn;","var castPath = require('./_castPath'),\n    isArguments = require('./isArguments'),\n    isArray = require('./isArray'),\n    isIndex = require('./_isIndex'),\n    isLength = require('./isLength'),\n    toKey = require('./_toKey');\n/**\n * Checks if `path` exists on `object`.\n *\n * @private\n * @param {Object} object The object to query.\n * @param {Array|string} path The path to check.\n * @param {Function} hasFunc The function to check properties.\n * @returns {boolean} Returns `true` if `path` exists, else `false`.\n */\n\n\nfunction hasPath(object, path, hasFunc) {\n  path = castPath(path, object);\n  var index = -1,\n      length = path.length,\n      result = false;\n\n  while (++index < length) {\n    var key = toKey(path[index]);\n\n    if (!(result = object != null && hasFunc(object, key))) {\n      break;\n    }\n\n    object = object[key];\n  }\n\n  if (result || ++index != length) {\n    return result;\n  }\n\n  length = object == null ? 0 : object.length;\n  return !!length && isLength(length) && isIndex(key, length) && (isArray(object) || isArguments(object));\n}\n\nmodule.exports = hasPath;","var baseProperty = require('./_baseProperty'),\n    basePropertyDeep = require('./_basePropertyDeep'),\n    isKey = require('./_isKey'),\n    toKey = require('./_toKey');\n/**\n * Creates a function that returns the value at `path` of a given object.\n *\n * @static\n * @memberOf _\n * @since 2.4.0\n * @category Util\n * @param {Array|string} path The path of the property to get.\n * @returns {Function} Returns the new accessor function.\n * @example\n *\n * var objects = [\n *   { 'a': { 'b': 2 } },\n *   { 'a': { 'b': 1 } }\n * ];\n *\n * _.map(objects, _.property('a.b'));\n * // => [2, 1]\n *\n * _.map(_.sortBy(objects, _.property(['a', 'b'])), 'a.b');\n * // => [1, 2]\n */\n\n\nfunction property(path) {\n  return isKey(path) ? baseProperty(toKey(path)) : basePropertyDeep(path);\n}\n\nmodule.exports = property;","/**\n * The base implementation of `_.property` without support for deep paths.\n *\n * @private\n * @param {string} key The key of the property to get.\n * @returns {Function} Returns the new accessor function.\n */\nfunction baseProperty(key) {\n  return function (object) {\n    return object == null ? undefined : object[key];\n  };\n}\n\nmodule.exports = baseProperty;","var baseGet = require('./_baseGet');\n/**\n * A specialized version of `baseProperty` which supports deep paths.\n *\n * @private\n * @param {Array|string} path The path of the property to get.\n * @returns {Function} Returns the new accessor function.\n */\n\n\nfunction basePropertyDeep(path) {\n  return function (object) {\n    return baseGet(object, path);\n  };\n}\n\nmodule.exports = basePropertyDeep;","var baseFor = require('./_baseFor'),\n    keys = require('./keys');\n/**\n * The base implementation of `_.forOwn` without support for iteratee shorthands.\n *\n * @private\n * @param {Object} object The object to iterate over.\n * @param {Function} iteratee The function invoked per iteration.\n * @returns {Object} Returns `object`.\n */\n\n\nfunction baseForOwn(object, iteratee) {\n  return object && baseFor(object, iteratee, keys);\n}\n\nmodule.exports = baseForOwn;","/**\n * Creates a base function for methods like `_.forIn` and `_.forOwn`.\n *\n * @private\n * @param {boolean} [fromRight] Specify iterating from right to left.\n * @returns {Function} Returns the new base function.\n */\nfunction createBaseFor(fromRight) {\n  return function (object, iteratee, keysFunc) {\n    var index = -1,\n        iterable = Object(object),\n        props = keysFunc(object),\n        length = props.length;\n\n    while (length--) {\n      var key = props[fromRight ? length : ++index];\n\n      if (iteratee(iterable[key], key, iterable) === false) {\n        break;\n      }\n    }\n\n    return object;\n  };\n}\n\nmodule.exports = createBaseFor;","var isArrayLike = require('./isArrayLike');\n/**\n * Creates a `baseEach` or `baseEachRight` function.\n *\n * @private\n * @param {Function} eachFunc The function to iterate over a collection.\n * @param {boolean} [fromRight] Specify iterating from right to left.\n * @returns {Function} Returns the new base function.\n */\n\n\nfunction createBaseEach(eachFunc, fromRight) {\n  return function (collection, iteratee) {\n    if (collection == null) {\n      return collection;\n    }\n\n    if (!isArrayLike(collection)) {\n      return eachFunc(collection, iteratee);\n    }\n\n    var length = collection.length,\n        index = fromRight ? length : -1,\n        iterable = Object(collection);\n\n    while (fromRight ? index-- : ++index < length) {\n      if (iteratee(iterable[index], index, iterable) === false) {\n        break;\n      }\n    }\n\n    return collection;\n  };\n}\n\nmodule.exports = createBaseEach;","var arrayAggregator = require('./_arrayAggregator'),\n    baseAggregator = require('./_baseAggregator'),\n    baseIteratee = require('./_baseIteratee'),\n    isArray = require('./isArray');\n/**\n * Creates a function like `_.groupBy`.\n *\n * @private\n * @param {Function} setter The function to set accumulator values.\n * @param {Function} [initializer] The accumulator object initializer.\n * @returns {Function} Returns the new aggregator function.\n */\n\n\nfunction createAggregator(setter, initializer) {\n  return function (collection, iteratee) {\n    var func = isArray(collection) ? arrayAggregator : baseAggregator,\n        accumulator = initializer ? initializer() : {};\n    return func(collection, setter, baseIteratee(iteratee, 2), accumulator);\n  };\n}\n\nmodule.exports = createAggregator;","/**\n * A specialized version of `baseAggregator` for arrays.\n *\n * @private\n * @param {Array} [array] The array to iterate over.\n * @param {Function} setter The function to set `accumulator` values.\n * @param {Function} iteratee The iteratee to transform keys.\n * @param {Object} accumulator The initial aggregated object.\n * @returns {Function} Returns `accumulator`.\n */\nfunction arrayAggregator(array, setter, iteratee, accumulator) {\n  var index = -1,\n      length = array == null ? 0 : array.length;\n\n  while (++index < length) {\n    var value = array[index];\n    setter(accumulator, value, iteratee(value), array);\n  }\n\n  return accumulator;\n}\n\nmodule.exports = arrayAggregator;","var baseEach = require('./_baseEach');\n/**\n * Aggregates elements of `collection` on `accumulator` with keys transformed\n * by `iteratee` and values set by `setter`.\n *\n * @private\n * @param {Array|Object} collection The collection to iterate over.\n * @param {Function} setter The function to set `accumulator` values.\n * @param {Function} iteratee The iteratee to transform keys.\n * @param {Object} accumulator The initial aggregated object.\n * @returns {Function} Returns `accumulator`.\n */\n\n\nfunction baseAggregator(collection, setter, iteratee, accumulator) {\n  baseEach(collection, function (value, key, collection) {\n    setter(accumulator, value, iteratee(value), collection);\n  });\n  return accumulator;\n}\n\nmodule.exports = baseAggregator;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { mapToCssModules, tagPropType } from './utils';\nvar propTypes = {\n  tag: tagPropType,\n  className: PropTypes.string,\n  cssModule: PropTypes.object,\n  innerRef: PropTypes.oneOfType([PropTypes.object, PropTypes.string, PropTypes.func])\n};\nvar defaultProps = {\n  tag: 'div'\n};\n\nvar CardBody = function CardBody(props) {\n  var className = props.className,\n      cssModule = props.cssModule,\n      innerRef = props.innerRef,\n      Tag = props.tag,\n      attributes = _objectWithoutPropertiesLoose(props, [\"className\", \"cssModule\", \"innerRef\", \"tag\"]);\n\n  var classes = mapToCssModules(classNames(className, 'card-body'), cssModule);\n  return React.createElement(Tag, _extends({}, attributes, {\n    className: classes,\n    ref: innerRef\n  }));\n};\n\nCardBody.propTypes = propTypes;\nCardBody.defaultProps = defaultProps;\nexport default CardBody;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { mapToCssModules, tagPropType } from './utils';\nvar propTypes = {\n  tag: tagPropType,\n  inverse: PropTypes.bool,\n  color: PropTypes.string,\n  body: PropTypes.bool,\n  outline: PropTypes.bool,\n  className: PropTypes.string,\n  cssModule: PropTypes.object,\n  innerRef: PropTypes.oneOfType([PropTypes.object, PropTypes.string, PropTypes.func])\n};\nvar defaultProps = {\n  tag: 'div'\n};\n\nvar Card = function Card(props) {\n  var className = props.className,\n      cssModule = props.cssModule,\n      color = props.color,\n      body = props.body,\n      inverse = props.inverse,\n      outline = props.outline,\n      Tag = props.tag,\n      innerRef = props.innerRef,\n      attributes = _objectWithoutPropertiesLoose(props, [\"className\", \"cssModule\", \"color\", \"body\", \"inverse\", \"outline\", \"tag\", \"innerRef\"]);\n\n  var classes = mapToCssModules(classNames(className, 'card', inverse ? 'text-white' : false, body ? 'card-body' : false, color ? (outline ? 'border' : 'bg') + \"-\" + color : false), cssModule);\n  return React.createElement(Tag, _extends({}, attributes, {\n    className: classes,\n    ref: innerRef\n  }));\n};\n\nCard.propTypes = propTypes;\nCard.defaultProps = defaultProps;\nexport default Card;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { mapToCssModules, tagPropType } from './utils';\nvar propTypes = {\n  tag: tagPropType,\n  className: PropTypes.string,\n  cssModule: PropTypes.object\n};\nvar defaultProps = {\n  tag: 'div'\n};\n\nvar CardHeader = function CardHeader(props) {\n  var className = props.className,\n      cssModule = props.cssModule,\n      Tag = props.tag,\n      attributes = _objectWithoutPropertiesLoose(props, [\"className\", \"cssModule\", \"tag\"]);\n\n  var classes = mapToCssModules(classNames(className, 'card-header'), cssModule);\n  return React.createElement(Tag, _extends({}, attributes, {\n    className: classes\n  }));\n};\n\nCardHeader.propTypes = propTypes;\nCardHeader.defaultProps = defaultProps;\nexport default CardHeader;","/*!\n * Chart.js v2.8.0\n * https://www.chartjs.org\n * (c) 2019 Chart.js Contributors\n * Released under the MIT License\n */\n(function (global, factory) {\n  typeof exports === 'object' && typeof module !== 'undefined' ? module.exports = factory(function () {\n    try {\n      return require('moment');\n    } catch (e) {}\n  }()) : typeof define === 'function' && define.amd ? define(['require'], function (require) {\n    return factory(function () {\n      try {\n        return require('moment');\n      } catch (e) {}\n    }());\n  }) : global.Chart = factory(global.moment);\n})(this, function (moment) {\n  'use strict';\n\n  moment = moment && moment.hasOwnProperty('default') ? moment['default'] : moment;\n  /* MIT license */\n\n  var conversions = {\n    rgb2hsl: rgb2hsl,\n    rgb2hsv: rgb2hsv,\n    rgb2hwb: rgb2hwb,\n    rgb2cmyk: rgb2cmyk,\n    rgb2keyword: rgb2keyword,\n    rgb2xyz: rgb2xyz,\n    rgb2lab: rgb2lab,\n    rgb2lch: rgb2lch,\n    hsl2rgb: hsl2rgb,\n    hsl2hsv: hsl2hsv,\n    hsl2hwb: hsl2hwb,\n    hsl2cmyk: hsl2cmyk,\n    hsl2keyword: hsl2keyword,\n    hsv2rgb: hsv2rgb,\n    hsv2hsl: hsv2hsl,\n    hsv2hwb: hsv2hwb,\n    hsv2cmyk: hsv2cmyk,\n    hsv2keyword: hsv2keyword,\n    hwb2rgb: hwb2rgb,\n    hwb2hsl: hwb2hsl,\n    hwb2hsv: hwb2hsv,\n    hwb2cmyk: hwb2cmyk,\n    hwb2keyword: hwb2keyword,\n    cmyk2rgb: cmyk2rgb,\n    cmyk2hsl: cmyk2hsl,\n    cmyk2hsv: cmyk2hsv,\n    cmyk2hwb: cmyk2hwb,\n    cmyk2keyword: cmyk2keyword,\n    keyword2rgb: keyword2rgb,\n    keyword2hsl: keyword2hsl,\n    keyword2hsv: keyword2hsv,\n    keyword2hwb: keyword2hwb,\n    keyword2cmyk: keyword2cmyk,\n    keyword2lab: keyword2lab,\n    keyword2xyz: keyword2xyz,\n    xyz2rgb: xyz2rgb,\n    xyz2lab: xyz2lab,\n    xyz2lch: xyz2lch,\n    lab2xyz: lab2xyz,\n    lab2rgb: lab2rgb,\n    lab2lch: lab2lch,\n    lch2lab: lch2lab,\n    lch2xyz: lch2xyz,\n    lch2rgb: lch2rgb\n  };\n\n  function rgb2hsl(rgb) {\n    var r = rgb[0] / 255,\n        g = rgb[1] / 255,\n        b = rgb[2] / 255,\n        min = Math.min(r, g, b),\n        max = Math.max(r, g, b),\n        delta = max - min,\n        h,\n        s,\n        l;\n    if (max == min) h = 0;else if (r == max) h = (g - b) / delta;else if (g == max) h = 2 + (b - r) / delta;else if (b == max) h = 4 + (r - g) / delta;\n    h = Math.min(h * 60, 360);\n    if (h < 0) h += 360;\n    l = (min + max) / 2;\n    if (max == min) s = 0;else if (l <= 0.5) s = delta / (max + min);else s = delta / (2 - max - min);\n    return [h, s * 100, l * 100];\n  }\n\n  function rgb2hsv(rgb) {\n    var r = rgb[0],\n        g = rgb[1],\n        b = rgb[2],\n        min = Math.min(r, g, b),\n        max = Math.max(r, g, b),\n        delta = max - min,\n        h,\n        s,\n        v;\n    if (max == 0) s = 0;else s = delta / max * 1000 / 10;\n    if (max == min) h = 0;else if (r == max) h = (g - b) / delta;else if (g == max) h = 2 + (b - r) / delta;else if (b == max) h = 4 + (r - g) / delta;\n    h = Math.min(h * 60, 360);\n    if (h < 0) h += 360;\n    v = max / 255 * 1000 / 10;\n    return [h, s, v];\n  }\n\n  function rgb2hwb(rgb) {\n    var r = rgb[0],\n        g = rgb[1],\n        b = rgb[2],\n        h = rgb2hsl(rgb)[0],\n        w = 1 / 255 * Math.min(r, Math.min(g, b)),\n        b = 1 - 1 / 255 * Math.max(r, Math.max(g, b));\n    return [h, w * 100, b * 100];\n  }\n\n  function rgb2cmyk(rgb) {\n    var r = rgb[0] / 255,\n        g = rgb[1] / 255,\n        b = rgb[2] / 255,\n        c,\n        m,\n        y,\n        k;\n    k = Math.min(1 - r, 1 - g, 1 - b);\n    c = (1 - r - k) / (1 - k) || 0;\n    m = (1 - g - k) / (1 - k) || 0;\n    y = (1 - b - k) / (1 - k) || 0;\n    return [c * 100, m * 100, y * 100, k * 100];\n  }\n\n  function rgb2keyword(rgb) {\n    return reverseKeywords[JSON.stringify(rgb)];\n  }\n\n  function rgb2xyz(rgb) {\n    var r = rgb[0] / 255,\n        g = rgb[1] / 255,\n        b = rgb[2] / 255; // assume sRGB\n\n    r = r > 0.04045 ? Math.pow((r + 0.055) / 1.055, 2.4) : r / 12.92;\n    g = g > 0.04045 ? Math.pow((g + 0.055) / 1.055, 2.4) : g / 12.92;\n    b = b > 0.04045 ? Math.pow((b + 0.055) / 1.055, 2.4) : b / 12.92;\n    var x = r * 0.4124 + g * 0.3576 + b * 0.1805;\n    var y = r * 0.2126 + g * 0.7152 + b * 0.0722;\n    var z = r * 0.0193 + g * 0.1192 + b * 0.9505;\n    return [x * 100, y * 100, z * 100];\n  }\n\n  function rgb2lab(rgb) {\n    var xyz = rgb2xyz(rgb),\n        x = xyz[0],\n        y = xyz[1],\n        z = xyz[2],\n        l,\n        a,\n        b;\n    x /= 95.047;\n    y /= 100;\n    z /= 108.883;\n    x = x > 0.008856 ? Math.pow(x, 1 / 3) : 7.787 * x + 16 / 116;\n    y = y > 0.008856 ? Math.pow(y, 1 / 3) : 7.787 * y + 16 / 116;\n    z = z > 0.008856 ? Math.pow(z, 1 / 3) : 7.787 * z + 16 / 116;\n    l = 116 * y - 16;\n    a = 500 * (x - y);\n    b = 200 * (y - z);\n    return [l, a, b];\n  }\n\n  function rgb2lch(args) {\n    return lab2lch(rgb2lab(args));\n  }\n\n  function hsl2rgb(hsl) {\n    var h = hsl[0] / 360,\n        s = hsl[1] / 100,\n        l = hsl[2] / 100,\n        t1,\n        t2,\n        t3,\n        rgb,\n        val;\n\n    if (s == 0) {\n      val = l * 255;\n      return [val, val, val];\n    }\n\n    if (l < 0.5) t2 = l * (1 + s);else t2 = l + s - l * s;\n    t1 = 2 * l - t2;\n    rgb = [0, 0, 0];\n\n    for (var i = 0; i < 3; i++) {\n      t3 = h + 1 / 3 * -(i - 1);\n      t3 < 0 && t3++;\n      t3 > 1 && t3--;\n      if (6 * t3 < 1) val = t1 + (t2 - t1) * 6 * t3;else if (2 * t3 < 1) val = t2;else if (3 * t3 < 2) val = t1 + (t2 - t1) * (2 / 3 - t3) * 6;else val = t1;\n      rgb[i] = val * 255;\n    }\n\n    return rgb;\n  }\n\n  function hsl2hsv(hsl) {\n    var h = hsl[0],\n        s = hsl[1] / 100,\n        l = hsl[2] / 100,\n        sv,\n        v;\n\n    if (l === 0) {\n      // no need to do calc on black\n      // also avoids divide by 0 error\n      return [0, 0, 0];\n    }\n\n    l *= 2;\n    s *= l <= 1 ? l : 2 - l;\n    v = (l + s) / 2;\n    sv = 2 * s / (l + s);\n    return [h, sv * 100, v * 100];\n  }\n\n  function hsl2hwb(args) {\n    return rgb2hwb(hsl2rgb(args));\n  }\n\n  function hsl2cmyk(args) {\n    return rgb2cmyk(hsl2rgb(args));\n  }\n\n  function hsl2keyword(args) {\n    return rgb2keyword(hsl2rgb(args));\n  }\n\n  function hsv2rgb(hsv) {\n    var h = hsv[0] / 60,\n        s = hsv[1] / 100,\n        v = hsv[2] / 100,\n        hi = Math.floor(h) % 6;\n    var f = h - Math.floor(h),\n        p = 255 * v * (1 - s),\n        q = 255 * v * (1 - s * f),\n        t = 255 * v * (1 - s * (1 - f)),\n        v = 255 * v;\n\n    switch (hi) {\n      case 0:\n        return [v, t, p];\n\n      case 1:\n        return [q, v, p];\n\n      case 2:\n        return [p, v, t];\n\n      case 3:\n        return [p, q, v];\n\n      case 4:\n        return [t, p, v];\n\n      case 5:\n        return [v, p, q];\n    }\n  }\n\n  function hsv2hsl(hsv) {\n    var h = hsv[0],\n        s = hsv[1] / 100,\n        v = hsv[2] / 100,\n        sl,\n        l;\n    l = (2 - s) * v;\n    sl = s * v;\n    sl /= l <= 1 ? l : 2 - l;\n    sl = sl || 0;\n    l /= 2;\n    return [h, sl * 100, l * 100];\n  }\n\n  function hsv2hwb(args) {\n    return rgb2hwb(hsv2rgb(args));\n  }\n\n  function hsv2cmyk(args) {\n    return rgb2cmyk(hsv2rgb(args));\n  }\n\n  function hsv2keyword(args) {\n    return rgb2keyword(hsv2rgb(args));\n  } // http://dev.w3.org/csswg/css-color/#hwb-to-rgb\n\n\n  function hwb2rgb(hwb) {\n    var h = hwb[0] / 360,\n        wh = hwb[1] / 100,\n        bl = hwb[2] / 100,\n        ratio = wh + bl,\n        i,\n        v,\n        f,\n        n; // wh + bl cant be > 1\n\n    if (ratio > 1) {\n      wh /= ratio;\n      bl /= ratio;\n    }\n\n    i = Math.floor(6 * h);\n    v = 1 - bl;\n    f = 6 * h - i;\n\n    if ((i & 0x01) != 0) {\n      f = 1 - f;\n    }\n\n    n = wh + f * (v - wh); // linear interpolation\n\n    switch (i) {\n      default:\n      case 6:\n      case 0:\n        r = v;\n        g = n;\n        b = wh;\n        break;\n\n      case 1:\n        r = n;\n        g = v;\n        b = wh;\n        break;\n\n      case 2:\n        r = wh;\n        g = v;\n        b = n;\n        break;\n\n      case 3:\n        r = wh;\n        g = n;\n        b = v;\n        break;\n\n      case 4:\n        r = n;\n        g = wh;\n        b = v;\n        break;\n\n      case 5:\n        r = v;\n        g = wh;\n        b = n;\n        break;\n    }\n\n    return [r * 255, g * 255, b * 255];\n  }\n\n  function hwb2hsl(args) {\n    return rgb2hsl(hwb2rgb(args));\n  }\n\n  function hwb2hsv(args) {\n    return rgb2hsv(hwb2rgb(args));\n  }\n\n  function hwb2cmyk(args) {\n    return rgb2cmyk(hwb2rgb(args));\n  }\n\n  function hwb2keyword(args) {\n    return rgb2keyword(hwb2rgb(args));\n  }\n\n  function cmyk2rgb(cmyk) {\n    var c = cmyk[0] / 100,\n        m = cmyk[1] / 100,\n        y = cmyk[2] / 100,\n        k = cmyk[3] / 100,\n        r,\n        g,\n        b;\n    r = 1 - Math.min(1, c * (1 - k) + k);\n    g = 1 - Math.min(1, m * (1 - k) + k);\n    b = 1 - Math.min(1, y * (1 - k) + k);\n    return [r * 255, g * 255, b * 255];\n  }\n\n  function cmyk2hsl(args) {\n    return rgb2hsl(cmyk2rgb(args));\n  }\n\n  function cmyk2hsv(args) {\n    return rgb2hsv(cmyk2rgb(args));\n  }\n\n  function cmyk2hwb(args) {\n    return rgb2hwb(cmyk2rgb(args));\n  }\n\n  function cmyk2keyword(args) {\n    return rgb2keyword(cmyk2rgb(args));\n  }\n\n  function xyz2rgb(xyz) {\n    var x = xyz[0] / 100,\n        y = xyz[1] / 100,\n        z = xyz[2] / 100,\n        r,\n        g,\n        b;\n    r = x * 3.2406 + y * -1.5372 + z * -0.4986;\n    g = x * -0.9689 + y * 1.8758 + z * 0.0415;\n    b = x * 0.0557 + y * -0.2040 + z * 1.0570; // assume sRGB\n\n    r = r > 0.0031308 ? 1.055 * Math.pow(r, 1.0 / 2.4) - 0.055 : r = r * 12.92;\n    g = g > 0.0031308 ? 1.055 * Math.pow(g, 1.0 / 2.4) - 0.055 : g = g * 12.92;\n    b = b > 0.0031308 ? 1.055 * Math.pow(b, 1.0 / 2.4) - 0.055 : b = b * 12.92;\n    r = Math.min(Math.max(0, r), 1);\n    g = Math.min(Math.max(0, g), 1);\n    b = Math.min(Math.max(0, b), 1);\n    return [r * 255, g * 255, b * 255];\n  }\n\n  function xyz2lab(xyz) {\n    var x = xyz[0],\n        y = xyz[1],\n        z = xyz[2],\n        l,\n        a,\n        b;\n    x /= 95.047;\n    y /= 100;\n    z /= 108.883;\n    x = x > 0.008856 ? Math.pow(x, 1 / 3) : 7.787 * x + 16 / 116;\n    y = y > 0.008856 ? Math.pow(y, 1 / 3) : 7.787 * y + 16 / 116;\n    z = z > 0.008856 ? Math.pow(z, 1 / 3) : 7.787 * z + 16 / 116;\n    l = 116 * y - 16;\n    a = 500 * (x - y);\n    b = 200 * (y - z);\n    return [l, a, b];\n  }\n\n  function xyz2lch(args) {\n    return lab2lch(xyz2lab(args));\n  }\n\n  function lab2xyz(lab) {\n    var l = lab[0],\n        a = lab[1],\n        b = lab[2],\n        x,\n        y,\n        z,\n        y2;\n\n    if (l <= 8) {\n      y = l * 100 / 903.3;\n      y2 = 7.787 * (y / 100) + 16 / 116;\n    } else {\n      y = 100 * Math.pow((l + 16) / 116, 3);\n      y2 = Math.pow(y / 100, 1 / 3);\n    }\n\n    x = x / 95.047 <= 0.008856 ? x = 95.047 * (a / 500 + y2 - 16 / 116) / 7.787 : 95.047 * Math.pow(a / 500 + y2, 3);\n    z = z / 108.883 <= 0.008859 ? z = 108.883 * (y2 - b / 200 - 16 / 116) / 7.787 : 108.883 * Math.pow(y2 - b / 200, 3);\n    return [x, y, z];\n  }\n\n  function lab2lch(lab) {\n    var l = lab[0],\n        a = lab[1],\n        b = lab[2],\n        hr,\n        h,\n        c;\n    hr = Math.atan2(b, a);\n    h = hr * 360 / 2 / Math.PI;\n\n    if (h < 0) {\n      h += 360;\n    }\n\n    c = Math.sqrt(a * a + b * b);\n    return [l, c, h];\n  }\n\n  function lab2rgb(args) {\n    return xyz2rgb(lab2xyz(args));\n  }\n\n  function lch2lab(lch) {\n    var l = lch[0],\n        c = lch[1],\n        h = lch[2],\n        a,\n        b,\n        hr;\n    hr = h / 360 * 2 * Math.PI;\n    a = c * Math.cos(hr);\n    b = c * Math.sin(hr);\n    return [l, a, b];\n  }\n\n  function lch2xyz(args) {\n    return lab2xyz(lch2lab(args));\n  }\n\n  function lch2rgb(args) {\n    return lab2rgb(lch2lab(args));\n  }\n\n  function keyword2rgb(keyword) {\n    return cssKeywords[keyword];\n  }\n\n  function keyword2hsl(args) {\n    return rgb2hsl(keyword2rgb(args));\n  }\n\n  function keyword2hsv(args) {\n    return rgb2hsv(keyword2rgb(args));\n  }\n\n  function keyword2hwb(args) {\n    return rgb2hwb(keyword2rgb(args));\n  }\n\n  function keyword2cmyk(args) {\n    return rgb2cmyk(keyword2rgb(args));\n  }\n\n  function keyword2lab(args) {\n    return rgb2lab(keyword2rgb(args));\n  }\n\n  function keyword2xyz(args) {\n    return rgb2xyz(keyword2rgb(args));\n  }\n\n  var cssKeywords = {\n    aliceblue: [240, 248, 255],\n    antiquewhite: [250, 235, 215],\n    aqua: [0, 255, 255],\n    aquamarine: [127, 255, 212],\n    azure: [240, 255, 255],\n    beige: [245, 245, 220],\n    bisque: [255, 228, 196],\n    black: [0, 0, 0],\n    blanchedalmond: [255, 235, 205],\n    blue: [0, 0, 255],\n    blueviolet: [138, 43, 226],\n    brown: [165, 42, 42],\n    burlywood: [222, 184, 135],\n    cadetblue: [95, 158, 160],\n    chartreuse: [127, 255, 0],\n    chocolate: [210, 105, 30],\n    coral: [255, 127, 80],\n    cornflowerblue: [100, 149, 237],\n    cornsilk: [255, 248, 220],\n    crimson: [220, 20, 60],\n    cyan: [0, 255, 255],\n    darkblue: [0, 0, 139],\n    darkcyan: [0, 139, 139],\n    darkgoldenrod: [184, 134, 11],\n    darkgray: [169, 169, 169],\n    darkgreen: [0, 100, 0],\n    darkgrey: [169, 169, 169],\n    darkkhaki: [189, 183, 107],\n    darkmagenta: [139, 0, 139],\n    darkolivegreen: [85, 107, 47],\n    darkorange: [255, 140, 0],\n    darkorchid: [153, 50, 204],\n    darkred: [139, 0, 0],\n    darksalmon: [233, 150, 122],\n    darkseagreen: [143, 188, 143],\n    darkslateblue: [72, 61, 139],\n    darkslategray: [47, 79, 79],\n    darkslategrey: [47, 79, 79],\n    darkturquoise: [0, 206, 209],\n    darkviolet: [148, 0, 211],\n    deeppink: [255, 20, 147],\n    deepskyblue: [0, 191, 255],\n    dimgray: [105, 105, 105],\n    dimgrey: [105, 105, 105],\n    dodgerblue: [30, 144, 255],\n    firebrick: [178, 34, 34],\n    floralwhite: [255, 250, 240],\n    forestgreen: [34, 139, 34],\n    fuchsia: [255, 0, 255],\n    gainsboro: [220, 220, 220],\n    ghostwhite: [248, 248, 255],\n    gold: [255, 215, 0],\n    goldenrod: [218, 165, 32],\n    gray: [128, 128, 128],\n    green: [0, 128, 0],\n    greenyellow: [173, 255, 47],\n    grey: [128, 128, 128],\n    honeydew: [240, 255, 240],\n    hotpink: [255, 105, 180],\n    indianred: [205, 92, 92],\n    indigo: [75, 0, 130],\n    ivory: [255, 255, 240],\n    khaki: [240, 230, 140],\n    lavender: [230, 230, 250],\n    lavenderblush: [255, 240, 245],\n    lawngreen: [124, 252, 0],\n    lemonchiffon: [255, 250, 205],\n    lightblue: [173, 216, 230],\n    lightcoral: [240, 128, 128],\n    lightcyan: [224, 255, 255],\n    lightgoldenrodyellow: [250, 250, 210],\n    lightgray: [211, 211, 211],\n    lightgreen: [144, 238, 144],\n    lightgrey: [211, 211, 211],\n    lightpink: [255, 182, 193],\n    lightsalmon: [255, 160, 122],\n    lightseagreen: [32, 178, 170],\n    lightskyblue: [135, 206, 250],\n    lightslategray: [119, 136, 153],\n    lightslategrey: [119, 136, 153],\n    lightsteelblue: [176, 196, 222],\n    lightyellow: [255, 255, 224],\n    lime: [0, 255, 0],\n    limegreen: [50, 205, 50],\n    linen: [250, 240, 230],\n    magenta: [255, 0, 255],\n    maroon: [128, 0, 0],\n    mediumaquamarine: [102, 205, 170],\n    mediumblue: [0, 0, 205],\n    mediumorchid: [186, 85, 211],\n    mediumpurple: [147, 112, 219],\n    mediumseagreen: [60, 179, 113],\n    mediumslateblue: [123, 104, 238],\n    mediumspringgreen: [0, 250, 154],\n    mediumturquoise: [72, 209, 204],\n    mediumvioletred: [199, 21, 133],\n    midnightblue: [25, 25, 112],\n    mintcream: [245, 255, 250],\n    mistyrose: [255, 228, 225],\n    moccasin: [255, 228, 181],\n    navajowhite: [255, 222, 173],\n    navy: [0, 0, 128],\n    oldlace: [253, 245, 230],\n    olive: [128, 128, 0],\n    olivedrab: [107, 142, 35],\n    orange: [255, 165, 0],\n    orangered: [255, 69, 0],\n    orchid: [218, 112, 214],\n    palegoldenrod: [238, 232, 170],\n    palegreen: [152, 251, 152],\n    paleturquoise: [175, 238, 238],\n    palevioletred: [219, 112, 147],\n    papayawhip: [255, 239, 213],\n    peachpuff: [255, 218, 185],\n    peru: [205, 133, 63],\n    pink: [255, 192, 203],\n    plum: [221, 160, 221],\n    powderblue: [176, 224, 230],\n    purple: [128, 0, 128],\n    rebeccapurple: [102, 51, 153],\n    red: [255, 0, 0],\n    rosybrown: [188, 143, 143],\n    royalblue: [65, 105, 225],\n    saddlebrown: [139, 69, 19],\n    salmon: [250, 128, 114],\n    sandybrown: [244, 164, 96],\n    seagreen: [46, 139, 87],\n    seashell: [255, 245, 238],\n    sienna: [160, 82, 45],\n    silver: [192, 192, 192],\n    skyblue: [135, 206, 235],\n    slateblue: [106, 90, 205],\n    slategray: [112, 128, 144],\n    slategrey: [112, 128, 144],\n    snow: [255, 250, 250],\n    springgreen: [0, 255, 127],\n    steelblue: [70, 130, 180],\n    tan: [210, 180, 140],\n    teal: [0, 128, 128],\n    thistle: [216, 191, 216],\n    tomato: [255, 99, 71],\n    turquoise: [64, 224, 208],\n    violet: [238, 130, 238],\n    wheat: [245, 222, 179],\n    white: [255, 255, 255],\n    whitesmoke: [245, 245, 245],\n    yellow: [255, 255, 0],\n    yellowgreen: [154, 205, 50]\n  };\n  var reverseKeywords = {};\n\n  for (var key in cssKeywords) {\n    reverseKeywords[JSON.stringify(cssKeywords[key])] = key;\n  }\n\n  var convert = function convert() {\n    return new Converter();\n  };\n\n  for (var func in conversions) {\n    // export Raw versions\n    convert[func + \"Raw\"] = function (func) {\n      // accept array or plain args\n      return function (arg) {\n        if (typeof arg == \"number\") arg = Array.prototype.slice.call(arguments);\n        return conversions[func](arg);\n      };\n    }(func);\n\n    var pair = /(\\w+)2(\\w+)/.exec(func),\n        from = pair[1],\n        to = pair[2]; // export rgb2hsl and [\"rgb\"][\"hsl\"]\n\n    convert[from] = convert[from] || {};\n\n    convert[from][to] = convert[func] = function (func) {\n      return function (arg) {\n        if (typeof arg == \"number\") arg = Array.prototype.slice.call(arguments);\n        var val = conversions[func](arg);\n        if (typeof val == \"string\" || val === undefined) return val; // keyword\n\n        for (var i = 0; i < val.length; i++) {\n          val[i] = Math.round(val[i]);\n        }\n\n        return val;\n      };\n    }(func);\n  }\n  /* Converter does lazy conversion and caching */\n\n\n  var Converter = function Converter() {\n    this.convs = {};\n  };\n  /* Either get the values for a space or\n    set the values for a space, depending on args */\n\n\n  Converter.prototype.routeSpace = function (space, args) {\n    var values = args[0];\n\n    if (values === undefined) {\n      // color.rgb()\n      return this.getValues(space);\n    } // color.rgb(10, 10, 10)\n\n\n    if (typeof values == \"number\") {\n      values = Array.prototype.slice.call(args);\n    }\n\n    return this.setValues(space, values);\n  };\n  /* Set the values for a space, invalidating cache */\n\n\n  Converter.prototype.setValues = function (space, values) {\n    this.space = space;\n    this.convs = {};\n    this.convs[space] = values;\n    return this;\n  };\n  /* Get the values for a space. If there's already\n    a conversion for the space, fetch it, otherwise\n    compute it */\n\n\n  Converter.prototype.getValues = function (space) {\n    var vals = this.convs[space];\n\n    if (!vals) {\n      var fspace = this.space,\n          from = this.convs[fspace];\n      vals = convert[fspace][space](from);\n      this.convs[space] = vals;\n    }\n\n    return vals;\n  };\n\n  [\"rgb\", \"hsl\", \"hsv\", \"cmyk\", \"keyword\"].forEach(function (space) {\n    Converter.prototype[space] = function (vals) {\n      return this.routeSpace(space, arguments);\n    };\n  });\n  var colorConvert = convert;\n  var colorName = {\n    \"aliceblue\": [240, 248, 255],\n    \"antiquewhite\": [250, 235, 215],\n    \"aqua\": [0, 255, 255],\n    \"aquamarine\": [127, 255, 212],\n    \"azure\": [240, 255, 255],\n    \"beige\": [245, 245, 220],\n    \"bisque\": [255, 228, 196],\n    \"black\": [0, 0, 0],\n    \"blanchedalmond\": [255, 235, 205],\n    \"blue\": [0, 0, 255],\n    \"blueviolet\": [138, 43, 226],\n    \"brown\": [165, 42, 42],\n    \"burlywood\": [222, 184, 135],\n    \"cadetblue\": [95, 158, 160],\n    \"chartreuse\": [127, 255, 0],\n    \"chocolate\": [210, 105, 30],\n    \"coral\": [255, 127, 80],\n    \"cornflowerblue\": [100, 149, 237],\n    \"cornsilk\": [255, 248, 220],\n    \"crimson\": [220, 20, 60],\n    \"cyan\": [0, 255, 255],\n    \"darkblue\": [0, 0, 139],\n    \"darkcyan\": [0, 139, 139],\n    \"darkgoldenrod\": [184, 134, 11],\n    \"darkgray\": [169, 169, 169],\n    \"darkgreen\": [0, 100, 0],\n    \"darkgrey\": [169, 169, 169],\n    \"darkkhaki\": [189, 183, 107],\n    \"darkmagenta\": [139, 0, 139],\n    \"darkolivegreen\": [85, 107, 47],\n    \"darkorange\": [255, 140, 0],\n    \"darkorchid\": [153, 50, 204],\n    \"darkred\": [139, 0, 0],\n    \"darksalmon\": [233, 150, 122],\n    \"darkseagreen\": [143, 188, 143],\n    \"darkslateblue\": [72, 61, 139],\n    \"darkslategray\": [47, 79, 79],\n    \"darkslategrey\": [47, 79, 79],\n    \"darkturquoise\": [0, 206, 209],\n    \"darkviolet\": [148, 0, 211],\n    \"deeppink\": [255, 20, 147],\n    \"deepskyblue\": [0, 191, 255],\n    \"dimgray\": [105, 105, 105],\n    \"dimgrey\": [105, 105, 105],\n    \"dodgerblue\": [30, 144, 255],\n    \"firebrick\": [178, 34, 34],\n    \"floralwhite\": [255, 250, 240],\n    \"forestgreen\": [34, 139, 34],\n    \"fuchsia\": [255, 0, 255],\n    \"gainsboro\": [220, 220, 220],\n    \"ghostwhite\": [248, 248, 255],\n    \"gold\": [255, 215, 0],\n    \"goldenrod\": [218, 165, 32],\n    \"gray\": [128, 128, 128],\n    \"green\": [0, 128, 0],\n    \"greenyellow\": [173, 255, 47],\n    \"grey\": [128, 128, 128],\n    \"honeydew\": [240, 255, 240],\n    \"hotpink\": [255, 105, 180],\n    \"indianred\": [205, 92, 92],\n    \"indigo\": [75, 0, 130],\n    \"ivory\": [255, 255, 240],\n    \"khaki\": [240, 230, 140],\n    \"lavender\": [230, 230, 250],\n    \"lavenderblush\": [255, 240, 245],\n    \"lawngreen\": [124, 252, 0],\n    \"lemonchiffon\": [255, 250, 205],\n    \"lightblue\": [173, 216, 230],\n    \"lightcoral\": [240, 128, 128],\n    \"lightcyan\": [224, 255, 255],\n    \"lightgoldenrodyellow\": [250, 250, 210],\n    \"lightgray\": [211, 211, 211],\n    \"lightgreen\": [144, 238, 144],\n    \"lightgrey\": [211, 211, 211],\n    \"lightpink\": [255, 182, 193],\n    \"lightsalmon\": [255, 160, 122],\n    \"lightseagreen\": [32, 178, 170],\n    \"lightskyblue\": [135, 206, 250],\n    \"lightslategray\": [119, 136, 153],\n    \"lightslategrey\": [119, 136, 153],\n    \"lightsteelblue\": [176, 196, 222],\n    \"lightyellow\": [255, 255, 224],\n    \"lime\": [0, 255, 0],\n    \"limegreen\": [50, 205, 50],\n    \"linen\": [250, 240, 230],\n    \"magenta\": [255, 0, 255],\n    \"maroon\": [128, 0, 0],\n    \"mediumaquamarine\": [102, 205, 170],\n    \"mediumblue\": [0, 0, 205],\n    \"mediumorchid\": [186, 85, 211],\n    \"mediumpurple\": [147, 112, 219],\n    \"mediumseagreen\": [60, 179, 113],\n    \"mediumslateblue\": [123, 104, 238],\n    \"mediumspringgreen\": [0, 250, 154],\n    \"mediumturquoise\": [72, 209, 204],\n    \"mediumvioletred\": [199, 21, 133],\n    \"midnightblue\": [25, 25, 112],\n    \"mintcream\": [245, 255, 250],\n    \"mistyrose\": [255, 228, 225],\n    \"moccasin\": [255, 228, 181],\n    \"navajowhite\": [255, 222, 173],\n    \"navy\": [0, 0, 128],\n    \"oldlace\": [253, 245, 230],\n    \"olive\": [128, 128, 0],\n    \"olivedrab\": [107, 142, 35],\n    \"orange\": [255, 165, 0],\n    \"orangered\": [255, 69, 0],\n    \"orchid\": [218, 112, 214],\n    \"palegoldenrod\": [238, 232, 170],\n    \"palegreen\": [152, 251, 152],\n    \"paleturquoise\": [175, 238, 238],\n    \"palevioletred\": [219, 112, 147],\n    \"papayawhip\": [255, 239, 213],\n    \"peachpuff\": [255, 218, 185],\n    \"peru\": [205, 133, 63],\n    \"pink\": [255, 192, 203],\n    \"plum\": [221, 160, 221],\n    \"powderblue\": [176, 224, 230],\n    \"purple\": [128, 0, 128],\n    \"rebeccapurple\": [102, 51, 153],\n    \"red\": [255, 0, 0],\n    \"rosybrown\": [188, 143, 143],\n    \"royalblue\": [65, 105, 225],\n    \"saddlebrown\": [139, 69, 19],\n    \"salmon\": [250, 128, 114],\n    \"sandybrown\": [244, 164, 96],\n    \"seagreen\": [46, 139, 87],\n    \"seashell\": [255, 245, 238],\n    \"sienna\": [160, 82, 45],\n    \"silver\": [192, 192, 192],\n    \"skyblue\": [135, 206, 235],\n    \"slateblue\": [106, 90, 205],\n    \"slategray\": [112, 128, 144],\n    \"slategrey\": [112, 128, 144],\n    \"snow\": [255, 250, 250],\n    \"springgreen\": [0, 255, 127],\n    \"steelblue\": [70, 130, 180],\n    \"tan\": [210, 180, 140],\n    \"teal\": [0, 128, 128],\n    \"thistle\": [216, 191, 216],\n    \"tomato\": [255, 99, 71],\n    \"turquoise\": [64, 224, 208],\n    \"violet\": [238, 130, 238],\n    \"wheat\": [245, 222, 179],\n    \"white\": [255, 255, 255],\n    \"whitesmoke\": [245, 245, 245],\n    \"yellow\": [255, 255, 0],\n    \"yellowgreen\": [154, 205, 50]\n  };\n  /* MIT license */\n\n  var colorString = {\n    getRgba: getRgba,\n    getHsla: getHsla,\n    getRgb: getRgb,\n    getHsl: getHsl,\n    getHwb: getHwb,\n    getAlpha: getAlpha,\n    hexString: hexString,\n    rgbString: rgbString,\n    rgbaString: rgbaString,\n    percentString: percentString,\n    percentaString: percentaString,\n    hslString: hslString,\n    hslaString: hslaString,\n    hwbString: hwbString,\n    keyword: keyword\n  };\n\n  function getRgba(string) {\n    if (!string) {\n      return;\n    }\n\n    var abbr = /^#([a-fA-F0-9]{3,4})$/i,\n        hex = /^#([a-fA-F0-9]{6}([a-fA-F0-9]{2})?)$/i,\n        rgba = /^rgba?\\(\\s*([+-]?\\d+)\\s*,\\s*([+-]?\\d+)\\s*,\\s*([+-]?\\d+)\\s*(?:,\\s*([+-]?[\\d\\.]+)\\s*)?\\)$/i,\n        per = /^rgba?\\(\\s*([+-]?[\\d\\.]+)\\%\\s*,\\s*([+-]?[\\d\\.]+)\\%\\s*,\\s*([+-]?[\\d\\.]+)\\%\\s*(?:,\\s*([+-]?[\\d\\.]+)\\s*)?\\)$/i,\n        keyword = /(\\w+)/;\n    var rgb = [0, 0, 0],\n        a = 1,\n        match = string.match(abbr),\n        hexAlpha = \"\";\n\n    if (match) {\n      match = match[1];\n      hexAlpha = match[3];\n\n      for (var i = 0; i < rgb.length; i++) {\n        rgb[i] = parseInt(match[i] + match[i], 16);\n      }\n\n      if (hexAlpha) {\n        a = Math.round(parseInt(hexAlpha + hexAlpha, 16) / 255 * 100) / 100;\n      }\n    } else if (match = string.match(hex)) {\n      hexAlpha = match[2];\n      match = match[1];\n\n      for (var i = 0; i < rgb.length; i++) {\n        rgb[i] = parseInt(match.slice(i * 2, i * 2 + 2), 16);\n      }\n\n      if (hexAlpha) {\n        a = Math.round(parseInt(hexAlpha, 16) / 255 * 100) / 100;\n      }\n    } else if (match = string.match(rgba)) {\n      for (var i = 0; i < rgb.length; i++) {\n        rgb[i] = parseInt(match[i + 1]);\n      }\n\n      a = parseFloat(match[4]);\n    } else if (match = string.match(per)) {\n      for (var i = 0; i < rgb.length; i++) {\n        rgb[i] = Math.round(parseFloat(match[i + 1]) * 2.55);\n      }\n\n      a = parseFloat(match[4]);\n    } else if (match = string.match(keyword)) {\n      if (match[1] == \"transparent\") {\n        return [0, 0, 0, 0];\n      }\n\n      rgb = colorName[match[1]];\n\n      if (!rgb) {\n        return;\n      }\n    }\n\n    for (var i = 0; i < rgb.length; i++) {\n      rgb[i] = scale(rgb[i], 0, 255);\n    }\n\n    if (!a && a != 0) {\n      a = 1;\n    } else {\n      a = scale(a, 0, 1);\n    }\n\n    rgb[3] = a;\n    return rgb;\n  }\n\n  function getHsla(string) {\n    if (!string) {\n      return;\n    }\n\n    var hsl = /^hsla?\\(\\s*([+-]?\\d+)(?:deg)?\\s*,\\s*([+-]?[\\d\\.]+)%\\s*,\\s*([+-]?[\\d\\.]+)%\\s*(?:,\\s*([+-]?[\\d\\.]+)\\s*)?\\)/;\n    var match = string.match(hsl);\n\n    if (match) {\n      var alpha = parseFloat(match[4]);\n      var h = scale(parseInt(match[1]), 0, 360),\n          s = scale(parseFloat(match[2]), 0, 100),\n          l = scale(parseFloat(match[3]), 0, 100),\n          a = scale(isNaN(alpha) ? 1 : alpha, 0, 1);\n      return [h, s, l, a];\n    }\n  }\n\n  function getHwb(string) {\n    if (!string) {\n      return;\n    }\n\n    var hwb = /^hwb\\(\\s*([+-]?\\d+)(?:deg)?\\s*,\\s*([+-]?[\\d\\.]+)%\\s*,\\s*([+-]?[\\d\\.]+)%\\s*(?:,\\s*([+-]?[\\d\\.]+)\\s*)?\\)/;\n    var match = string.match(hwb);\n\n    if (match) {\n      var alpha = parseFloat(match[4]);\n      var h = scale(parseInt(match[1]), 0, 360),\n          w = scale(parseFloat(match[2]), 0, 100),\n          b = scale(parseFloat(match[3]), 0, 100),\n          a = scale(isNaN(alpha) ? 1 : alpha, 0, 1);\n      return [h, w, b, a];\n    }\n  }\n\n  function getRgb(string) {\n    var rgba = getRgba(string);\n    return rgba && rgba.slice(0, 3);\n  }\n\n  function getHsl(string) {\n    var hsla = getHsla(string);\n    return hsla && hsla.slice(0, 3);\n  }\n\n  function getAlpha(string) {\n    var vals = getRgba(string);\n\n    if (vals) {\n      return vals[3];\n    } else if (vals = getHsla(string)) {\n      return vals[3];\n    } else if (vals = getHwb(string)) {\n      return vals[3];\n    }\n  } // generators\n\n\n  function hexString(rgba, a) {\n    var a = a !== undefined && rgba.length === 3 ? a : rgba[3];\n    return \"#\" + hexDouble(rgba[0]) + hexDouble(rgba[1]) + hexDouble(rgba[2]) + (a >= 0 && a < 1 ? hexDouble(Math.round(a * 255)) : \"\");\n  }\n\n  function rgbString(rgba, alpha) {\n    if (alpha < 1 || rgba[3] && rgba[3] < 1) {\n      return rgbaString(rgba, alpha);\n    }\n\n    return \"rgb(\" + rgba[0] + \", \" + rgba[1] + \", \" + rgba[2] + \")\";\n  }\n\n  function rgbaString(rgba, alpha) {\n    if (alpha === undefined) {\n      alpha = rgba[3] !== undefined ? rgba[3] : 1;\n    }\n\n    return \"rgba(\" + rgba[0] + \", \" + rgba[1] + \", \" + rgba[2] + \", \" + alpha + \")\";\n  }\n\n  function percentString(rgba, alpha) {\n    if (alpha < 1 || rgba[3] && rgba[3] < 1) {\n      return percentaString(rgba, alpha);\n    }\n\n    var r = Math.round(rgba[0] / 255 * 100),\n        g = Math.round(rgba[1] / 255 * 100),\n        b = Math.round(rgba[2] / 255 * 100);\n    return \"rgb(\" + r + \"%, \" + g + \"%, \" + b + \"%)\";\n  }\n\n  function percentaString(rgba, alpha) {\n    var r = Math.round(rgba[0] / 255 * 100),\n        g = Math.round(rgba[1] / 255 * 100),\n        b = Math.round(rgba[2] / 255 * 100);\n    return \"rgba(\" + r + \"%, \" + g + \"%, \" + b + \"%, \" + (alpha || rgba[3] || 1) + \")\";\n  }\n\n  function hslString(hsla, alpha) {\n    if (alpha < 1 || hsla[3] && hsla[3] < 1) {\n      return hslaString(hsla, alpha);\n    }\n\n    return \"hsl(\" + hsla[0] + \", \" + hsla[1] + \"%, \" + hsla[2] + \"%)\";\n  }\n\n  function hslaString(hsla, alpha) {\n    if (alpha === undefined) {\n      alpha = hsla[3] !== undefined ? hsla[3] : 1;\n    }\n\n    return \"hsla(\" + hsla[0] + \", \" + hsla[1] + \"%, \" + hsla[2] + \"%, \" + alpha + \")\";\n  } // hwb is a bit different than rgb(a) & hsl(a) since there is no alpha specific syntax\n  // (hwb have alpha optional & 1 is default value)\n\n\n  function hwbString(hwb, alpha) {\n    if (alpha === undefined) {\n      alpha = hwb[3] !== undefined ? hwb[3] : 1;\n    }\n\n    return \"hwb(\" + hwb[0] + \", \" + hwb[1] + \"%, \" + hwb[2] + \"%\" + (alpha !== undefined && alpha !== 1 ? \", \" + alpha : \"\") + \")\";\n  }\n\n  function keyword(rgb) {\n    return reverseNames[rgb.slice(0, 3)];\n  } // helpers\n\n\n  function scale(num, min, max) {\n    return Math.min(Math.max(min, num), max);\n  }\n\n  function hexDouble(num) {\n    var str = num.toString(16).toUpperCase();\n    return str.length < 2 ? \"0\" + str : str;\n  } //create a list of reverse color names\n\n\n  var reverseNames = {};\n\n  for (var name in colorName) {\n    reverseNames[colorName[name]] = name;\n  }\n  /* MIT license */\n\n\n  var Color = function Color(obj) {\n    if (obj instanceof Color) {\n      return obj;\n    }\n\n    if (!(this instanceof Color)) {\n      return new Color(obj);\n    }\n\n    this.valid = false;\n    this.values = {\n      rgb: [0, 0, 0],\n      hsl: [0, 0, 0],\n      hsv: [0, 0, 0],\n      hwb: [0, 0, 0],\n      cmyk: [0, 0, 0, 0],\n      alpha: 1\n    }; // parse Color() argument\n\n    var vals;\n\n    if (typeof obj === 'string') {\n      vals = colorString.getRgba(obj);\n\n      if (vals) {\n        this.setValues('rgb', vals);\n      } else if (vals = colorString.getHsla(obj)) {\n        this.setValues('hsl', vals);\n      } else if (vals = colorString.getHwb(obj)) {\n        this.setValues('hwb', vals);\n      }\n    } else if (typeof obj === 'object') {\n      vals = obj;\n\n      if (vals.r !== undefined || vals.red !== undefined) {\n        this.setValues('rgb', vals);\n      } else if (vals.l !== undefined || vals.lightness !== undefined) {\n        this.setValues('hsl', vals);\n      } else if (vals.v !== undefined || vals.value !== undefined) {\n        this.setValues('hsv', vals);\n      } else if (vals.w !== undefined || vals.whiteness !== undefined) {\n        this.setValues('hwb', vals);\n      } else if (vals.c !== undefined || vals.cyan !== undefined) {\n        this.setValues('cmyk', vals);\n      }\n    }\n  };\n\n  Color.prototype = {\n    isValid: function isValid() {\n      return this.valid;\n    },\n    rgb: function rgb() {\n      return this.setSpace('rgb', arguments);\n    },\n    hsl: function hsl() {\n      return this.setSpace('hsl', arguments);\n    },\n    hsv: function hsv() {\n      return this.setSpace('hsv', arguments);\n    },\n    hwb: function hwb() {\n      return this.setSpace('hwb', arguments);\n    },\n    cmyk: function cmyk() {\n      return this.setSpace('cmyk', arguments);\n    },\n    rgbArray: function rgbArray() {\n      return this.values.rgb;\n    },\n    hslArray: function hslArray() {\n      return this.values.hsl;\n    },\n    hsvArray: function hsvArray() {\n      return this.values.hsv;\n    },\n    hwbArray: function hwbArray() {\n      var values = this.values;\n\n      if (values.alpha !== 1) {\n        return values.hwb.concat([values.alpha]);\n      }\n\n      return values.hwb;\n    },\n    cmykArray: function cmykArray() {\n      return this.values.cmyk;\n    },\n    rgbaArray: function rgbaArray() {\n      var values = this.values;\n      return values.rgb.concat([values.alpha]);\n    },\n    hslaArray: function hslaArray() {\n      var values = this.values;\n      return values.hsl.concat([values.alpha]);\n    },\n    alpha: function alpha(val) {\n      if (val === undefined) {\n        return this.values.alpha;\n      }\n\n      this.setValues('alpha', val);\n      return this;\n    },\n    red: function red(val) {\n      return this.setChannel('rgb', 0, val);\n    },\n    green: function green(val) {\n      return this.setChannel('rgb', 1, val);\n    },\n    blue: function blue(val) {\n      return this.setChannel('rgb', 2, val);\n    },\n    hue: function hue(val) {\n      if (val) {\n        val %= 360;\n        val = val < 0 ? 360 + val : val;\n      }\n\n      return this.setChannel('hsl', 0, val);\n    },\n    saturation: function saturation(val) {\n      return this.setChannel('hsl', 1, val);\n    },\n    lightness: function lightness(val) {\n      return this.setChannel('hsl', 2, val);\n    },\n    saturationv: function saturationv(val) {\n      return this.setChannel('hsv', 1, val);\n    },\n    whiteness: function whiteness(val) {\n      return this.setChannel('hwb', 1, val);\n    },\n    blackness: function blackness(val) {\n      return this.setChannel('hwb', 2, val);\n    },\n    value: function value(val) {\n      return this.setChannel('hsv', 2, val);\n    },\n    cyan: function cyan(val) {\n      return this.setChannel('cmyk', 0, val);\n    },\n    magenta: function magenta(val) {\n      return this.setChannel('cmyk', 1, val);\n    },\n    yellow: function yellow(val) {\n      return this.setChannel('cmyk', 2, val);\n    },\n    black: function black(val) {\n      return this.setChannel('cmyk', 3, val);\n    },\n    hexString: function hexString() {\n      return colorString.hexString(this.values.rgb);\n    },\n    rgbString: function rgbString() {\n      return colorString.rgbString(this.values.rgb, this.values.alpha);\n    },\n    rgbaString: function rgbaString() {\n      return colorString.rgbaString(this.values.rgb, this.values.alpha);\n    },\n    percentString: function percentString() {\n      return colorString.percentString(this.values.rgb, this.values.alpha);\n    },\n    hslString: function hslString() {\n      return colorString.hslString(this.values.hsl, this.values.alpha);\n    },\n    hslaString: function hslaString() {\n      return colorString.hslaString(this.values.hsl, this.values.alpha);\n    },\n    hwbString: function hwbString() {\n      return colorString.hwbString(this.values.hwb, this.values.alpha);\n    },\n    keyword: function keyword() {\n      return colorString.keyword(this.values.rgb, this.values.alpha);\n    },\n    rgbNumber: function rgbNumber() {\n      var rgb = this.values.rgb;\n      return rgb[0] << 16 | rgb[1] << 8 | rgb[2];\n    },\n    luminosity: function luminosity() {\n      // http://www.w3.org/TR/WCAG20/#relativeluminancedef\n      var rgb = this.values.rgb;\n      var lum = [];\n\n      for (var i = 0; i < rgb.length; i++) {\n        var chan = rgb[i] / 255;\n        lum[i] = chan <= 0.03928 ? chan / 12.92 : Math.pow((chan + 0.055) / 1.055, 2.4);\n      }\n\n      return 0.2126 * lum[0] + 0.7152 * lum[1] + 0.0722 * lum[2];\n    },\n    contrast: function contrast(color2) {\n      // http://www.w3.org/TR/WCAG20/#contrast-ratiodef\n      var lum1 = this.luminosity();\n      var lum2 = color2.luminosity();\n\n      if (lum1 > lum2) {\n        return (lum1 + 0.05) / (lum2 + 0.05);\n      }\n\n      return (lum2 + 0.05) / (lum1 + 0.05);\n    },\n    level: function level(color2) {\n      var contrastRatio = this.contrast(color2);\n\n      if (contrastRatio >= 7.1) {\n        return 'AAA';\n      }\n\n      return contrastRatio >= 4.5 ? 'AA' : '';\n    },\n    dark: function dark() {\n      // YIQ equation from http://24ways.org/2010/calculating-color-contrast\n      var rgb = this.values.rgb;\n      var yiq = (rgb[0] * 299 + rgb[1] * 587 + rgb[2] * 114) / 1000;\n      return yiq < 128;\n    },\n    light: function light() {\n      return !this.dark();\n    },\n    negate: function negate() {\n      var rgb = [];\n\n      for (var i = 0; i < 3; i++) {\n        rgb[i] = 255 - this.values.rgb[i];\n      }\n\n      this.setValues('rgb', rgb);\n      return this;\n    },\n    lighten: function lighten(ratio) {\n      var hsl = this.values.hsl;\n      hsl[2] += hsl[2] * ratio;\n      this.setValues('hsl', hsl);\n      return this;\n    },\n    darken: function darken(ratio) {\n      var hsl = this.values.hsl;\n      hsl[2] -= hsl[2] * ratio;\n      this.setValues('hsl', hsl);\n      return this;\n    },\n    saturate: function saturate(ratio) {\n      var hsl = this.values.hsl;\n      hsl[1] += hsl[1] * ratio;\n      this.setValues('hsl', hsl);\n      return this;\n    },\n    desaturate: function desaturate(ratio) {\n      var hsl = this.values.hsl;\n      hsl[1] -= hsl[1] * ratio;\n      this.setValues('hsl', hsl);\n      return this;\n    },\n    whiten: function whiten(ratio) {\n      var hwb = this.values.hwb;\n      hwb[1] += hwb[1] * ratio;\n      this.setValues('hwb', hwb);\n      return this;\n    },\n    blacken: function blacken(ratio) {\n      var hwb = this.values.hwb;\n      hwb[2] += hwb[2] * ratio;\n      this.setValues('hwb', hwb);\n      return this;\n    },\n    greyscale: function greyscale() {\n      var rgb = this.values.rgb; // http://en.wikipedia.org/wiki/Grayscale#Converting_color_to_grayscale\n\n      var val = rgb[0] * 0.3 + rgb[1] * 0.59 + rgb[2] * 0.11;\n      this.setValues('rgb', [val, val, val]);\n      return this;\n    },\n    clearer: function clearer(ratio) {\n      var alpha = this.values.alpha;\n      this.setValues('alpha', alpha - alpha * ratio);\n      return this;\n    },\n    opaquer: function opaquer(ratio) {\n      var alpha = this.values.alpha;\n      this.setValues('alpha', alpha + alpha * ratio);\n      return this;\n    },\n    rotate: function rotate(degrees) {\n      var hsl = this.values.hsl;\n      var hue = (hsl[0] + degrees) % 360;\n      hsl[0] = hue < 0 ? 360 + hue : hue;\n      this.setValues('hsl', hsl);\n      return this;\n    },\n\n    /**\n     * Ported from sass implementation in C\n     * https://github.com/sass/libsass/blob/0e6b4a2850092356aa3ece07c6b249f0221caced/functions.cpp#L209\n     */\n    mix: function mix(mixinColor, weight) {\n      var color1 = this;\n      var color2 = mixinColor;\n      var p = weight === undefined ? 0.5 : weight;\n      var w = 2 * p - 1;\n      var a = color1.alpha() - color2.alpha();\n      var w1 = ((w * a === -1 ? w : (w + a) / (1 + w * a)) + 1) / 2.0;\n      var w2 = 1 - w1;\n      return this.rgb(w1 * color1.red() + w2 * color2.red(), w1 * color1.green() + w2 * color2.green(), w1 * color1.blue() + w2 * color2.blue()).alpha(color1.alpha() * p + color2.alpha() * (1 - p));\n    },\n    toJSON: function toJSON() {\n      return this.rgb();\n    },\n    clone: function clone() {\n      // NOTE(SB): using node-clone creates a dependency to Buffer when using browserify,\n      // making the final build way to big to embed in Chart.js. So let's do it manually,\n      // assuming that values to clone are 1 dimension arrays containing only numbers,\n      // except 'alpha' which is a number.\n      var result = new Color();\n      var source = this.values;\n      var target = result.values;\n      var value, type;\n\n      for (var prop in source) {\n        if (source.hasOwnProperty(prop)) {\n          value = source[prop];\n          type = {}.toString.call(value);\n\n          if (type === '[object Array]') {\n            target[prop] = value.slice(0);\n          } else if (type === '[object Number]') {\n            target[prop] = value;\n          } else {\n            console.error('unexpected color value:', value);\n          }\n        }\n      }\n\n      return result;\n    }\n  };\n  Color.prototype.spaces = {\n    rgb: ['red', 'green', 'blue'],\n    hsl: ['hue', 'saturation', 'lightness'],\n    hsv: ['hue', 'saturation', 'value'],\n    hwb: ['hue', 'whiteness', 'blackness'],\n    cmyk: ['cyan', 'magenta', 'yellow', 'black']\n  };\n  Color.prototype.maxes = {\n    rgb: [255, 255, 255],\n    hsl: [360, 100, 100],\n    hsv: [360, 100, 100],\n    hwb: [360, 100, 100],\n    cmyk: [100, 100, 100, 100]\n  };\n\n  Color.prototype.getValues = function (space) {\n    var values = this.values;\n    var vals = {};\n\n    for (var i = 0; i < space.length; i++) {\n      vals[space.charAt(i)] = values[space][i];\n    }\n\n    if (values.alpha !== 1) {\n      vals.a = values.alpha;\n    } // {r: 255, g: 255, b: 255, a: 0.4}\n\n\n    return vals;\n  };\n\n  Color.prototype.setValues = function (space, vals) {\n    var values = this.values;\n    var spaces = this.spaces;\n    var maxes = this.maxes;\n    var alpha = 1;\n    var i;\n    this.valid = true;\n\n    if (space === 'alpha') {\n      alpha = vals;\n    } else if (vals.length) {\n      // [10, 10, 10]\n      values[space] = vals.slice(0, space.length);\n      alpha = vals[space.length];\n    } else if (vals[space.charAt(0)] !== undefined) {\n      // {r: 10, g: 10, b: 10}\n      for (i = 0; i < space.length; i++) {\n        values[space][i] = vals[space.charAt(i)];\n      }\n\n      alpha = vals.a;\n    } else if (vals[spaces[space][0]] !== undefined) {\n      // {red: 10, green: 10, blue: 10}\n      var chans = spaces[space];\n\n      for (i = 0; i < space.length; i++) {\n        values[space][i] = vals[chans[i]];\n      }\n\n      alpha = vals.alpha;\n    }\n\n    values.alpha = Math.max(0, Math.min(1, alpha === undefined ? values.alpha : alpha));\n\n    if (space === 'alpha') {\n      return false;\n    }\n\n    var capped; // cap values of the space prior converting all values\n\n    for (i = 0; i < space.length; i++) {\n      capped = Math.max(0, Math.min(maxes[space][i], values[space][i]));\n      values[space][i] = Math.round(capped);\n    } // convert to all the other color spaces\n\n\n    for (var sname in spaces) {\n      if (sname !== space) {\n        values[sname] = colorConvert[space][sname](values[space]);\n      }\n    }\n\n    return true;\n  };\n\n  Color.prototype.setSpace = function (space, args) {\n    var vals = args[0];\n\n    if (vals === undefined) {\n      // color.rgb()\n      return this.getValues(space);\n    } // color.rgb(10, 10, 10)\n\n\n    if (typeof vals === 'number') {\n      vals = Array.prototype.slice.call(args);\n    }\n\n    this.setValues(space, vals);\n    return this;\n  };\n\n  Color.prototype.setChannel = function (space, index, val) {\n    var svalues = this.values[space];\n\n    if (val === undefined) {\n      // color.red()\n      return svalues[index];\n    } else if (val === svalues[index]) {\n      // color.red(color.red())\n      return this;\n    } // color.red(100)\n\n\n    svalues[index] = val;\n    this.setValues(space, svalues);\n    return this;\n  };\n\n  if (typeof window !== 'undefined') {\n    window.Color = Color;\n  }\n\n  var chartjsColor = Color;\n  /**\n   * @namespace Chart.helpers\n   */\n\n  var helpers = {\n    /**\n     * An empty function that can be used, for example, for optional callback.\n     */\n    noop: function noop() {},\n\n    /**\n     * Returns a unique id, sequentially generated from a global variable.\n     * @returns {number}\n     * @function\n     */\n    uid: function () {\n      var id = 0;\n      return function () {\n        return id++;\n      };\n    }(),\n\n    /**\n     * Returns true if `value` is neither null nor undefined, else returns false.\n     * @param {*} value - The value to test.\n     * @returns {boolean}\n     * @since 2.7.0\n     */\n    isNullOrUndef: function isNullOrUndef(value) {\n      return value === null || typeof value === 'undefined';\n    },\n\n    /**\n     * Returns true if `value` is an array (including typed arrays), else returns false.\n     * @param {*} value - The value to test.\n     * @returns {boolean}\n     * @function\n     */\n    isArray: function isArray(value) {\n      if (Array.isArray && Array.isArray(value)) {\n        return true;\n      }\n\n      var type = Object.prototype.toString.call(value);\n\n      if (type.substr(0, 7) === '[object' && type.substr(-6) === 'Array]') {\n        return true;\n      }\n\n      return false;\n    },\n\n    /**\n     * Returns true if `value` is an object (excluding null), else returns false.\n     * @param {*} value - The value to test.\n     * @returns {boolean}\n     * @since 2.7.0\n     */\n    isObject: function isObject(value) {\n      return value !== null && Object.prototype.toString.call(value) === '[object Object]';\n    },\n\n    /**\n     * Returns true if `value` is a finite number, else returns false\n     * @param {*} value  - The value to test.\n     * @returns {boolean}\n     */\n    isFinite: function (_isFinite) {\n      function isFinite(_x) {\n        return _isFinite.apply(this, arguments);\n      }\n\n      isFinite.toString = function () {\n        return _isFinite.toString();\n      };\n\n      return isFinite;\n    }(function (value) {\n      return (typeof value === 'number' || value instanceof Number) && isFinite(value);\n    }),\n\n    /**\n     * Returns `value` if defined, else returns `defaultValue`.\n     * @param {*} value - The value to return if defined.\n     * @param {*} defaultValue - The value to return if `value` is undefined.\n     * @returns {*}\n     */\n    valueOrDefault: function valueOrDefault(value, defaultValue) {\n      return typeof value === 'undefined' ? defaultValue : value;\n    },\n\n    /**\n     * Returns value at the given `index` in array if defined, else returns `defaultValue`.\n     * @param {Array} value - The array to lookup for value at `index`.\n     * @param {number} index - The index in `value` to lookup for value.\n     * @param {*} defaultValue - The value to return if `value[index]` is undefined.\n     * @returns {*}\n     */\n    valueAtIndexOrDefault: function valueAtIndexOrDefault(value, index, defaultValue) {\n      return helpers.valueOrDefault(helpers.isArray(value) ? value[index] : value, defaultValue);\n    },\n\n    /**\n     * Calls `fn` with the given `args` in the scope defined by `thisArg` and returns the\n     * value returned by `fn`. If `fn` is not a function, this method returns undefined.\n     * @param {function} fn - The function to call.\n     * @param {Array|undefined|null} args - The arguments with which `fn` should be called.\n     * @param {object} [thisArg] - The value of `this` provided for the call to `fn`.\n     * @returns {*}\n     */\n    callback: function callback(fn, args, thisArg) {\n      if (fn && typeof fn.call === 'function') {\n        return fn.apply(thisArg, args);\n      }\n    },\n\n    /**\n     * Note(SB) for performance sake, this method should only be used when loopable type\n     * is unknown or in none intensive code (not called often and small loopable). Else\n     * it's preferable to use a regular for() loop and save extra function calls.\n     * @param {object|Array} loopable - The object or array to be iterated.\n     * @param {function} fn - The function to call for each item.\n     * @param {object} [thisArg] - The value of `this` provided for the call to `fn`.\n     * @param {boolean} [reverse] - If true, iterates backward on the loopable.\n     */\n    each: function each(loopable, fn, thisArg, reverse) {\n      var i, len, keys;\n\n      if (helpers.isArray(loopable)) {\n        len = loopable.length;\n\n        if (reverse) {\n          for (i = len - 1; i >= 0; i--) {\n            fn.call(thisArg, loopable[i], i);\n          }\n        } else {\n          for (i = 0; i < len; i++) {\n            fn.call(thisArg, loopable[i], i);\n          }\n        }\n      } else if (helpers.isObject(loopable)) {\n        keys = Object.keys(loopable);\n        len = keys.length;\n\n        for (i = 0; i < len; i++) {\n          fn.call(thisArg, loopable[keys[i]], keys[i]);\n        }\n      }\n    },\n\n    /**\n     * Returns true if the `a0` and `a1` arrays have the same content, else returns false.\n     * @see https://stackoverflow.com/a/14853974\n     * @param {Array} a0 - The array to compare\n     * @param {Array} a1 - The array to compare\n     * @returns {boolean}\n     */\n    arrayEquals: function arrayEquals(a0, a1) {\n      var i, ilen, v0, v1;\n\n      if (!a0 || !a1 || a0.length !== a1.length) {\n        return false;\n      }\n\n      for (i = 0, ilen = a0.length; i < ilen; ++i) {\n        v0 = a0[i];\n        v1 = a1[i];\n\n        if (v0 instanceof Array && v1 instanceof Array) {\n          if (!helpers.arrayEquals(v0, v1)) {\n            return false;\n          }\n        } else if (v0 !== v1) {\n          // NOTE: two different object instances will never be equal: {x:20} != {x:20}\n          return false;\n        }\n      }\n\n      return true;\n    },\n\n    /**\n     * Returns a deep copy of `source` without keeping references on objects and arrays.\n     * @param {*} source - The value to clone.\n     * @returns {*}\n     */\n    clone: function clone(source) {\n      if (helpers.isArray(source)) {\n        return source.map(helpers.clone);\n      }\n\n      if (helpers.isObject(source)) {\n        var target = {};\n        var keys = Object.keys(source);\n        var klen = keys.length;\n        var k = 0;\n\n        for (; k < klen; ++k) {\n          target[keys[k]] = helpers.clone(source[keys[k]]);\n        }\n\n        return target;\n      }\n\n      return source;\n    },\n\n    /**\n     * The default merger when Chart.helpers.merge is called without merger option.\n     * Note(SB): also used by mergeConfig and mergeScaleConfig as fallback.\n     * @private\n     */\n    _merger: function _merger(key, target, source, options) {\n      var tval = target[key];\n      var sval = source[key];\n\n      if (helpers.isObject(tval) && helpers.isObject(sval)) {\n        helpers.merge(tval, sval, options);\n      } else {\n        target[key] = helpers.clone(sval);\n      }\n    },\n\n    /**\n     * Merges source[key] in target[key] only if target[key] is undefined.\n     * @private\n     */\n    _mergerIf: function _mergerIf(key, target, source) {\n      var tval = target[key];\n      var sval = source[key];\n\n      if (helpers.isObject(tval) && helpers.isObject(sval)) {\n        helpers.mergeIf(tval, sval);\n      } else if (!target.hasOwnProperty(key)) {\n        target[key] = helpers.clone(sval);\n      }\n    },\n\n    /**\n     * Recursively deep copies `source` properties into `target` with the given `options`.\n     * IMPORTANT: `target` is not cloned and will be updated with `source` properties.\n     * @param {object} target - The target object in which all sources are merged into.\n     * @param {object|object[]} source - Object(s) to merge into `target`.\n     * @param {object} [options] - Merging options:\n     * @param {function} [options.merger] - The merge method (key, target, source, options)\n     * @returns {object} The `target` object.\n     */\n    merge: function merge(target, source, options) {\n      var sources = helpers.isArray(source) ? source : [source];\n      var ilen = sources.length;\n      var merge, i, keys, klen, k;\n\n      if (!helpers.isObject(target)) {\n        return target;\n      }\n\n      options = options || {};\n      merge = options.merger || helpers._merger;\n\n      for (i = 0; i < ilen; ++i) {\n        source = sources[i];\n\n        if (!helpers.isObject(source)) {\n          continue;\n        }\n\n        keys = Object.keys(source);\n\n        for (k = 0, klen = keys.length; k < klen; ++k) {\n          merge(keys[k], target, source, options);\n        }\n      }\n\n      return target;\n    },\n\n    /**\n     * Recursively deep copies `source` properties into `target` *only* if not defined in target.\n     * IMPORTANT: `target` is not cloned and will be updated with `source` properties.\n     * @param {object} target - The target object in which all sources are merged into.\n     * @param {object|object[]} source - Object(s) to merge into `target`.\n     * @returns {object} The `target` object.\n     */\n    mergeIf: function mergeIf(target, source) {\n      return helpers.merge(target, source, {\n        merger: helpers._mergerIf\n      });\n    },\n\n    /**\n     * Applies the contents of two or more objects together into the first object.\n     * @param {object} target - The target object in which all objects are merged into.\n     * @param {object} arg1 - Object containing additional properties to merge in target.\n     * @param {object} argN - Additional objects containing properties to merge in target.\n     * @returns {object} The `target` object.\n     */\n    extend: function extend(target) {\n      var setFn = function setFn(value, key) {\n        target[key] = value;\n      };\n\n      for (var i = 1, ilen = arguments.length; i < ilen; ++i) {\n        helpers.each(arguments[i], setFn);\n      }\n\n      return target;\n    },\n\n    /**\n     * Basic javascript inheritance based on the model created in Backbone.js\n     */\n    inherits: function inherits(extensions) {\n      var me = this;\n      var ChartElement = extensions && extensions.hasOwnProperty('constructor') ? extensions.constructor : function () {\n        return me.apply(this, arguments);\n      };\n\n      var Surrogate = function Surrogate() {\n        this.constructor = ChartElement;\n      };\n\n      Surrogate.prototype = me.prototype;\n      ChartElement.prototype = new Surrogate();\n      ChartElement.extend = helpers.inherits;\n\n      if (extensions) {\n        helpers.extend(ChartElement.prototype, extensions);\n      }\n\n      ChartElement.__super__ = me.prototype;\n      return ChartElement;\n    }\n  };\n  var helpers_core = helpers; // DEPRECATIONS\n\n  /**\n   * Provided for backward compatibility, use Chart.helpers.callback instead.\n   * @function Chart.helpers.callCallback\n   * @deprecated since version 2.6.0\n   * @todo remove at version 3\n   * @private\n   */\n\n  helpers.callCallback = helpers.callback;\n  /**\n   * Provided for backward compatibility, use Array.prototype.indexOf instead.\n   * Array.prototype.indexOf compatibility: Chrome, Opera, Safari, FF1.5+, IE9+\n   * @function Chart.helpers.indexOf\n   * @deprecated since version 2.7.0\n   * @todo remove at version 3\n   * @private\n   */\n\n  helpers.indexOf = function (array, item, fromIndex) {\n    return Array.prototype.indexOf.call(array, item, fromIndex);\n  };\n  /**\n   * Provided for backward compatibility, use Chart.helpers.valueOrDefault instead.\n   * @function Chart.helpers.getValueOrDefault\n   * @deprecated since version 2.7.0\n   * @todo remove at version 3\n   * @private\n   */\n\n\n  helpers.getValueOrDefault = helpers.valueOrDefault;\n  /**\n   * Provided for backward compatibility, use Chart.helpers.valueAtIndexOrDefault instead.\n   * @function Chart.helpers.getValueAtIndexOrDefault\n   * @deprecated since version 2.7.0\n   * @todo remove at version 3\n   * @private\n   */\n\n  helpers.getValueAtIndexOrDefault = helpers.valueAtIndexOrDefault;\n  /**\n   * Easing functions adapted from Robert Penner's easing equations.\n   * @namespace Chart.helpers.easingEffects\n   * @see http://www.robertpenner.com/easing/\n   */\n\n  var effects = {\n    linear: function linear(t) {\n      return t;\n    },\n    easeInQuad: function easeInQuad(t) {\n      return t * t;\n    },\n    easeOutQuad: function easeOutQuad(t) {\n      return -t * (t - 2);\n    },\n    easeInOutQuad: function easeInOutQuad(t) {\n      if ((t /= 0.5) < 1) {\n        return 0.5 * t * t;\n      }\n\n      return -0.5 * (--t * (t - 2) - 1);\n    },\n    easeInCubic: function easeInCubic(t) {\n      return t * t * t;\n    },\n    easeOutCubic: function easeOutCubic(t) {\n      return (t = t - 1) * t * t + 1;\n    },\n    easeInOutCubic: function easeInOutCubic(t) {\n      if ((t /= 0.5) < 1) {\n        return 0.5 * t * t * t;\n      }\n\n      return 0.5 * ((t -= 2) * t * t + 2);\n    },\n    easeInQuart: function easeInQuart(t) {\n      return t * t * t * t;\n    },\n    easeOutQuart: function easeOutQuart(t) {\n      return -((t = t - 1) * t * t * t - 1);\n    },\n    easeInOutQuart: function easeInOutQuart(t) {\n      if ((t /= 0.5) < 1) {\n        return 0.5 * t * t * t * t;\n      }\n\n      return -0.5 * ((t -= 2) * t * t * t - 2);\n    },\n    easeInQuint: function easeInQuint(t) {\n      return t * t * t * t * t;\n    },\n    easeOutQuint: function easeOutQuint(t) {\n      return (t = t - 1) * t * t * t * t + 1;\n    },\n    easeInOutQuint: function easeInOutQuint(t) {\n      if ((t /= 0.5) < 1) {\n        return 0.5 * t * t * t * t * t;\n      }\n\n      return 0.5 * ((t -= 2) * t * t * t * t + 2);\n    },\n    easeInSine: function easeInSine(t) {\n      return -Math.cos(t * (Math.PI / 2)) + 1;\n    },\n    easeOutSine: function easeOutSine(t) {\n      return Math.sin(t * (Math.PI / 2));\n    },\n    easeInOutSine: function easeInOutSine(t) {\n      return -0.5 * (Math.cos(Math.PI * t) - 1);\n    },\n    easeInExpo: function easeInExpo(t) {\n      return t === 0 ? 0 : Math.pow(2, 10 * (t - 1));\n    },\n    easeOutExpo: function easeOutExpo(t) {\n      return t === 1 ? 1 : -Math.pow(2, -10 * t) + 1;\n    },\n    easeInOutExpo: function easeInOutExpo(t) {\n      if (t === 0) {\n        return 0;\n      }\n\n      if (t === 1) {\n        return 1;\n      }\n\n      if ((t /= 0.5) < 1) {\n        return 0.5 * Math.pow(2, 10 * (t - 1));\n      }\n\n      return 0.5 * (-Math.pow(2, -10 * --t) + 2);\n    },\n    easeInCirc: function easeInCirc(t) {\n      if (t >= 1) {\n        return t;\n      }\n\n      return -(Math.sqrt(1 - t * t) - 1);\n    },\n    easeOutCirc: function easeOutCirc(t) {\n      return Math.sqrt(1 - (t = t - 1) * t);\n    },\n    easeInOutCirc: function easeInOutCirc(t) {\n      if ((t /= 0.5) < 1) {\n        return -0.5 * (Math.sqrt(1 - t * t) - 1);\n      }\n\n      return 0.5 * (Math.sqrt(1 - (t -= 2) * t) + 1);\n    },\n    easeInElastic: function easeInElastic(t) {\n      var s = 1.70158;\n      var p = 0;\n      var a = 1;\n\n      if (t === 0) {\n        return 0;\n      }\n\n      if (t === 1) {\n        return 1;\n      }\n\n      if (!p) {\n        p = 0.3;\n      }\n\n      if (a < 1) {\n        a = 1;\n        s = p / 4;\n      } else {\n        s = p / (2 * Math.PI) * Math.asin(1 / a);\n      }\n\n      return -(a * Math.pow(2, 10 * (t -= 1)) * Math.sin((t - s) * (2 * Math.PI) / p));\n    },\n    easeOutElastic: function easeOutElastic(t) {\n      var s = 1.70158;\n      var p = 0;\n      var a = 1;\n\n      if (t === 0) {\n        return 0;\n      }\n\n      if (t === 1) {\n        return 1;\n      }\n\n      if (!p) {\n        p = 0.3;\n      }\n\n      if (a < 1) {\n        a = 1;\n        s = p / 4;\n      } else {\n        s = p / (2 * Math.PI) * Math.asin(1 / a);\n      }\n\n      return a * Math.pow(2, -10 * t) * Math.sin((t - s) * (2 * Math.PI) / p) + 1;\n    },\n    easeInOutElastic: function easeInOutElastic(t) {\n      var s = 1.70158;\n      var p = 0;\n      var a = 1;\n\n      if (t === 0) {\n        return 0;\n      }\n\n      if ((t /= 0.5) === 2) {\n        return 1;\n      }\n\n      if (!p) {\n        p = 0.45;\n      }\n\n      if (a < 1) {\n        a = 1;\n        s = p / 4;\n      } else {\n        s = p / (2 * Math.PI) * Math.asin(1 / a);\n      }\n\n      if (t < 1) {\n        return -0.5 * (a * Math.pow(2, 10 * (t -= 1)) * Math.sin((t - s) * (2 * Math.PI) / p));\n      }\n\n      return a * Math.pow(2, -10 * (t -= 1)) * Math.sin((t - s) * (2 * Math.PI) / p) * 0.5 + 1;\n    },\n    easeInBack: function easeInBack(t) {\n      var s = 1.70158;\n      return t * t * ((s + 1) * t - s);\n    },\n    easeOutBack: function easeOutBack(t) {\n      var s = 1.70158;\n      return (t = t - 1) * t * ((s + 1) * t + s) + 1;\n    },\n    easeInOutBack: function easeInOutBack(t) {\n      var s = 1.70158;\n\n      if ((t /= 0.5) < 1) {\n        return 0.5 * (t * t * (((s *= 1.525) + 1) * t - s));\n      }\n\n      return 0.5 * ((t -= 2) * t * (((s *= 1.525) + 1) * t + s) + 2);\n    },\n    easeInBounce: function easeInBounce(t) {\n      return 1 - effects.easeOutBounce(1 - t);\n    },\n    easeOutBounce: function easeOutBounce(t) {\n      if (t < 1 / 2.75) {\n        return 7.5625 * t * t;\n      }\n\n      if (t < 2 / 2.75) {\n        return 7.5625 * (t -= 1.5 / 2.75) * t + 0.75;\n      }\n\n      if (t < 2.5 / 2.75) {\n        return 7.5625 * (t -= 2.25 / 2.75) * t + 0.9375;\n      }\n\n      return 7.5625 * (t -= 2.625 / 2.75) * t + 0.984375;\n    },\n    easeInOutBounce: function easeInOutBounce(t) {\n      if (t < 0.5) {\n        return effects.easeInBounce(t * 2) * 0.5;\n      }\n\n      return effects.easeOutBounce(t * 2 - 1) * 0.5 + 0.5;\n    }\n  };\n  var helpers_easing = {\n    effects: effects\n  }; // DEPRECATIONS\n\n  /**\n   * Provided for backward compatibility, use Chart.helpers.easing.effects instead.\n   * @function Chart.helpers.easingEffects\n   * @deprecated since version 2.7.0\n   * @todo remove at version 3\n   * @private\n   */\n\n  helpers_core.easingEffects = effects;\n  var PI = Math.PI;\n  var RAD_PER_DEG = PI / 180;\n  var DOUBLE_PI = PI * 2;\n  var HALF_PI = PI / 2;\n  var QUARTER_PI = PI / 4;\n  var TWO_THIRDS_PI = PI * 2 / 3;\n  /**\n   * @namespace Chart.helpers.canvas\n   */\n\n  var exports$1 = {\n    /**\n     * Clears the entire canvas associated to the given `chart`.\n     * @param {Chart} chart - The chart for which to clear the canvas.\n     */\n    clear: function clear(chart) {\n      chart.ctx.clearRect(0, 0, chart.width, chart.height);\n    },\n\n    /**\n     * Creates a \"path\" for a rectangle with rounded corners at position (x, y) with a\n     * given size (width, height) and the same `radius` for all corners.\n     * @param {CanvasRenderingContext2D} ctx - The canvas 2D Context.\n     * @param {number} x - The x axis of the coordinate for the rectangle starting point.\n     * @param {number} y - The y axis of the coordinate for the rectangle starting point.\n     * @param {number} width - The rectangle's width.\n     * @param {number} height - The rectangle's height.\n     * @param {number} radius - The rounded amount (in pixels) for the four corners.\n     * @todo handle `radius` as top-left, top-right, bottom-right, bottom-left array/object?\n     */\n    roundedRect: function roundedRect(ctx, x, y, width, height, radius) {\n      if (radius) {\n        var r = Math.min(radius, height / 2, width / 2);\n        var left = x + r;\n        var top = y + r;\n        var right = x + width - r;\n        var bottom = y + height - r;\n        ctx.moveTo(x, top);\n\n        if (left < right && top < bottom) {\n          ctx.arc(left, top, r, -PI, -HALF_PI);\n          ctx.arc(right, top, r, -HALF_PI, 0);\n          ctx.arc(right, bottom, r, 0, HALF_PI);\n          ctx.arc(left, bottom, r, HALF_PI, PI);\n        } else if (left < right) {\n          ctx.moveTo(left, y);\n          ctx.arc(right, top, r, -HALF_PI, HALF_PI);\n          ctx.arc(left, top, r, HALF_PI, PI + HALF_PI);\n        } else if (top < bottom) {\n          ctx.arc(left, top, r, -PI, 0);\n          ctx.arc(left, bottom, r, 0, PI);\n        } else {\n          ctx.arc(left, top, r, -PI, PI);\n        }\n\n        ctx.closePath();\n        ctx.moveTo(x, y);\n      } else {\n        ctx.rect(x, y, width, height);\n      }\n    },\n    drawPoint: function drawPoint(ctx, style, radius, x, y, rotation) {\n      var type, xOffset, yOffset, size, cornerRadius;\n      var rad = (rotation || 0) * RAD_PER_DEG;\n\n      if (style && typeof style === 'object') {\n        type = style.toString();\n\n        if (type === '[object HTMLImageElement]' || type === '[object HTMLCanvasElement]') {\n          ctx.drawImage(style, x - style.width / 2, y - style.height / 2, style.width, style.height);\n          return;\n        }\n      }\n\n      if (isNaN(radius) || radius <= 0) {\n        return;\n      }\n\n      ctx.beginPath();\n\n      switch (style) {\n        // Default includes circle\n        default:\n          ctx.arc(x, y, radius, 0, DOUBLE_PI);\n          ctx.closePath();\n          break;\n\n        case 'triangle':\n          ctx.moveTo(x + Math.sin(rad) * radius, y - Math.cos(rad) * radius);\n          rad += TWO_THIRDS_PI;\n          ctx.lineTo(x + Math.sin(rad) * radius, y - Math.cos(rad) * radius);\n          rad += TWO_THIRDS_PI;\n          ctx.lineTo(x + Math.sin(rad) * radius, y - Math.cos(rad) * radius);\n          ctx.closePath();\n          break;\n\n        case 'rectRounded':\n          // NOTE: the rounded rect implementation changed to use `arc` instead of\n          // `quadraticCurveTo` since it generates better results when rect is\n          // almost a circle. 0.516 (instead of 0.5) produces results with visually\n          // closer proportion to the previous impl and it is inscribed in the\n          // circle with `radius`. For more details, see the following PRs:\n          // https://github.com/chartjs/Chart.js/issues/5597\n          // https://github.com/chartjs/Chart.js/issues/5858\n          cornerRadius = radius * 0.516;\n          size = radius - cornerRadius;\n          xOffset = Math.cos(rad + QUARTER_PI) * size;\n          yOffset = Math.sin(rad + QUARTER_PI) * size;\n          ctx.arc(x - xOffset, y - yOffset, cornerRadius, rad - PI, rad - HALF_PI);\n          ctx.arc(x + yOffset, y - xOffset, cornerRadius, rad - HALF_PI, rad);\n          ctx.arc(x + xOffset, y + yOffset, cornerRadius, rad, rad + HALF_PI);\n          ctx.arc(x - yOffset, y + xOffset, cornerRadius, rad + HALF_PI, rad + PI);\n          ctx.closePath();\n          break;\n\n        case 'rect':\n          if (!rotation) {\n            size = Math.SQRT1_2 * radius;\n            ctx.rect(x - size, y - size, 2 * size, 2 * size);\n            break;\n          }\n\n          rad += QUARTER_PI;\n\n        /* falls through */\n\n        case 'rectRot':\n          xOffset = Math.cos(rad) * radius;\n          yOffset = Math.sin(rad) * radius;\n          ctx.moveTo(x - xOffset, y - yOffset);\n          ctx.lineTo(x + yOffset, y - xOffset);\n          ctx.lineTo(x + xOffset, y + yOffset);\n          ctx.lineTo(x - yOffset, y + xOffset);\n          ctx.closePath();\n          break;\n\n        case 'crossRot':\n          rad += QUARTER_PI;\n\n        /* falls through */\n\n        case 'cross':\n          xOffset = Math.cos(rad) * radius;\n          yOffset = Math.sin(rad) * radius;\n          ctx.moveTo(x - xOffset, y - yOffset);\n          ctx.lineTo(x + xOffset, y + yOffset);\n          ctx.moveTo(x + yOffset, y - xOffset);\n          ctx.lineTo(x - yOffset, y + xOffset);\n          break;\n\n        case 'star':\n          xOffset = Math.cos(rad) * radius;\n          yOffset = Math.sin(rad) * radius;\n          ctx.moveTo(x - xOffset, y - yOffset);\n          ctx.lineTo(x + xOffset, y + yOffset);\n          ctx.moveTo(x + yOffset, y - xOffset);\n          ctx.lineTo(x - yOffset, y + xOffset);\n          rad += QUARTER_PI;\n          xOffset = Math.cos(rad) * radius;\n          yOffset = Math.sin(rad) * radius;\n          ctx.moveTo(x - xOffset, y - yOffset);\n          ctx.lineTo(x + xOffset, y + yOffset);\n          ctx.moveTo(x + yOffset, y - xOffset);\n          ctx.lineTo(x - yOffset, y + xOffset);\n          break;\n\n        case 'line':\n          xOffset = Math.cos(rad) * radius;\n          yOffset = Math.sin(rad) * radius;\n          ctx.moveTo(x - xOffset, y - yOffset);\n          ctx.lineTo(x + xOffset, y + yOffset);\n          break;\n\n        case 'dash':\n          ctx.moveTo(x, y);\n          ctx.lineTo(x + Math.cos(rad) * radius, y + Math.sin(rad) * radius);\n          break;\n      }\n\n      ctx.fill();\n      ctx.stroke();\n    },\n\n    /**\n     * Returns true if the point is inside the rectangle\n     * @param {object} point - The point to test\n     * @param {object} area - The rectangle\n     * @returns {boolean}\n     * @private\n     */\n    _isPointInArea: function _isPointInArea(point, area) {\n      var epsilon = 1e-6; // 1e-6 is margin in pixels for accumulated error.\n\n      return point.x > area.left - epsilon && point.x < area.right + epsilon && point.y > area.top - epsilon && point.y < area.bottom + epsilon;\n    },\n    clipArea: function clipArea(ctx, area) {\n      ctx.save();\n      ctx.beginPath();\n      ctx.rect(area.left, area.top, area.right - area.left, area.bottom - area.top);\n      ctx.clip();\n    },\n    unclipArea: function unclipArea(ctx) {\n      ctx.restore();\n    },\n    lineTo: function lineTo(ctx, previous, target, flip) {\n      var stepped = target.steppedLine;\n\n      if (stepped) {\n        if (stepped === 'middle') {\n          var midpoint = (previous.x + target.x) / 2.0;\n          ctx.lineTo(midpoint, flip ? target.y : previous.y);\n          ctx.lineTo(midpoint, flip ? previous.y : target.y);\n        } else if (stepped === 'after' && !flip || stepped !== 'after' && flip) {\n          ctx.lineTo(previous.x, target.y);\n        } else {\n          ctx.lineTo(target.x, previous.y);\n        }\n\n        ctx.lineTo(target.x, target.y);\n        return;\n      }\n\n      if (!target.tension) {\n        ctx.lineTo(target.x, target.y);\n        return;\n      }\n\n      ctx.bezierCurveTo(flip ? previous.controlPointPreviousX : previous.controlPointNextX, flip ? previous.controlPointPreviousY : previous.controlPointNextY, flip ? target.controlPointNextX : target.controlPointPreviousX, flip ? target.controlPointNextY : target.controlPointPreviousY, target.x, target.y);\n    }\n  };\n  var helpers_canvas = exports$1; // DEPRECATIONS\n\n  /**\n   * Provided for backward compatibility, use Chart.helpers.canvas.clear instead.\n   * @namespace Chart.helpers.clear\n   * @deprecated since version 2.7.0\n   * @todo remove at version 3\n   * @private\n   */\n\n  helpers_core.clear = exports$1.clear;\n  /**\n   * Provided for backward compatibility, use Chart.helpers.canvas.roundedRect instead.\n   * @namespace Chart.helpers.drawRoundedRectangle\n   * @deprecated since version 2.7.0\n   * @todo remove at version 3\n   * @private\n   */\n\n  helpers_core.drawRoundedRectangle = function (ctx) {\n    ctx.beginPath();\n    exports$1.roundedRect.apply(exports$1, arguments);\n  };\n\n  var defaults = {\n    /**\n     * @private\n     */\n    _set: function _set(scope, values) {\n      return helpers_core.merge(this[scope] || (this[scope] = {}), values);\n    }\n  };\n\n  defaults._set('global', {\n    defaultColor: 'rgba(0,0,0,0.1)',\n    defaultFontColor: '#666',\n    defaultFontFamily: \"'Helvetica Neue', 'Helvetica', 'Arial', sans-serif\",\n    defaultFontSize: 12,\n    defaultFontStyle: 'normal',\n    defaultLineHeight: 1.2,\n    showLines: true\n  });\n\n  var core_defaults = defaults;\n  var valueOrDefault = helpers_core.valueOrDefault;\n  /**\n   * Converts the given font object into a CSS font string.\n   * @param {object} font - A font object.\n   * @return {string} The CSS font string. See https://developer.mozilla.org/en-US/docs/Web/CSS/font\n   * @private\n   */\n\n  function toFontString(font) {\n    if (!font || helpers_core.isNullOrUndef(font.size) || helpers_core.isNullOrUndef(font.family)) {\n      return null;\n    }\n\n    return (font.style ? font.style + ' ' : '') + (font.weight ? font.weight + ' ' : '') + font.size + 'px ' + font.family;\n  }\n  /**\n   * @alias Chart.helpers.options\n   * @namespace\n   */\n\n\n  var helpers_options = {\n    /**\n     * Converts the given line height `value` in pixels for a specific font `size`.\n     * @param {number|string} value - The lineHeight to parse (eg. 1.6, '14px', '75%', '1.6em').\n     * @param {number} size - The font size (in pixels) used to resolve relative `value`.\n     * @returns {number} The effective line height in pixels (size * 1.2 if value is invalid).\n     * @see https://developer.mozilla.org/en-US/docs/Web/CSS/line-height\n     * @since 2.7.0\n     */\n    toLineHeight: function toLineHeight(value, size) {\n      var matches = ('' + value).match(/^(normal|(\\d+(?:\\.\\d+)?)(px|em|%)?)$/);\n\n      if (!matches || matches[1] === 'normal') {\n        return size * 1.2;\n      }\n\n      value = +matches[2];\n\n      switch (matches[3]) {\n        case 'px':\n          return value;\n\n        case '%':\n          value /= 100;\n          break;\n\n        default:\n          break;\n      }\n\n      return size * value;\n    },\n\n    /**\n     * Converts the given value into a padding object with pre-computed width/height.\n     * @param {number|object} value - If a number, set the value to all TRBL component,\n     *  else, if and object, use defined properties and sets undefined ones to 0.\n     * @returns {object} The padding values (top, right, bottom, left, width, height)\n     * @since 2.7.0\n     */\n    toPadding: function toPadding(value) {\n      var t, r, b, l;\n\n      if (helpers_core.isObject(value)) {\n        t = +value.top || 0;\n        r = +value.right || 0;\n        b = +value.bottom || 0;\n        l = +value.left || 0;\n      } else {\n        t = r = b = l = +value || 0;\n      }\n\n      return {\n        top: t,\n        right: r,\n        bottom: b,\n        left: l,\n        height: t + b,\n        width: l + r\n      };\n    },\n\n    /**\n     * Parses font options and returns the font object.\n     * @param {object} options - A object that contains font options to be parsed.\n     * @return {object} The font object.\n     * @todo Support font.* options and renamed to toFont().\n     * @private\n     */\n    _parseFont: function _parseFont(options) {\n      var globalDefaults = core_defaults.global;\n      var size = valueOrDefault(options.fontSize, globalDefaults.defaultFontSize);\n      var font = {\n        family: valueOrDefault(options.fontFamily, globalDefaults.defaultFontFamily),\n        lineHeight: helpers_core.options.toLineHeight(valueOrDefault(options.lineHeight, globalDefaults.defaultLineHeight), size),\n        size: size,\n        style: valueOrDefault(options.fontStyle, globalDefaults.defaultFontStyle),\n        weight: null,\n        string: ''\n      };\n      font.string = toFontString(font);\n      return font;\n    },\n\n    /**\n     * Evaluates the given `inputs` sequentially and returns the first defined value.\n     * @param {Array} inputs - An array of values, falling back to the last value.\n     * @param {object} [context] - If defined and the current value is a function, the value\n     * is called with `context` as first argument and the result becomes the new input.\n     * @param {number} [index] - If defined and the current value is an array, the value\n     * at `index` become the new input.\n     * @since 2.7.0\n     */\n    resolve: function resolve(inputs, context, index) {\n      var i, ilen, value;\n\n      for (i = 0, ilen = inputs.length; i < ilen; ++i) {\n        value = inputs[i];\n\n        if (value === undefined) {\n          continue;\n        }\n\n        if (context !== undefined && typeof value === 'function') {\n          value = value(context);\n        }\n\n        if (index !== undefined && helpers_core.isArray(value)) {\n          value = value[index];\n        }\n\n        if (value !== undefined) {\n          return value;\n        }\n      }\n    }\n  };\n  var helpers$1 = helpers_core;\n  var easing = helpers_easing;\n  var canvas = helpers_canvas;\n  var options = helpers_options;\n  helpers$1.easing = easing;\n  helpers$1.canvas = canvas;\n  helpers$1.options = options;\n\n  function interpolate(start, view, model, ease) {\n    var keys = Object.keys(model);\n    var i, ilen, key, actual, origin, target, type, c0, c1;\n\n    for (i = 0, ilen = keys.length; i < ilen; ++i) {\n      key = keys[i];\n      target = model[key]; // if a value is added to the model after pivot() has been called, the view\n      // doesn't contain it, so let's initialize the view to the target value.\n\n      if (!view.hasOwnProperty(key)) {\n        view[key] = target;\n      }\n\n      actual = view[key];\n\n      if (actual === target || key[0] === '_') {\n        continue;\n      }\n\n      if (!start.hasOwnProperty(key)) {\n        start[key] = actual;\n      }\n\n      origin = start[key];\n      type = typeof target;\n\n      if (type === typeof origin) {\n        if (type === 'string') {\n          c0 = chartjsColor(origin);\n\n          if (c0.valid) {\n            c1 = chartjsColor(target);\n\n            if (c1.valid) {\n              view[key] = c1.mix(c0, ease).rgbString();\n              continue;\n            }\n          }\n        } else if (helpers$1.isFinite(origin) && helpers$1.isFinite(target)) {\n          view[key] = origin + (target - origin) * ease;\n          continue;\n        }\n      }\n\n      view[key] = target;\n    }\n  }\n\n  var Element = function Element(configuration) {\n    helpers$1.extend(this, configuration);\n    this.initialize.apply(this, arguments);\n  };\n\n  helpers$1.extend(Element.prototype, {\n    initialize: function initialize() {\n      this.hidden = false;\n    },\n    pivot: function pivot() {\n      var me = this;\n\n      if (!me._view) {\n        me._view = helpers$1.clone(me._model);\n      }\n\n      me._start = {};\n      return me;\n    },\n    transition: function transition(ease) {\n      var me = this;\n      var model = me._model;\n      var start = me._start;\n      var view = me._view; // No animation -> No Transition\n\n      if (!model || ease === 1) {\n        me._view = model;\n        me._start = null;\n        return me;\n      }\n\n      if (!view) {\n        view = me._view = {};\n      }\n\n      if (!start) {\n        start = me._start = {};\n      }\n\n      interpolate(start, view, model, ease);\n      return me;\n    },\n    tooltipPosition: function tooltipPosition() {\n      return {\n        x: this._model.x,\n        y: this._model.y\n      };\n    },\n    hasValue: function hasValue() {\n      return helpers$1.isNumber(this._model.x) && helpers$1.isNumber(this._model.y);\n    }\n  });\n  Element.extend = helpers$1.inherits;\n  var core_element = Element;\n  var exports$2 = core_element.extend({\n    chart: null,\n    // the animation associated chart instance\n    currentStep: 0,\n    // the current animation step\n    numSteps: 60,\n    // default number of steps\n    easing: '',\n    // the easing to use for this animation\n    render: null,\n    // render function used by the animation service\n    onAnimationProgress: null,\n    // user specified callback to fire on each step of the animation\n    onAnimationComplete: null // user specified callback to fire when the animation finishes\n\n  });\n  var core_animation = exports$2; // DEPRECATIONS\n\n  /**\n   * Provided for backward compatibility, use Chart.Animation instead\n   * @prop Chart.Animation#animationObject\n   * @deprecated since version 2.6.0\n   * @todo remove at version 3\n   */\n\n  Object.defineProperty(exports$2.prototype, 'animationObject', {\n    get: function get() {\n      return this;\n    }\n  });\n  /**\n   * Provided for backward compatibility, use Chart.Animation#chart instead\n   * @prop Chart.Animation#chartInstance\n   * @deprecated since version 2.6.0\n   * @todo remove at version 3\n   */\n\n  Object.defineProperty(exports$2.prototype, 'chartInstance', {\n    get: function get() {\n      return this.chart;\n    },\n    set: function set(value) {\n      this.chart = value;\n    }\n  });\n\n  core_defaults._set('global', {\n    animation: {\n      duration: 1000,\n      easing: 'easeOutQuart',\n      onProgress: helpers$1.noop,\n      onComplete: helpers$1.noop\n    }\n  });\n\n  var core_animations = {\n    animations: [],\n    request: null,\n\n    /**\n     * @param {Chart} chart - The chart to animate.\n     * @param {Chart.Animation} animation - The animation that we will animate.\n     * @param {number} duration - The animation duration in ms.\n     * @param {boolean} lazy - if true, the chart is not marked as animating to enable more responsive interactions\n     */\n    addAnimation: function addAnimation(chart, animation, duration, lazy) {\n      var animations = this.animations;\n      var i, ilen;\n      animation.chart = chart;\n      animation.startTime = Date.now();\n      animation.duration = duration;\n\n      if (!lazy) {\n        chart.animating = true;\n      }\n\n      for (i = 0, ilen = animations.length; i < ilen; ++i) {\n        if (animations[i].chart === chart) {\n          animations[i] = animation;\n          return;\n        }\n      }\n\n      animations.push(animation); // If there are no animations queued, manually kickstart a digest, for lack of a better word\n\n      if (animations.length === 1) {\n        this.requestAnimationFrame();\n      }\n    },\n    cancelAnimation: function cancelAnimation(chart) {\n      var index = helpers$1.findIndex(this.animations, function (animation) {\n        return animation.chart === chart;\n      });\n\n      if (index !== -1) {\n        this.animations.splice(index, 1);\n        chart.animating = false;\n      }\n    },\n    requestAnimationFrame: function requestAnimationFrame() {\n      var me = this;\n\n      if (me.request === null) {\n        // Skip animation frame requests until the active one is executed.\n        // This can happen when processing mouse events, e.g. 'mousemove'\n        // and 'mouseout' events will trigger multiple renders.\n        me.request = helpers$1.requestAnimFrame.call(window, function () {\n          me.request = null;\n          me.startDigest();\n        });\n      }\n    },\n\n    /**\n     * @private\n     */\n    startDigest: function startDigest() {\n      var me = this;\n      me.advance(); // Do we have more stuff to animate?\n\n      if (me.animations.length > 0) {\n        me.requestAnimationFrame();\n      }\n    },\n\n    /**\n     * @private\n     */\n    advance: function advance() {\n      var animations = this.animations;\n      var animation, chart, numSteps, nextStep;\n      var i = 0; // 1 animation per chart, so we are looping charts here\n\n      while (i < animations.length) {\n        animation = animations[i];\n        chart = animation.chart;\n        numSteps = animation.numSteps; // Make sure that currentStep starts at 1\n        // https://github.com/chartjs/Chart.js/issues/6104\n\n        nextStep = Math.floor((Date.now() - animation.startTime) / animation.duration * numSteps) + 1;\n        animation.currentStep = Math.min(nextStep, numSteps);\n        helpers$1.callback(animation.render, [chart, animation], chart);\n        helpers$1.callback(animation.onAnimationProgress, [animation], chart);\n\n        if (animation.currentStep >= numSteps) {\n          helpers$1.callback(animation.onAnimationComplete, [animation], chart);\n          chart.animating = false;\n          animations.splice(i, 1);\n        } else {\n          ++i;\n        }\n      }\n    }\n  };\n  var resolve = helpers$1.options.resolve;\n  var arrayEvents = ['push', 'pop', 'shift', 'splice', 'unshift'];\n  /**\n   * Hooks the array methods that add or remove values ('push', pop', 'shift', 'splice',\n   * 'unshift') and notify the listener AFTER the array has been altered. Listeners are\n   * called on the 'onData*' callbacks (e.g. onDataPush, etc.) with same arguments.\n   */\n\n  function listenArrayEvents(array, listener) {\n    if (array._chartjs) {\n      array._chartjs.listeners.push(listener);\n\n      return;\n    }\n\n    Object.defineProperty(array, '_chartjs', {\n      configurable: true,\n      enumerable: false,\n      value: {\n        listeners: [listener]\n      }\n    });\n    arrayEvents.forEach(function (key) {\n      var method = 'onData' + key.charAt(0).toUpperCase() + key.slice(1);\n      var base = array[key];\n      Object.defineProperty(array, key, {\n        configurable: true,\n        enumerable: false,\n        value: function value() {\n          var args = Array.prototype.slice.call(arguments);\n          var res = base.apply(this, args);\n          helpers$1.each(array._chartjs.listeners, function (object) {\n            if (typeof object[method] === 'function') {\n              object[method].apply(object, args);\n            }\n          });\n          return res;\n        }\n      });\n    });\n  }\n  /**\n   * Removes the given array event listener and cleanup extra attached properties (such as\n   * the _chartjs stub and overridden methods) if array doesn't have any more listeners.\n   */\n\n\n  function unlistenArrayEvents(array, listener) {\n    var stub = array._chartjs;\n\n    if (!stub) {\n      return;\n    }\n\n    var listeners = stub.listeners;\n    var index = listeners.indexOf(listener);\n\n    if (index !== -1) {\n      listeners.splice(index, 1);\n    }\n\n    if (listeners.length > 0) {\n      return;\n    }\n\n    arrayEvents.forEach(function (key) {\n      delete array[key];\n    });\n    delete array._chartjs;\n  } // Base class for all dataset controllers (line, bar, etc)\n\n\n  var DatasetController = function DatasetController(chart, datasetIndex) {\n    this.initialize(chart, datasetIndex);\n  };\n\n  helpers$1.extend(DatasetController.prototype, {\n    /**\n     * Element type used to generate a meta dataset (e.g. Chart.element.Line).\n     * @type {Chart.core.element}\n     */\n    datasetElementType: null,\n\n    /**\n     * Element type used to generate a meta data (e.g. Chart.element.Point).\n     * @type {Chart.core.element}\n     */\n    dataElementType: null,\n    initialize: function initialize(chart, datasetIndex) {\n      var me = this;\n      me.chart = chart;\n      me.index = datasetIndex;\n      me.linkScales();\n      me.addElements();\n    },\n    updateIndex: function updateIndex(datasetIndex) {\n      this.index = datasetIndex;\n    },\n    linkScales: function linkScales() {\n      var me = this;\n      var meta = me.getMeta();\n      var dataset = me.getDataset();\n\n      if (meta.xAxisID === null || !(meta.xAxisID in me.chart.scales)) {\n        meta.xAxisID = dataset.xAxisID || me.chart.options.scales.xAxes[0].id;\n      }\n\n      if (meta.yAxisID === null || !(meta.yAxisID in me.chart.scales)) {\n        meta.yAxisID = dataset.yAxisID || me.chart.options.scales.yAxes[0].id;\n      }\n    },\n    getDataset: function getDataset() {\n      return this.chart.data.datasets[this.index];\n    },\n    getMeta: function getMeta() {\n      return this.chart.getDatasetMeta(this.index);\n    },\n    getScaleForId: function getScaleForId(scaleID) {\n      return this.chart.scales[scaleID];\n    },\n\n    /**\n     * @private\n     */\n    _getValueScaleId: function _getValueScaleId() {\n      return this.getMeta().yAxisID;\n    },\n\n    /**\n     * @private\n     */\n    _getIndexScaleId: function _getIndexScaleId() {\n      return this.getMeta().xAxisID;\n    },\n\n    /**\n     * @private\n     */\n    _getValueScale: function _getValueScale() {\n      return this.getScaleForId(this._getValueScaleId());\n    },\n\n    /**\n     * @private\n     */\n    _getIndexScale: function _getIndexScale() {\n      return this.getScaleForId(this._getIndexScaleId());\n    },\n    reset: function reset() {\n      this.update(true);\n    },\n\n    /**\n     * @private\n     */\n    destroy: function destroy() {\n      if (this._data) {\n        unlistenArrayEvents(this._data, this);\n      }\n    },\n    createMetaDataset: function createMetaDataset() {\n      var me = this;\n      var type = me.datasetElementType;\n      return type && new type({\n        _chart: me.chart,\n        _datasetIndex: me.index\n      });\n    },\n    createMetaData: function createMetaData(index) {\n      var me = this;\n      var type = me.dataElementType;\n      return type && new type({\n        _chart: me.chart,\n        _datasetIndex: me.index,\n        _index: index\n      });\n    },\n    addElements: function addElements() {\n      var me = this;\n      var meta = me.getMeta();\n      var data = me.getDataset().data || [];\n      var metaData = meta.data;\n      var i, ilen;\n\n      for (i = 0, ilen = data.length; i < ilen; ++i) {\n        metaData[i] = metaData[i] || me.createMetaData(i);\n      }\n\n      meta.dataset = meta.dataset || me.createMetaDataset();\n    },\n    addElementAndReset: function addElementAndReset(index) {\n      var element = this.createMetaData(index);\n      this.getMeta().data.splice(index, 0, element);\n      this.updateElement(element, index, true);\n    },\n    buildOrUpdateElements: function buildOrUpdateElements() {\n      var me = this;\n      var dataset = me.getDataset();\n      var data = dataset.data || (dataset.data = []); // In order to correctly handle data addition/deletion animation (an thus simulate\n      // real-time charts), we need to monitor these data modifications and synchronize\n      // the internal meta data accordingly.\n\n      if (me._data !== data) {\n        if (me._data) {\n          // This case happens when the user replaced the data array instance.\n          unlistenArrayEvents(me._data, me);\n        }\n\n        if (data && Object.isExtensible(data)) {\n          listenArrayEvents(data, me);\n        }\n\n        me._data = data;\n      } // Re-sync meta data in case the user replaced the data array or if we missed\n      // any updates and so make sure that we handle number of datapoints changing.\n\n\n      me.resyncElements();\n    },\n    update: helpers$1.noop,\n    transition: function transition(easingValue) {\n      var meta = this.getMeta();\n      var elements = meta.data || [];\n      var ilen = elements.length;\n      var i = 0;\n\n      for (; i < ilen; ++i) {\n        elements[i].transition(easingValue);\n      }\n\n      if (meta.dataset) {\n        meta.dataset.transition(easingValue);\n      }\n    },\n    draw: function draw() {\n      var meta = this.getMeta();\n      var elements = meta.data || [];\n      var ilen = elements.length;\n      var i = 0;\n\n      if (meta.dataset) {\n        meta.dataset.draw();\n      }\n\n      for (; i < ilen; ++i) {\n        elements[i].draw();\n      }\n    },\n    removeHoverStyle: function removeHoverStyle(element) {\n      helpers$1.merge(element._model, element.$previousStyle || {});\n      delete element.$previousStyle;\n    },\n    setHoverStyle: function setHoverStyle(element) {\n      var dataset = this.chart.data.datasets[element._datasetIndex];\n      var index = element._index;\n      var custom = element.custom || {};\n      var model = element._model;\n      var getHoverColor = helpers$1.getHoverColor;\n      element.$previousStyle = {\n        backgroundColor: model.backgroundColor,\n        borderColor: model.borderColor,\n        borderWidth: model.borderWidth\n      };\n      model.backgroundColor = resolve([custom.hoverBackgroundColor, dataset.hoverBackgroundColor, getHoverColor(model.backgroundColor)], undefined, index);\n      model.borderColor = resolve([custom.hoverBorderColor, dataset.hoverBorderColor, getHoverColor(model.borderColor)], undefined, index);\n      model.borderWidth = resolve([custom.hoverBorderWidth, dataset.hoverBorderWidth, model.borderWidth], undefined, index);\n    },\n\n    /**\n     * @private\n     */\n    resyncElements: function resyncElements() {\n      var me = this;\n      var meta = me.getMeta();\n      var data = me.getDataset().data;\n      var numMeta = meta.data.length;\n      var numData = data.length;\n\n      if (numData < numMeta) {\n        meta.data.splice(numData, numMeta - numData);\n      } else if (numData > numMeta) {\n        me.insertElements(numMeta, numData - numMeta);\n      }\n    },\n\n    /**\n     * @private\n     */\n    insertElements: function insertElements(start, count) {\n      for (var i = 0; i < count; ++i) {\n        this.addElementAndReset(start + i);\n      }\n    },\n\n    /**\n     * @private\n     */\n    onDataPush: function onDataPush() {\n      var count = arguments.length;\n      this.insertElements(this.getDataset().data.length - count, count);\n    },\n\n    /**\n     * @private\n     */\n    onDataPop: function onDataPop() {\n      this.getMeta().data.pop();\n    },\n\n    /**\n     * @private\n     */\n    onDataShift: function onDataShift() {\n      this.getMeta().data.shift();\n    },\n\n    /**\n     * @private\n     */\n    onDataSplice: function onDataSplice(start, count) {\n      this.getMeta().data.splice(start, count);\n      this.insertElements(start, arguments.length - 2);\n    },\n\n    /**\n     * @private\n     */\n    onDataUnshift: function onDataUnshift() {\n      this.insertElements(0, arguments.length);\n    }\n  });\n  DatasetController.extend = helpers$1.inherits;\n  var core_datasetController = DatasetController;\n\n  core_defaults._set('global', {\n    elements: {\n      arc: {\n        backgroundColor: core_defaults.global.defaultColor,\n        borderColor: '#fff',\n        borderWidth: 2,\n        borderAlign: 'center'\n      }\n    }\n  });\n\n  var element_arc = core_element.extend({\n    inLabelRange: function inLabelRange(mouseX) {\n      var vm = this._view;\n\n      if (vm) {\n        return Math.pow(mouseX - vm.x, 2) < Math.pow(vm.radius + vm.hoverRadius, 2);\n      }\n\n      return false;\n    },\n    inRange: function inRange(chartX, chartY) {\n      var vm = this._view;\n\n      if (vm) {\n        var pointRelativePosition = helpers$1.getAngleFromPoint(vm, {\n          x: chartX,\n          y: chartY\n        });\n        var angle = pointRelativePosition.angle;\n        var distance = pointRelativePosition.distance; // Sanitise angle range\n\n        var startAngle = vm.startAngle;\n        var endAngle = vm.endAngle;\n\n        while (endAngle < startAngle) {\n          endAngle += 2.0 * Math.PI;\n        }\n\n        while (angle > endAngle) {\n          angle -= 2.0 * Math.PI;\n        }\n\n        while (angle < startAngle) {\n          angle += 2.0 * Math.PI;\n        } // Check if within the range of the open/close angle\n\n\n        var betweenAngles = angle >= startAngle && angle <= endAngle;\n        var withinRadius = distance >= vm.innerRadius && distance <= vm.outerRadius;\n        return betweenAngles && withinRadius;\n      }\n\n      return false;\n    },\n    getCenterPoint: function getCenterPoint() {\n      var vm = this._view;\n      var halfAngle = (vm.startAngle + vm.endAngle) / 2;\n      var halfRadius = (vm.innerRadius + vm.outerRadius) / 2;\n      return {\n        x: vm.x + Math.cos(halfAngle) * halfRadius,\n        y: vm.y + Math.sin(halfAngle) * halfRadius\n      };\n    },\n    getArea: function getArea() {\n      var vm = this._view;\n      return Math.PI * ((vm.endAngle - vm.startAngle) / (2 * Math.PI)) * (Math.pow(vm.outerRadius, 2) - Math.pow(vm.innerRadius, 2));\n    },\n    tooltipPosition: function tooltipPosition() {\n      var vm = this._view;\n      var centreAngle = vm.startAngle + (vm.endAngle - vm.startAngle) / 2;\n      var rangeFromCentre = (vm.outerRadius - vm.innerRadius) / 2 + vm.innerRadius;\n      return {\n        x: vm.x + Math.cos(centreAngle) * rangeFromCentre,\n        y: vm.y + Math.sin(centreAngle) * rangeFromCentre\n      };\n    },\n    draw: function draw() {\n      var ctx = this._chart.ctx;\n      var vm = this._view;\n      var sA = vm.startAngle;\n      var eA = vm.endAngle;\n      var pixelMargin = vm.borderAlign === 'inner' ? 0.33 : 0;\n      var angleMargin;\n      ctx.save();\n      ctx.beginPath();\n      ctx.arc(vm.x, vm.y, Math.max(vm.outerRadius - pixelMargin, 0), sA, eA);\n      ctx.arc(vm.x, vm.y, vm.innerRadius, eA, sA, true);\n      ctx.closePath();\n      ctx.fillStyle = vm.backgroundColor;\n      ctx.fill();\n\n      if (vm.borderWidth) {\n        if (vm.borderAlign === 'inner') {\n          // Draw an inner border by cliping the arc and drawing a double-width border\n          // Enlarge the clipping arc by 0.33 pixels to eliminate glitches between borders\n          ctx.beginPath();\n          angleMargin = pixelMargin / vm.outerRadius;\n          ctx.arc(vm.x, vm.y, vm.outerRadius, sA - angleMargin, eA + angleMargin);\n\n          if (vm.innerRadius > pixelMargin) {\n            angleMargin = pixelMargin / vm.innerRadius;\n            ctx.arc(vm.x, vm.y, vm.innerRadius - pixelMargin, eA + angleMargin, sA - angleMargin, true);\n          } else {\n            ctx.arc(vm.x, vm.y, pixelMargin, eA + Math.PI / 2, sA - Math.PI / 2);\n          }\n\n          ctx.closePath();\n          ctx.clip();\n          ctx.beginPath();\n          ctx.arc(vm.x, vm.y, vm.outerRadius, sA, eA);\n          ctx.arc(vm.x, vm.y, vm.innerRadius, eA, sA, true);\n          ctx.closePath();\n          ctx.lineWidth = vm.borderWidth * 2;\n          ctx.lineJoin = 'round';\n        } else {\n          ctx.lineWidth = vm.borderWidth;\n          ctx.lineJoin = 'bevel';\n        }\n\n        ctx.strokeStyle = vm.borderColor;\n        ctx.stroke();\n      }\n\n      ctx.restore();\n    }\n  });\n  var valueOrDefault$1 = helpers$1.valueOrDefault;\n  var defaultColor = core_defaults.global.defaultColor;\n\n  core_defaults._set('global', {\n    elements: {\n      line: {\n        tension: 0.4,\n        backgroundColor: defaultColor,\n        borderWidth: 3,\n        borderColor: defaultColor,\n        borderCapStyle: 'butt',\n        borderDash: [],\n        borderDashOffset: 0.0,\n        borderJoinStyle: 'miter',\n        capBezierPoints: true,\n        fill: true // do we fill in the area between the line and its base axis\n\n      }\n    }\n  });\n\n  var element_line = core_element.extend({\n    draw: function draw() {\n      var me = this;\n      var vm = me._view;\n      var ctx = me._chart.ctx;\n      var spanGaps = vm.spanGaps;\n\n      var points = me._children.slice(); // clone array\n\n\n      var globalDefaults = core_defaults.global;\n      var globalOptionLineElements = globalDefaults.elements.line;\n      var lastDrawnIndex = -1;\n      var index, current, previous, currentVM; // If we are looping, adding the first point again\n\n      if (me._loop && points.length) {\n        points.push(points[0]);\n      }\n\n      ctx.save(); // Stroke Line Options\n\n      ctx.lineCap = vm.borderCapStyle || globalOptionLineElements.borderCapStyle; // IE 9 and 10 do not support line dash\n\n      if (ctx.setLineDash) {\n        ctx.setLineDash(vm.borderDash || globalOptionLineElements.borderDash);\n      }\n\n      ctx.lineDashOffset = valueOrDefault$1(vm.borderDashOffset, globalOptionLineElements.borderDashOffset);\n      ctx.lineJoin = vm.borderJoinStyle || globalOptionLineElements.borderJoinStyle;\n      ctx.lineWidth = valueOrDefault$1(vm.borderWidth, globalOptionLineElements.borderWidth);\n      ctx.strokeStyle = vm.borderColor || globalDefaults.defaultColor; // Stroke Line\n\n      ctx.beginPath();\n      lastDrawnIndex = -1;\n\n      for (index = 0; index < points.length; ++index) {\n        current = points[index];\n        previous = helpers$1.previousItem(points, index);\n        currentVM = current._view; // First point moves to it's starting position no matter what\n\n        if (index === 0) {\n          if (!currentVM.skip) {\n            ctx.moveTo(currentVM.x, currentVM.y);\n            lastDrawnIndex = index;\n          }\n        } else {\n          previous = lastDrawnIndex === -1 ? previous : points[lastDrawnIndex];\n\n          if (!currentVM.skip) {\n            if (lastDrawnIndex !== index - 1 && !spanGaps || lastDrawnIndex === -1) {\n              // There was a gap and this is the first point after the gap\n              ctx.moveTo(currentVM.x, currentVM.y);\n            } else {\n              // Line to next point\n              helpers$1.canvas.lineTo(ctx, previous._view, current._view);\n            }\n\n            lastDrawnIndex = index;\n          }\n        }\n      }\n\n      ctx.stroke();\n      ctx.restore();\n    }\n  });\n  var valueOrDefault$2 = helpers$1.valueOrDefault;\n  var defaultColor$1 = core_defaults.global.defaultColor;\n\n  core_defaults._set('global', {\n    elements: {\n      point: {\n        radius: 3,\n        pointStyle: 'circle',\n        backgroundColor: defaultColor$1,\n        borderColor: defaultColor$1,\n        borderWidth: 1,\n        // Hover\n        hitRadius: 1,\n        hoverRadius: 4,\n        hoverBorderWidth: 1\n      }\n    }\n  });\n\n  function xRange(mouseX) {\n    var vm = this._view;\n    return vm ? Math.abs(mouseX - vm.x) < vm.radius + vm.hitRadius : false;\n  }\n\n  function yRange(mouseY) {\n    var vm = this._view;\n    return vm ? Math.abs(mouseY - vm.y) < vm.radius + vm.hitRadius : false;\n  }\n\n  var element_point = core_element.extend({\n    inRange: function inRange(mouseX, mouseY) {\n      var vm = this._view;\n      return vm ? Math.pow(mouseX - vm.x, 2) + Math.pow(mouseY - vm.y, 2) < Math.pow(vm.hitRadius + vm.radius, 2) : false;\n    },\n    inLabelRange: xRange,\n    inXRange: xRange,\n    inYRange: yRange,\n    getCenterPoint: function getCenterPoint() {\n      var vm = this._view;\n      return {\n        x: vm.x,\n        y: vm.y\n      };\n    },\n    getArea: function getArea() {\n      return Math.PI * Math.pow(this._view.radius, 2);\n    },\n    tooltipPosition: function tooltipPosition() {\n      var vm = this._view;\n      return {\n        x: vm.x,\n        y: vm.y,\n        padding: vm.radius + vm.borderWidth\n      };\n    },\n    draw: function draw(chartArea) {\n      var vm = this._view;\n      var ctx = this._chart.ctx;\n      var pointStyle = vm.pointStyle;\n      var rotation = vm.rotation;\n      var radius = vm.radius;\n      var x = vm.x;\n      var y = vm.y;\n      var globalDefaults = core_defaults.global;\n      var defaultColor = globalDefaults.defaultColor; // eslint-disable-line no-shadow\n\n      if (vm.skip) {\n        return;\n      } // Clipping for Points.\n\n\n      if (chartArea === undefined || helpers$1.canvas._isPointInArea(vm, chartArea)) {\n        ctx.strokeStyle = vm.borderColor || defaultColor;\n        ctx.lineWidth = valueOrDefault$2(vm.borderWidth, globalDefaults.elements.point.borderWidth);\n        ctx.fillStyle = vm.backgroundColor || defaultColor;\n        helpers$1.canvas.drawPoint(ctx, pointStyle, radius, x, y, rotation);\n      }\n    }\n  });\n  var defaultColor$2 = core_defaults.global.defaultColor;\n\n  core_defaults._set('global', {\n    elements: {\n      rectangle: {\n        backgroundColor: defaultColor$2,\n        borderColor: defaultColor$2,\n        borderSkipped: 'bottom',\n        borderWidth: 0\n      }\n    }\n  });\n\n  function isVertical(vm) {\n    return vm && vm.width !== undefined;\n  }\n  /**\n   * Helper function to get the bounds of the bar regardless of the orientation\n   * @param bar {Chart.Element.Rectangle} the bar\n   * @return {Bounds} bounds of the bar\n   * @private\n   */\n\n\n  function getBarBounds(vm) {\n    var x1, x2, y1, y2, half;\n\n    if (isVertical(vm)) {\n      half = vm.width / 2;\n      x1 = vm.x - half;\n      x2 = vm.x + half;\n      y1 = Math.min(vm.y, vm.base);\n      y2 = Math.max(vm.y, vm.base);\n    } else {\n      half = vm.height / 2;\n      x1 = Math.min(vm.x, vm.base);\n      x2 = Math.max(vm.x, vm.base);\n      y1 = vm.y - half;\n      y2 = vm.y + half;\n    }\n\n    return {\n      left: x1,\n      top: y1,\n      right: x2,\n      bottom: y2\n    };\n  }\n\n  function swap(orig, v1, v2) {\n    return orig === v1 ? v2 : orig === v2 ? v1 : orig;\n  }\n\n  function parseBorderSkipped(vm) {\n    var edge = vm.borderSkipped;\n    var res = {};\n\n    if (!edge) {\n      return res;\n    }\n\n    if (vm.horizontal) {\n      if (vm.base > vm.x) {\n        edge = swap(edge, 'left', 'right');\n      }\n    } else if (vm.base < vm.y) {\n      edge = swap(edge, 'bottom', 'top');\n    }\n\n    res[edge] = true;\n    return res;\n  }\n\n  function parseBorderWidth(vm, maxW, maxH) {\n    var value = vm.borderWidth;\n    var skip = parseBorderSkipped(vm);\n    var t, r, b, l;\n\n    if (helpers$1.isObject(value)) {\n      t = +value.top || 0;\n      r = +value.right || 0;\n      b = +value.bottom || 0;\n      l = +value.left || 0;\n    } else {\n      t = r = b = l = +value || 0;\n    }\n\n    return {\n      t: skip.top || t < 0 ? 0 : t > maxH ? maxH : t,\n      r: skip.right || r < 0 ? 0 : r > maxW ? maxW : r,\n      b: skip.bottom || b < 0 ? 0 : b > maxH ? maxH : b,\n      l: skip.left || l < 0 ? 0 : l > maxW ? maxW : l\n    };\n  }\n\n  function boundingRects(vm) {\n    var bounds = getBarBounds(vm);\n    var width = bounds.right - bounds.left;\n    var height = bounds.bottom - bounds.top;\n    var border = parseBorderWidth(vm, width / 2, height / 2);\n    return {\n      outer: {\n        x: bounds.left,\n        y: bounds.top,\n        w: width,\n        h: height\n      },\n      inner: {\n        x: bounds.left + border.l,\n        y: bounds.top + border.t,\n        w: width - border.l - border.r,\n        h: height - border.t - border.b\n      }\n    };\n  }\n\n  function _inRange(vm, x, y) {\n    var skipX = x === null;\n    var skipY = y === null;\n    var bounds = !vm || skipX && skipY ? false : getBarBounds(vm);\n    return bounds && (skipX || x >= bounds.left && x <= bounds.right) && (skipY || y >= bounds.top && y <= bounds.bottom);\n  }\n\n  var element_rectangle = core_element.extend({\n    draw: function draw() {\n      var ctx = this._chart.ctx;\n      var vm = this._view;\n      var rects = boundingRects(vm);\n      var outer = rects.outer;\n      var inner = rects.inner;\n      ctx.fillStyle = vm.backgroundColor;\n      ctx.fillRect(outer.x, outer.y, outer.w, outer.h);\n\n      if (outer.w === inner.w && outer.h === inner.h) {\n        return;\n      }\n\n      ctx.save();\n      ctx.beginPath();\n      ctx.rect(outer.x, outer.y, outer.w, outer.h);\n      ctx.clip();\n      ctx.fillStyle = vm.borderColor;\n      ctx.rect(inner.x, inner.y, inner.w, inner.h);\n      ctx.fill('evenodd');\n      ctx.restore();\n    },\n    height: function height() {\n      var vm = this._view;\n      return vm.base - vm.y;\n    },\n    inRange: function inRange(mouseX, mouseY) {\n      return _inRange(this._view, mouseX, mouseY);\n    },\n    inLabelRange: function inLabelRange(mouseX, mouseY) {\n      var vm = this._view;\n      return isVertical(vm) ? _inRange(vm, mouseX, null) : _inRange(vm, null, mouseY);\n    },\n    inXRange: function inXRange(mouseX) {\n      return _inRange(this._view, mouseX, null);\n    },\n    inYRange: function inYRange(mouseY) {\n      return _inRange(this._view, null, mouseY);\n    },\n    getCenterPoint: function getCenterPoint() {\n      var vm = this._view;\n      var x, y;\n\n      if (isVertical(vm)) {\n        x = vm.x;\n        y = (vm.y + vm.base) / 2;\n      } else {\n        x = (vm.x + vm.base) / 2;\n        y = vm.y;\n      }\n\n      return {\n        x: x,\n        y: y\n      };\n    },\n    getArea: function getArea() {\n      var vm = this._view;\n      return isVertical(vm) ? vm.width * Math.abs(vm.y - vm.base) : vm.height * Math.abs(vm.x - vm.base);\n    },\n    tooltipPosition: function tooltipPosition() {\n      var vm = this._view;\n      return {\n        x: vm.x,\n        y: vm.y\n      };\n    }\n  });\n  var elements = {};\n  var Arc = element_arc;\n  var Line = element_line;\n  var Point = element_point;\n  var Rectangle = element_rectangle;\n  elements.Arc = Arc;\n  elements.Line = Line;\n  elements.Point = Point;\n  elements.Rectangle = Rectangle;\n  var resolve$1 = helpers$1.options.resolve;\n\n  core_defaults._set('bar', {\n    hover: {\n      mode: 'label'\n    },\n    scales: {\n      xAxes: [{\n        type: 'category',\n        categoryPercentage: 0.8,\n        barPercentage: 0.9,\n        offset: true,\n        gridLines: {\n          offsetGridLines: true\n        }\n      }],\n      yAxes: [{\n        type: 'linear'\n      }]\n    }\n  });\n  /**\n   * Computes the \"optimal\" sample size to maintain bars equally sized while preventing overlap.\n   * @private\n   */\n\n\n  function computeMinSampleSize(scale, pixels) {\n    var min = scale.isHorizontal() ? scale.width : scale.height;\n    var ticks = scale.getTicks();\n    var prev, curr, i, ilen;\n\n    for (i = 1, ilen = pixels.length; i < ilen; ++i) {\n      min = Math.min(min, Math.abs(pixels[i] - pixels[i - 1]));\n    }\n\n    for (i = 0, ilen = ticks.length; i < ilen; ++i) {\n      curr = scale.getPixelForTick(i);\n      min = i > 0 ? Math.min(min, curr - prev) : min;\n      prev = curr;\n    }\n\n    return min;\n  }\n  /**\n   * Computes an \"ideal\" category based on the absolute bar thickness or, if undefined or null,\n   * uses the smallest interval (see computeMinSampleSize) that prevents bar overlapping. This\n   * mode currently always generates bars equally sized (until we introduce scriptable options?).\n   * @private\n   */\n\n\n  function computeFitCategoryTraits(index, ruler, options) {\n    var thickness = options.barThickness;\n    var count = ruler.stackCount;\n    var curr = ruler.pixels[index];\n    var size, ratio;\n\n    if (helpers$1.isNullOrUndef(thickness)) {\n      size = ruler.min * options.categoryPercentage;\n      ratio = options.barPercentage;\n    } else {\n      // When bar thickness is enforced, category and bar percentages are ignored.\n      // Note(SB): we could add support for relative bar thickness (e.g. barThickness: '50%')\n      // and deprecate barPercentage since this value is ignored when thickness is absolute.\n      size = thickness * count;\n      ratio = 1;\n    }\n\n    return {\n      chunk: size / count,\n      ratio: ratio,\n      start: curr - size / 2\n    };\n  }\n  /**\n   * Computes an \"optimal\" category that globally arranges bars side by side (no gap when\n   * percentage options are 1), based on the previous and following categories. This mode\n   * generates bars with different widths when data are not evenly spaced.\n   * @private\n   */\n\n\n  function computeFlexCategoryTraits(index, ruler, options) {\n    var pixels = ruler.pixels;\n    var curr = pixels[index];\n    var prev = index > 0 ? pixels[index - 1] : null;\n    var next = index < pixels.length - 1 ? pixels[index + 1] : null;\n    var percent = options.categoryPercentage;\n    var start, size;\n\n    if (prev === null) {\n      // first data: its size is double based on the next point or,\n      // if it's also the last data, we use the scale size.\n      prev = curr - (next === null ? ruler.end - ruler.start : next - curr);\n    }\n\n    if (next === null) {\n      // last data: its size is also double based on the previous point.\n      next = curr + curr - prev;\n    }\n\n    start = curr - (curr - Math.min(prev, next)) / 2 * percent;\n    size = Math.abs(next - prev) / 2 * percent;\n    return {\n      chunk: size / ruler.stackCount,\n      ratio: options.barPercentage,\n      start: start\n    };\n  }\n\n  var controller_bar = core_datasetController.extend({\n    dataElementType: elements.Rectangle,\n    initialize: function initialize() {\n      var me = this;\n      var meta;\n      core_datasetController.prototype.initialize.apply(me, arguments);\n      meta = me.getMeta();\n      meta.stack = me.getDataset().stack;\n      meta.bar = true;\n    },\n    update: function update(reset) {\n      var me = this;\n      var rects = me.getMeta().data;\n      var i, ilen;\n      me._ruler = me.getRuler();\n\n      for (i = 0, ilen = rects.length; i < ilen; ++i) {\n        me.updateElement(rects[i], i, reset);\n      }\n    },\n    updateElement: function updateElement(rectangle, index, reset) {\n      var me = this;\n      var meta = me.getMeta();\n      var dataset = me.getDataset();\n\n      var options = me._resolveElementOptions(rectangle, index);\n\n      rectangle._xScale = me.getScaleForId(meta.xAxisID);\n      rectangle._yScale = me.getScaleForId(meta.yAxisID);\n      rectangle._datasetIndex = me.index;\n      rectangle._index = index;\n      rectangle._model = {\n        backgroundColor: options.backgroundColor,\n        borderColor: options.borderColor,\n        borderSkipped: options.borderSkipped,\n        borderWidth: options.borderWidth,\n        datasetLabel: dataset.label,\n        label: me.chart.data.labels[index]\n      };\n\n      me._updateElementGeometry(rectangle, index, reset);\n\n      rectangle.pivot();\n    },\n\n    /**\n     * @private\n     */\n    _updateElementGeometry: function _updateElementGeometry(rectangle, index, reset) {\n      var me = this;\n      var model = rectangle._model;\n\n      var vscale = me._getValueScale();\n\n      var base = vscale.getBasePixel();\n      var horizontal = vscale.isHorizontal();\n      var ruler = me._ruler || me.getRuler();\n      var vpixels = me.calculateBarValuePixels(me.index, index);\n      var ipixels = me.calculateBarIndexPixels(me.index, index, ruler);\n      model.horizontal = horizontal;\n      model.base = reset ? base : vpixels.base;\n      model.x = horizontal ? reset ? base : vpixels.head : ipixels.center;\n      model.y = horizontal ? ipixels.center : reset ? base : vpixels.head;\n      model.height = horizontal ? ipixels.size : undefined;\n      model.width = horizontal ? undefined : ipixels.size;\n    },\n\n    /**\n     * Returns the stacks based on groups and bar visibility.\n     * @param {number} [last] - The dataset index\n     * @returns {string[]} The list of stack IDs\n     * @private\n     */\n    _getStacks: function _getStacks(last) {\n      var me = this;\n      var chart = me.chart;\n\n      var scale = me._getIndexScale();\n\n      var stacked = scale.options.stacked;\n      var ilen = last === undefined ? chart.data.datasets.length : last + 1;\n      var stacks = [];\n      var i, meta;\n\n      for (i = 0; i < ilen; ++i) {\n        meta = chart.getDatasetMeta(i);\n\n        if (meta.bar && chart.isDatasetVisible(i) && (stacked === false || stacked === true && stacks.indexOf(meta.stack) === -1 || stacked === undefined && (meta.stack === undefined || stacks.indexOf(meta.stack) === -1))) {\n          stacks.push(meta.stack);\n        }\n      }\n\n      return stacks;\n    },\n\n    /**\n     * Returns the effective number of stacks based on groups and bar visibility.\n     * @private\n     */\n    getStackCount: function getStackCount() {\n      return this._getStacks().length;\n    },\n\n    /**\n     * Returns the stack index for the given dataset based on groups and bar visibility.\n     * @param {number} [datasetIndex] - The dataset index\n     * @param {string} [name] - The stack name to find\n     * @returns {number} The stack index\n     * @private\n     */\n    getStackIndex: function getStackIndex(datasetIndex, name) {\n      var stacks = this._getStacks(datasetIndex);\n\n      var index = name !== undefined ? stacks.indexOf(name) : -1; // indexOf returns -1 if element is not present\n\n      return index === -1 ? stacks.length - 1 : index;\n    },\n\n    /**\n     * @private\n     */\n    getRuler: function getRuler() {\n      var me = this;\n\n      var scale = me._getIndexScale();\n\n      var stackCount = me.getStackCount();\n      var datasetIndex = me.index;\n      var isHorizontal = scale.isHorizontal();\n      var start = isHorizontal ? scale.left : scale.top;\n      var end = start + (isHorizontal ? scale.width : scale.height);\n      var pixels = [];\n      var i, ilen, min;\n\n      for (i = 0, ilen = me.getMeta().data.length; i < ilen; ++i) {\n        pixels.push(scale.getPixelForValue(null, i, datasetIndex));\n      }\n\n      min = helpers$1.isNullOrUndef(scale.options.barThickness) ? computeMinSampleSize(scale, pixels) : -1;\n      return {\n        min: min,\n        pixels: pixels,\n        start: start,\n        end: end,\n        stackCount: stackCount,\n        scale: scale\n      };\n    },\n\n    /**\n     * Note: pixel values are not clamped to the scale area.\n     * @private\n     */\n    calculateBarValuePixels: function calculateBarValuePixels(datasetIndex, index) {\n      var me = this;\n      var chart = me.chart;\n      var meta = me.getMeta();\n\n      var scale = me._getValueScale();\n\n      var isHorizontal = scale.isHorizontal();\n      var datasets = chart.data.datasets;\n      var value = +scale.getRightValue(datasets[datasetIndex].data[index]);\n      var minBarLength = scale.options.minBarLength;\n      var stacked = scale.options.stacked;\n      var stack = meta.stack;\n      var start = 0;\n      var i, imeta, ivalue, base, head, size;\n\n      if (stacked || stacked === undefined && stack !== undefined) {\n        for (i = 0; i < datasetIndex; ++i) {\n          imeta = chart.getDatasetMeta(i);\n\n          if (imeta.bar && imeta.stack === stack && imeta.controller._getValueScaleId() === scale.id && chart.isDatasetVisible(i)) {\n            ivalue = +scale.getRightValue(datasets[i].data[index]);\n\n            if (value < 0 && ivalue < 0 || value >= 0 && ivalue > 0) {\n              start += ivalue;\n            }\n          }\n        }\n      }\n\n      base = scale.getPixelForValue(start);\n      head = scale.getPixelForValue(start + value);\n      size = head - base;\n\n      if (minBarLength !== undefined && Math.abs(size) < minBarLength) {\n        size = minBarLength;\n\n        if (value >= 0 && !isHorizontal || value < 0 && isHorizontal) {\n          head = base - minBarLength;\n        } else {\n          head = base + minBarLength;\n        }\n      }\n\n      return {\n        size: size,\n        base: base,\n        head: head,\n        center: head + size / 2\n      };\n    },\n\n    /**\n     * @private\n     */\n    calculateBarIndexPixels: function calculateBarIndexPixels(datasetIndex, index, ruler) {\n      var me = this;\n      var options = ruler.scale.options;\n      var range = options.barThickness === 'flex' ? computeFlexCategoryTraits(index, ruler, options) : computeFitCategoryTraits(index, ruler, options);\n      var stackIndex = me.getStackIndex(datasetIndex, me.getMeta().stack);\n      var center = range.start + range.chunk * stackIndex + range.chunk / 2;\n      var size = Math.min(helpers$1.valueOrDefault(options.maxBarThickness, Infinity), range.chunk * range.ratio);\n      return {\n        base: center - size / 2,\n        head: center + size / 2,\n        center: center,\n        size: size\n      };\n    },\n    draw: function draw() {\n      var me = this;\n      var chart = me.chart;\n\n      var scale = me._getValueScale();\n\n      var rects = me.getMeta().data;\n      var dataset = me.getDataset();\n      var ilen = rects.length;\n      var i = 0;\n      helpers$1.canvas.clipArea(chart.ctx, chart.chartArea);\n\n      for (; i < ilen; ++i) {\n        if (!isNaN(scale.getRightValue(dataset.data[i]))) {\n          rects[i].draw();\n        }\n      }\n\n      helpers$1.canvas.unclipArea(chart.ctx);\n    },\n\n    /**\n     * @private\n     */\n    _resolveElementOptions: function _resolveElementOptions(rectangle, index) {\n      var me = this;\n      var chart = me.chart;\n      var datasets = chart.data.datasets;\n      var dataset = datasets[me.index];\n      var custom = rectangle.custom || {};\n      var options = chart.options.elements.rectangle;\n      var values = {};\n      var i, ilen, key; // Scriptable options\n\n      var context = {\n        chart: chart,\n        dataIndex: index,\n        dataset: dataset,\n        datasetIndex: me.index\n      };\n      var keys = ['backgroundColor', 'borderColor', 'borderSkipped', 'borderWidth'];\n\n      for (i = 0, ilen = keys.length; i < ilen; ++i) {\n        key = keys[i];\n        values[key] = resolve$1([custom[key], dataset[key], options[key]], context, index);\n      }\n\n      return values;\n    }\n  });\n  var valueOrDefault$3 = helpers$1.valueOrDefault;\n  var resolve$2 = helpers$1.options.resolve;\n\n  core_defaults._set('bubble', {\n    hover: {\n      mode: 'single'\n    },\n    scales: {\n      xAxes: [{\n        type: 'linear',\n        // bubble should probably use a linear scale by default\n        position: 'bottom',\n        id: 'x-axis-0' // need an ID so datasets can reference the scale\n\n      }],\n      yAxes: [{\n        type: 'linear',\n        position: 'left',\n        id: 'y-axis-0'\n      }]\n    },\n    tooltips: {\n      callbacks: {\n        title: function title() {\n          // Title doesn't make sense for scatter since we format the data as a point\n          return '';\n        },\n        label: function label(item, data) {\n          var datasetLabel = data.datasets[item.datasetIndex].label || '';\n          var dataPoint = data.datasets[item.datasetIndex].data[item.index];\n          return datasetLabel + ': (' + item.xLabel + ', ' + item.yLabel + ', ' + dataPoint.r + ')';\n        }\n      }\n    }\n  });\n\n  var controller_bubble = core_datasetController.extend({\n    /**\n     * @protected\n     */\n    dataElementType: elements.Point,\n\n    /**\n     * @protected\n     */\n    update: function update(reset) {\n      var me = this;\n      var meta = me.getMeta();\n      var points = meta.data; // Update Points\n\n      helpers$1.each(points, function (point, index) {\n        me.updateElement(point, index, reset);\n      });\n    },\n\n    /**\n     * @protected\n     */\n    updateElement: function updateElement(point, index, reset) {\n      var me = this;\n      var meta = me.getMeta();\n      var custom = point.custom || {};\n      var xScale = me.getScaleForId(meta.xAxisID);\n      var yScale = me.getScaleForId(meta.yAxisID);\n\n      var options = me._resolveElementOptions(point, index);\n\n      var data = me.getDataset().data[index];\n      var dsIndex = me.index;\n      var x = reset ? xScale.getPixelForDecimal(0.5) : xScale.getPixelForValue(typeof data === 'object' ? data : NaN, index, dsIndex);\n      var y = reset ? yScale.getBasePixel() : yScale.getPixelForValue(data, index, dsIndex);\n      point._xScale = xScale;\n      point._yScale = yScale;\n      point._options = options;\n      point._datasetIndex = dsIndex;\n      point._index = index;\n      point._model = {\n        backgroundColor: options.backgroundColor,\n        borderColor: options.borderColor,\n        borderWidth: options.borderWidth,\n        hitRadius: options.hitRadius,\n        pointStyle: options.pointStyle,\n        rotation: options.rotation,\n        radius: reset ? 0 : options.radius,\n        skip: custom.skip || isNaN(x) || isNaN(y),\n        x: x,\n        y: y\n      };\n      point.pivot();\n    },\n\n    /**\n     * @protected\n     */\n    setHoverStyle: function setHoverStyle(point) {\n      var model = point._model;\n      var options = point._options;\n      var getHoverColor = helpers$1.getHoverColor;\n      point.$previousStyle = {\n        backgroundColor: model.backgroundColor,\n        borderColor: model.borderColor,\n        borderWidth: model.borderWidth,\n        radius: model.radius\n      };\n      model.backgroundColor = valueOrDefault$3(options.hoverBackgroundColor, getHoverColor(options.backgroundColor));\n      model.borderColor = valueOrDefault$3(options.hoverBorderColor, getHoverColor(options.borderColor));\n      model.borderWidth = valueOrDefault$3(options.hoverBorderWidth, options.borderWidth);\n      model.radius = options.radius + options.hoverRadius;\n    },\n\n    /**\n     * @private\n     */\n    _resolveElementOptions: function _resolveElementOptions(point, index) {\n      var me = this;\n      var chart = me.chart;\n      var datasets = chart.data.datasets;\n      var dataset = datasets[me.index];\n      var custom = point.custom || {};\n      var options = chart.options.elements.point;\n      var data = dataset.data[index];\n      var values = {};\n      var i, ilen, key; // Scriptable options\n\n      var context = {\n        chart: chart,\n        dataIndex: index,\n        dataset: dataset,\n        datasetIndex: me.index\n      };\n      var keys = ['backgroundColor', 'borderColor', 'borderWidth', 'hoverBackgroundColor', 'hoverBorderColor', 'hoverBorderWidth', 'hoverRadius', 'hitRadius', 'pointStyle', 'rotation'];\n\n      for (i = 0, ilen = keys.length; i < ilen; ++i) {\n        key = keys[i];\n        values[key] = resolve$2([custom[key], dataset[key], options[key]], context, index);\n      } // Custom radius resolution\n\n\n      values.radius = resolve$2([custom.radius, data ? data.r : undefined, dataset.radius, options.radius], context, index);\n      return values;\n    }\n  });\n  var resolve$3 = helpers$1.options.resolve;\n  var valueOrDefault$4 = helpers$1.valueOrDefault;\n\n  core_defaults._set('doughnut', {\n    animation: {\n      // Boolean - Whether we animate the rotation of the Doughnut\n      animateRotate: true,\n      // Boolean - Whether we animate scaling the Doughnut from the centre\n      animateScale: false\n    },\n    hover: {\n      mode: 'single'\n    },\n    legendCallback: function legendCallback(chart) {\n      var text = [];\n      text.push('<ul class=\"' + chart.id + '-legend\">');\n      var data = chart.data;\n      var datasets = data.datasets;\n      var labels = data.labels;\n\n      if (datasets.length) {\n        for (var i = 0; i < datasets[0].data.length; ++i) {\n          text.push('<li><span style=\"background-color:' + datasets[0].backgroundColor[i] + '\"></span>');\n\n          if (labels[i]) {\n            text.push(labels[i]);\n          }\n\n          text.push('</li>');\n        }\n      }\n\n      text.push('</ul>');\n      return text.join('');\n    },\n    legend: {\n      labels: {\n        generateLabels: function generateLabels(chart) {\n          var data = chart.data;\n\n          if (data.labels.length && data.datasets.length) {\n            return data.labels.map(function (label, i) {\n              var meta = chart.getDatasetMeta(0);\n              var ds = data.datasets[0];\n              var arc = meta.data[i];\n              var custom = arc && arc.custom || {};\n              var arcOpts = chart.options.elements.arc;\n              var fill = resolve$3([custom.backgroundColor, ds.backgroundColor, arcOpts.backgroundColor], undefined, i);\n              var stroke = resolve$3([custom.borderColor, ds.borderColor, arcOpts.borderColor], undefined, i);\n              var bw = resolve$3([custom.borderWidth, ds.borderWidth, arcOpts.borderWidth], undefined, i);\n              return {\n                text: label,\n                fillStyle: fill,\n                strokeStyle: stroke,\n                lineWidth: bw,\n                hidden: isNaN(ds.data[i]) || meta.data[i].hidden,\n                // Extra data used for toggling the correct item\n                index: i\n              };\n            });\n          }\n\n          return [];\n        }\n      },\n      onClick: function onClick(e, legendItem) {\n        var index = legendItem.index;\n        var chart = this.chart;\n        var i, ilen, meta;\n\n        for (i = 0, ilen = (chart.data.datasets || []).length; i < ilen; ++i) {\n          meta = chart.getDatasetMeta(i); // toggle visibility of index if exists\n\n          if (meta.data[index]) {\n            meta.data[index].hidden = !meta.data[index].hidden;\n          }\n        }\n\n        chart.update();\n      }\n    },\n    // The percentage of the chart that we cut out of the middle.\n    cutoutPercentage: 50,\n    // The rotation of the chart, where the first data arc begins.\n    rotation: Math.PI * -0.5,\n    // The total circumference of the chart.\n    circumference: Math.PI * 2.0,\n    // Need to override these to give a nice default\n    tooltips: {\n      callbacks: {\n        title: function title() {\n          return '';\n        },\n        label: function label(tooltipItem, data) {\n          var dataLabel = data.labels[tooltipItem.index];\n          var value = ': ' + data.datasets[tooltipItem.datasetIndex].data[tooltipItem.index];\n\n          if (helpers$1.isArray(dataLabel)) {\n            // show value on first line of multiline label\n            // need to clone because we are changing the value\n            dataLabel = dataLabel.slice();\n            dataLabel[0] += value;\n          } else {\n            dataLabel += value;\n          }\n\n          return dataLabel;\n        }\n      }\n    }\n  });\n\n  var controller_doughnut = core_datasetController.extend({\n    dataElementType: elements.Arc,\n    linkScales: helpers$1.noop,\n    // Get index of the dataset in relation to the visible datasets. This allows determining the inner and outer radius correctly\n    getRingIndex: function getRingIndex(datasetIndex) {\n      var ringIndex = 0;\n\n      for (var j = 0; j < datasetIndex; ++j) {\n        if (this.chart.isDatasetVisible(j)) {\n          ++ringIndex;\n        }\n      }\n\n      return ringIndex;\n    },\n    update: function update(reset) {\n      var me = this;\n      var chart = me.chart;\n      var chartArea = chart.chartArea;\n      var opts = chart.options;\n      var availableWidth = chartArea.right - chartArea.left;\n      var availableHeight = chartArea.bottom - chartArea.top;\n      var minSize = Math.min(availableWidth, availableHeight);\n      var offset = {\n        x: 0,\n        y: 0\n      };\n      var meta = me.getMeta();\n      var arcs = meta.data;\n      var cutoutPercentage = opts.cutoutPercentage;\n      var circumference = opts.circumference;\n\n      var chartWeight = me._getRingWeight(me.index);\n\n      var i, ilen; // If the chart's circumference isn't a full circle, calculate minSize as a ratio of the width/height of the arc\n\n      if (circumference < Math.PI * 2.0) {\n        var startAngle = opts.rotation % (Math.PI * 2.0);\n        startAngle += Math.PI * 2.0 * (startAngle >= Math.PI ? -1 : startAngle < -Math.PI ? 1 : 0);\n        var endAngle = startAngle + circumference;\n        var start = {\n          x: Math.cos(startAngle),\n          y: Math.sin(startAngle)\n        };\n        var end = {\n          x: Math.cos(endAngle),\n          y: Math.sin(endAngle)\n        };\n        var contains0 = startAngle <= 0 && endAngle >= 0 || startAngle <= Math.PI * 2.0 && Math.PI * 2.0 <= endAngle;\n        var contains90 = startAngle <= Math.PI * 0.5 && Math.PI * 0.5 <= endAngle || startAngle <= Math.PI * 2.5 && Math.PI * 2.5 <= endAngle;\n        var contains180 = startAngle <= -Math.PI && -Math.PI <= endAngle || startAngle <= Math.PI && Math.PI <= endAngle;\n        var contains270 = startAngle <= -Math.PI * 0.5 && -Math.PI * 0.5 <= endAngle || startAngle <= Math.PI * 1.5 && Math.PI * 1.5 <= endAngle;\n        var cutout = cutoutPercentage / 100.0;\n        var min = {\n          x: contains180 ? -1 : Math.min(start.x * (start.x < 0 ? 1 : cutout), end.x * (end.x < 0 ? 1 : cutout)),\n          y: contains270 ? -1 : Math.min(start.y * (start.y < 0 ? 1 : cutout), end.y * (end.y < 0 ? 1 : cutout))\n        };\n        var max = {\n          x: contains0 ? 1 : Math.max(start.x * (start.x > 0 ? 1 : cutout), end.x * (end.x > 0 ? 1 : cutout)),\n          y: contains90 ? 1 : Math.max(start.y * (start.y > 0 ? 1 : cutout), end.y * (end.y > 0 ? 1 : cutout))\n        };\n        var size = {\n          width: (max.x - min.x) * 0.5,\n          height: (max.y - min.y) * 0.5\n        };\n        minSize = Math.min(availableWidth / size.width, availableHeight / size.height);\n        offset = {\n          x: (max.x + min.x) * -0.5,\n          y: (max.y + min.y) * -0.5\n        };\n      }\n\n      for (i = 0, ilen = arcs.length; i < ilen; ++i) {\n        arcs[i]._options = me._resolveElementOptions(arcs[i], i);\n      }\n\n      chart.borderWidth = me.getMaxBorderWidth();\n      chart.outerRadius = Math.max((minSize - chart.borderWidth) / 2, 0);\n      chart.innerRadius = Math.max(cutoutPercentage ? chart.outerRadius / 100 * cutoutPercentage : 0, 0);\n      chart.radiusLength = (chart.outerRadius - chart.innerRadius) / (me._getVisibleDatasetWeightTotal() || 1);\n      chart.offsetX = offset.x * chart.outerRadius;\n      chart.offsetY = offset.y * chart.outerRadius;\n      meta.total = me.calculateTotal();\n      me.outerRadius = chart.outerRadius - chart.radiusLength * me._getRingWeightOffset(me.index);\n      me.innerRadius = Math.max(me.outerRadius - chart.radiusLength * chartWeight, 0);\n\n      for (i = 0, ilen = arcs.length; i < ilen; ++i) {\n        me.updateElement(arcs[i], i, reset);\n      }\n    },\n    updateElement: function updateElement(arc, index, reset) {\n      var me = this;\n      var chart = me.chart;\n      var chartArea = chart.chartArea;\n      var opts = chart.options;\n      var animationOpts = opts.animation;\n      var centerX = (chartArea.left + chartArea.right) / 2;\n      var centerY = (chartArea.top + chartArea.bottom) / 2;\n      var startAngle = opts.rotation; // non reset case handled later\n\n      var endAngle = opts.rotation; // non reset case handled later\n\n      var dataset = me.getDataset();\n      var circumference = reset && animationOpts.animateRotate ? 0 : arc.hidden ? 0 : me.calculateCircumference(dataset.data[index]) * (opts.circumference / (2.0 * Math.PI));\n      var innerRadius = reset && animationOpts.animateScale ? 0 : me.innerRadius;\n      var outerRadius = reset && animationOpts.animateScale ? 0 : me.outerRadius;\n      var options = arc._options || {};\n      helpers$1.extend(arc, {\n        // Utility\n        _datasetIndex: me.index,\n        _index: index,\n        // Desired view properties\n        _model: {\n          backgroundColor: options.backgroundColor,\n          borderColor: options.borderColor,\n          borderWidth: options.borderWidth,\n          borderAlign: options.borderAlign,\n          x: centerX + chart.offsetX,\n          y: centerY + chart.offsetY,\n          startAngle: startAngle,\n          endAngle: endAngle,\n          circumference: circumference,\n          outerRadius: outerRadius,\n          innerRadius: innerRadius,\n          label: helpers$1.valueAtIndexOrDefault(dataset.label, index, chart.data.labels[index])\n        }\n      });\n      var model = arc._model; // Set correct angles if not resetting\n\n      if (!reset || !animationOpts.animateRotate) {\n        if (index === 0) {\n          model.startAngle = opts.rotation;\n        } else {\n          model.startAngle = me.getMeta().data[index - 1]._model.endAngle;\n        }\n\n        model.endAngle = model.startAngle + model.circumference;\n      }\n\n      arc.pivot();\n    },\n    calculateTotal: function calculateTotal() {\n      var dataset = this.getDataset();\n      var meta = this.getMeta();\n      var total = 0;\n      var value;\n      helpers$1.each(meta.data, function (element, index) {\n        value = dataset.data[index];\n\n        if (!isNaN(value) && !element.hidden) {\n          total += Math.abs(value);\n        }\n      });\n      /* if (total === 0) {\n      \ttotal = NaN;\n      }*/\n\n      return total;\n    },\n    calculateCircumference: function calculateCircumference(value) {\n      var total = this.getMeta().total;\n\n      if (total > 0 && !isNaN(value)) {\n        return Math.PI * 2.0 * (Math.abs(value) / total);\n      }\n\n      return 0;\n    },\n    // gets the max border or hover width to properly scale pie charts\n    getMaxBorderWidth: function getMaxBorderWidth(arcs) {\n      var me = this;\n      var max = 0;\n      var chart = me.chart;\n      var i, ilen, meta, arc, controller, options, borderWidth, hoverWidth;\n\n      if (!arcs) {\n        // Find the outmost visible dataset\n        for (i = 0, ilen = chart.data.datasets.length; i < ilen; ++i) {\n          if (chart.isDatasetVisible(i)) {\n            meta = chart.getDatasetMeta(i);\n            arcs = meta.data;\n\n            if (i !== me.index) {\n              controller = meta.controller;\n            }\n\n            break;\n          }\n        }\n      }\n\n      if (!arcs) {\n        return 0;\n      }\n\n      for (i = 0, ilen = arcs.length; i < ilen; ++i) {\n        arc = arcs[i];\n        options = controller ? controller._resolveElementOptions(arc, i) : arc._options;\n\n        if (options.borderAlign !== 'inner') {\n          borderWidth = options.borderWidth;\n          hoverWidth = options.hoverBorderWidth;\n          max = borderWidth > max ? borderWidth : max;\n          max = hoverWidth > max ? hoverWidth : max;\n        }\n      }\n\n      return max;\n    },\n\n    /**\n     * @protected\n     */\n    setHoverStyle: function setHoverStyle(arc) {\n      var model = arc._model;\n      var options = arc._options;\n      var getHoverColor = helpers$1.getHoverColor;\n      arc.$previousStyle = {\n        backgroundColor: model.backgroundColor,\n        borderColor: model.borderColor,\n        borderWidth: model.borderWidth\n      };\n      model.backgroundColor = valueOrDefault$4(options.hoverBackgroundColor, getHoverColor(options.backgroundColor));\n      model.borderColor = valueOrDefault$4(options.hoverBorderColor, getHoverColor(options.borderColor));\n      model.borderWidth = valueOrDefault$4(options.hoverBorderWidth, options.borderWidth);\n    },\n\n    /**\n     * @private\n     */\n    _resolveElementOptions: function _resolveElementOptions(arc, index) {\n      var me = this;\n      var chart = me.chart;\n      var dataset = me.getDataset();\n      var custom = arc.custom || {};\n      var options = chart.options.elements.arc;\n      var values = {};\n      var i, ilen, key; // Scriptable options\n\n      var context = {\n        chart: chart,\n        dataIndex: index,\n        dataset: dataset,\n        datasetIndex: me.index\n      };\n      var keys = ['backgroundColor', 'borderColor', 'borderWidth', 'borderAlign', 'hoverBackgroundColor', 'hoverBorderColor', 'hoverBorderWidth'];\n\n      for (i = 0, ilen = keys.length; i < ilen; ++i) {\n        key = keys[i];\n        values[key] = resolve$3([custom[key], dataset[key], options[key]], context, index);\n      }\n\n      return values;\n    },\n\n    /**\n     * Get radius length offset of the dataset in relation to the visible datasets weights. This allows determining the inner and outer radius correctly\n     * @private\n     */\n    _getRingWeightOffset: function _getRingWeightOffset(datasetIndex) {\n      var ringWeightOffset = 0;\n\n      for (var i = 0; i < datasetIndex; ++i) {\n        if (this.chart.isDatasetVisible(i)) {\n          ringWeightOffset += this._getRingWeight(i);\n        }\n      }\n\n      return ringWeightOffset;\n    },\n\n    /**\n     * @private\n     */\n    _getRingWeight: function _getRingWeight(dataSetIndex) {\n      return Math.max(valueOrDefault$4(this.chart.data.datasets[dataSetIndex].weight, 1), 0);\n    },\n\n    /**\n     * Returns the sum of all visibile data set weights.  This value can be 0.\n     * @private\n     */\n    _getVisibleDatasetWeightTotal: function _getVisibleDatasetWeightTotal() {\n      return this._getRingWeightOffset(this.chart.data.datasets.length);\n    }\n  });\n\n  core_defaults._set('horizontalBar', {\n    hover: {\n      mode: 'index',\n      axis: 'y'\n    },\n    scales: {\n      xAxes: [{\n        type: 'linear',\n        position: 'bottom'\n      }],\n      yAxes: [{\n        type: 'category',\n        position: 'left',\n        categoryPercentage: 0.8,\n        barPercentage: 0.9,\n        offset: true,\n        gridLines: {\n          offsetGridLines: true\n        }\n      }]\n    },\n    elements: {\n      rectangle: {\n        borderSkipped: 'left'\n      }\n    },\n    tooltips: {\n      mode: 'index',\n      axis: 'y'\n    }\n  });\n\n  var controller_horizontalBar = controller_bar.extend({\n    /**\n     * @private\n     */\n    _getValueScaleId: function _getValueScaleId() {\n      return this.getMeta().xAxisID;\n    },\n\n    /**\n     * @private\n     */\n    _getIndexScaleId: function _getIndexScaleId() {\n      return this.getMeta().yAxisID;\n    }\n  });\n  var valueOrDefault$5 = helpers$1.valueOrDefault;\n  var resolve$4 = helpers$1.options.resolve;\n  var isPointInArea = helpers$1.canvas._isPointInArea;\n\n  core_defaults._set('line', {\n    showLines: true,\n    spanGaps: false,\n    hover: {\n      mode: 'label'\n    },\n    scales: {\n      xAxes: [{\n        type: 'category',\n        id: 'x-axis-0'\n      }],\n      yAxes: [{\n        type: 'linear',\n        id: 'y-axis-0'\n      }]\n    }\n  });\n\n  function lineEnabled(dataset, options) {\n    return valueOrDefault$5(dataset.showLine, options.showLines);\n  }\n\n  var controller_line = core_datasetController.extend({\n    datasetElementType: elements.Line,\n    dataElementType: elements.Point,\n    update: function update(reset) {\n      var me = this;\n      var meta = me.getMeta();\n      var line = meta.dataset;\n      var points = meta.data || [];\n      var scale = me.getScaleForId(meta.yAxisID);\n      var dataset = me.getDataset();\n      var showLine = lineEnabled(dataset, me.chart.options);\n      var i, ilen; // Update Line\n\n      if (showLine) {\n        // Compatibility: If the properties are defined with only the old name, use those values\n        if (dataset.tension !== undefined && dataset.lineTension === undefined) {\n          dataset.lineTension = dataset.tension;\n        } // Utility\n\n\n        line._scale = scale;\n        line._datasetIndex = me.index; // Data\n\n        line._children = points; // Model\n\n        line._model = me._resolveLineOptions(line);\n        line.pivot();\n      } // Update Points\n\n\n      for (i = 0, ilen = points.length; i < ilen; ++i) {\n        me.updateElement(points[i], i, reset);\n      }\n\n      if (showLine && line._model.tension !== 0) {\n        me.updateBezierControlPoints();\n      } // Now pivot the point for animation\n\n\n      for (i = 0, ilen = points.length; i < ilen; ++i) {\n        points[i].pivot();\n      }\n    },\n    updateElement: function updateElement(point, index, reset) {\n      var me = this;\n      var meta = me.getMeta();\n      var custom = point.custom || {};\n      var dataset = me.getDataset();\n      var datasetIndex = me.index;\n      var value = dataset.data[index];\n      var yScale = me.getScaleForId(meta.yAxisID);\n      var xScale = me.getScaleForId(meta.xAxisID);\n      var lineModel = meta.dataset._model;\n      var x, y;\n\n      var options = me._resolvePointOptions(point, index);\n\n      x = xScale.getPixelForValue(typeof value === 'object' ? value : NaN, index, datasetIndex);\n      y = reset ? yScale.getBasePixel() : me.calculatePointY(value, index, datasetIndex); // Utility\n\n      point._xScale = xScale;\n      point._yScale = yScale;\n      point._options = options;\n      point._datasetIndex = datasetIndex;\n      point._index = index; // Desired view properties\n\n      point._model = {\n        x: x,\n        y: y,\n        skip: custom.skip || isNaN(x) || isNaN(y),\n        // Appearance\n        radius: options.radius,\n        pointStyle: options.pointStyle,\n        rotation: options.rotation,\n        backgroundColor: options.backgroundColor,\n        borderColor: options.borderColor,\n        borderWidth: options.borderWidth,\n        tension: valueOrDefault$5(custom.tension, lineModel ? lineModel.tension : 0),\n        steppedLine: lineModel ? lineModel.steppedLine : false,\n        // Tooltip\n        hitRadius: options.hitRadius\n      };\n    },\n\n    /**\n     * @private\n     */\n    _resolvePointOptions: function _resolvePointOptions(element, index) {\n      var me = this;\n      var chart = me.chart;\n      var dataset = chart.data.datasets[me.index];\n      var custom = element.custom || {};\n      var options = chart.options.elements.point;\n      var values = {};\n      var i, ilen, key; // Scriptable options\n\n      var context = {\n        chart: chart,\n        dataIndex: index,\n        dataset: dataset,\n        datasetIndex: me.index\n      };\n      var ELEMENT_OPTIONS = {\n        backgroundColor: 'pointBackgroundColor',\n        borderColor: 'pointBorderColor',\n        borderWidth: 'pointBorderWidth',\n        hitRadius: 'pointHitRadius',\n        hoverBackgroundColor: 'pointHoverBackgroundColor',\n        hoverBorderColor: 'pointHoverBorderColor',\n        hoverBorderWidth: 'pointHoverBorderWidth',\n        hoverRadius: 'pointHoverRadius',\n        pointStyle: 'pointStyle',\n        radius: 'pointRadius',\n        rotation: 'pointRotation'\n      };\n      var keys = Object.keys(ELEMENT_OPTIONS);\n\n      for (i = 0, ilen = keys.length; i < ilen; ++i) {\n        key = keys[i];\n        values[key] = resolve$4([custom[key], dataset[ELEMENT_OPTIONS[key]], dataset[key], options[key]], context, index);\n      }\n\n      return values;\n    },\n\n    /**\n     * @private\n     */\n    _resolveLineOptions: function _resolveLineOptions(element) {\n      var me = this;\n      var chart = me.chart;\n      var dataset = chart.data.datasets[me.index];\n      var custom = element.custom || {};\n      var options = chart.options;\n      var elementOptions = options.elements.line;\n      var values = {};\n      var i, ilen, key;\n      var keys = ['backgroundColor', 'borderWidth', 'borderColor', 'borderCapStyle', 'borderDash', 'borderDashOffset', 'borderJoinStyle', 'fill', 'cubicInterpolationMode'];\n\n      for (i = 0, ilen = keys.length; i < ilen; ++i) {\n        key = keys[i];\n        values[key] = resolve$4([custom[key], dataset[key], elementOptions[key]]);\n      } // The default behavior of lines is to break at null values, according\n      // to https://github.com/chartjs/Chart.js/issues/2435#issuecomment-216718158\n      // This option gives lines the ability to span gaps\n\n\n      values.spanGaps = valueOrDefault$5(dataset.spanGaps, options.spanGaps);\n      values.tension = valueOrDefault$5(dataset.lineTension, elementOptions.tension);\n      values.steppedLine = resolve$4([custom.steppedLine, dataset.steppedLine, elementOptions.stepped]);\n      return values;\n    },\n    calculatePointY: function calculatePointY(value, index, datasetIndex) {\n      var me = this;\n      var chart = me.chart;\n      var meta = me.getMeta();\n      var yScale = me.getScaleForId(meta.yAxisID);\n      var sumPos = 0;\n      var sumNeg = 0;\n      var i, ds, dsMeta;\n\n      if (yScale.options.stacked) {\n        for (i = 0; i < datasetIndex; i++) {\n          ds = chart.data.datasets[i];\n          dsMeta = chart.getDatasetMeta(i);\n\n          if (dsMeta.type === 'line' && dsMeta.yAxisID === yScale.id && chart.isDatasetVisible(i)) {\n            var stackedRightValue = Number(yScale.getRightValue(ds.data[index]));\n\n            if (stackedRightValue < 0) {\n              sumNeg += stackedRightValue || 0;\n            } else {\n              sumPos += stackedRightValue || 0;\n            }\n          }\n        }\n\n        var rightValue = Number(yScale.getRightValue(value));\n\n        if (rightValue < 0) {\n          return yScale.getPixelForValue(sumNeg + rightValue);\n        }\n\n        return yScale.getPixelForValue(sumPos + rightValue);\n      }\n\n      return yScale.getPixelForValue(value);\n    },\n    updateBezierControlPoints: function updateBezierControlPoints() {\n      var me = this;\n      var chart = me.chart;\n      var meta = me.getMeta();\n      var lineModel = meta.dataset._model;\n      var area = chart.chartArea;\n      var points = meta.data || [];\n      var i, ilen, model, controlPoints; // Only consider points that are drawn in case the spanGaps option is used\n\n      if (lineModel.spanGaps) {\n        points = points.filter(function (pt) {\n          return !pt._model.skip;\n        });\n      }\n\n      function capControlPoint(pt, min, max) {\n        return Math.max(Math.min(pt, max), min);\n      }\n\n      if (lineModel.cubicInterpolationMode === 'monotone') {\n        helpers$1.splineCurveMonotone(points);\n      } else {\n        for (i = 0, ilen = points.length; i < ilen; ++i) {\n          model = points[i]._model;\n          controlPoints = helpers$1.splineCurve(helpers$1.previousItem(points, i)._model, model, helpers$1.nextItem(points, i)._model, lineModel.tension);\n          model.controlPointPreviousX = controlPoints.previous.x;\n          model.controlPointPreviousY = controlPoints.previous.y;\n          model.controlPointNextX = controlPoints.next.x;\n          model.controlPointNextY = controlPoints.next.y;\n        }\n      }\n\n      if (chart.options.elements.line.capBezierPoints) {\n        for (i = 0, ilen = points.length; i < ilen; ++i) {\n          model = points[i]._model;\n\n          if (isPointInArea(model, area)) {\n            if (i > 0 && isPointInArea(points[i - 1]._model, area)) {\n              model.controlPointPreviousX = capControlPoint(model.controlPointPreviousX, area.left, area.right);\n              model.controlPointPreviousY = capControlPoint(model.controlPointPreviousY, area.top, area.bottom);\n            }\n\n            if (i < points.length - 1 && isPointInArea(points[i + 1]._model, area)) {\n              model.controlPointNextX = capControlPoint(model.controlPointNextX, area.left, area.right);\n              model.controlPointNextY = capControlPoint(model.controlPointNextY, area.top, area.bottom);\n            }\n          }\n        }\n      }\n    },\n    draw: function draw() {\n      var me = this;\n      var chart = me.chart;\n      var meta = me.getMeta();\n      var points = meta.data || [];\n      var area = chart.chartArea;\n      var ilen = points.length;\n      var halfBorderWidth;\n      var i = 0;\n\n      if (lineEnabled(me.getDataset(), chart.options)) {\n        halfBorderWidth = (meta.dataset._model.borderWidth || 0) / 2;\n        helpers$1.canvas.clipArea(chart.ctx, {\n          left: area.left,\n          right: area.right,\n          top: area.top - halfBorderWidth,\n          bottom: area.bottom + halfBorderWidth\n        });\n        meta.dataset.draw();\n        helpers$1.canvas.unclipArea(chart.ctx);\n      } // Draw the points\n\n\n      for (; i < ilen; ++i) {\n        points[i].draw(area);\n      }\n    },\n\n    /**\n     * @protected\n     */\n    setHoverStyle: function setHoverStyle(point) {\n      var model = point._model;\n      var options = point._options;\n      var getHoverColor = helpers$1.getHoverColor;\n      point.$previousStyle = {\n        backgroundColor: model.backgroundColor,\n        borderColor: model.borderColor,\n        borderWidth: model.borderWidth,\n        radius: model.radius\n      };\n      model.backgroundColor = valueOrDefault$5(options.hoverBackgroundColor, getHoverColor(options.backgroundColor));\n      model.borderColor = valueOrDefault$5(options.hoverBorderColor, getHoverColor(options.borderColor));\n      model.borderWidth = valueOrDefault$5(options.hoverBorderWidth, options.borderWidth);\n      model.radius = valueOrDefault$5(options.hoverRadius, options.radius);\n    }\n  });\n  var resolve$5 = helpers$1.options.resolve;\n\n  core_defaults._set('polarArea', {\n    scale: {\n      type: 'radialLinear',\n      angleLines: {\n        display: false\n      },\n      gridLines: {\n        circular: true\n      },\n      pointLabels: {\n        display: false\n      },\n      ticks: {\n        beginAtZero: true\n      }\n    },\n    // Boolean - Whether to animate the rotation of the chart\n    animation: {\n      animateRotate: true,\n      animateScale: true\n    },\n    startAngle: -0.5 * Math.PI,\n    legendCallback: function legendCallback(chart) {\n      var text = [];\n      text.push('<ul class=\"' + chart.id + '-legend\">');\n      var data = chart.data;\n      var datasets = data.datasets;\n      var labels = data.labels;\n\n      if (datasets.length) {\n        for (var i = 0; i < datasets[0].data.length; ++i) {\n          text.push('<li><span style=\"background-color:' + datasets[0].backgroundColor[i] + '\"></span>');\n\n          if (labels[i]) {\n            text.push(labels[i]);\n          }\n\n          text.push('</li>');\n        }\n      }\n\n      text.push('</ul>');\n      return text.join('');\n    },\n    legend: {\n      labels: {\n        generateLabels: function generateLabels(chart) {\n          var data = chart.data;\n\n          if (data.labels.length && data.datasets.length) {\n            return data.labels.map(function (label, i) {\n              var meta = chart.getDatasetMeta(0);\n              var ds = data.datasets[0];\n              var arc = meta.data[i];\n              var custom = arc.custom || {};\n              var arcOpts = chart.options.elements.arc;\n              var fill = resolve$5([custom.backgroundColor, ds.backgroundColor, arcOpts.backgroundColor], undefined, i);\n              var stroke = resolve$5([custom.borderColor, ds.borderColor, arcOpts.borderColor], undefined, i);\n              var bw = resolve$5([custom.borderWidth, ds.borderWidth, arcOpts.borderWidth], undefined, i);\n              return {\n                text: label,\n                fillStyle: fill,\n                strokeStyle: stroke,\n                lineWidth: bw,\n                hidden: isNaN(ds.data[i]) || meta.data[i].hidden,\n                // Extra data used for toggling the correct item\n                index: i\n              };\n            });\n          }\n\n          return [];\n        }\n      },\n      onClick: function onClick(e, legendItem) {\n        var index = legendItem.index;\n        var chart = this.chart;\n        var i, ilen, meta;\n\n        for (i = 0, ilen = (chart.data.datasets || []).length; i < ilen; ++i) {\n          meta = chart.getDatasetMeta(i);\n          meta.data[index].hidden = !meta.data[index].hidden;\n        }\n\n        chart.update();\n      }\n    },\n    // Need to override these to give a nice default\n    tooltips: {\n      callbacks: {\n        title: function title() {\n          return '';\n        },\n        label: function label(item, data) {\n          return data.labels[item.index] + ': ' + item.yLabel;\n        }\n      }\n    }\n  });\n\n  var controller_polarArea = core_datasetController.extend({\n    dataElementType: elements.Arc,\n    linkScales: helpers$1.noop,\n    update: function update(reset) {\n      var me = this;\n      var dataset = me.getDataset();\n      var meta = me.getMeta();\n      var start = me.chart.options.startAngle || 0;\n      var starts = me._starts = [];\n      var angles = me._angles = [];\n      var arcs = meta.data;\n      var i, ilen, angle;\n\n      me._updateRadius();\n\n      meta.count = me.countVisibleElements();\n\n      for (i = 0, ilen = dataset.data.length; i < ilen; i++) {\n        starts[i] = start;\n        angle = me._computeAngle(i);\n        angles[i] = angle;\n        start += angle;\n      }\n\n      for (i = 0, ilen = arcs.length; i < ilen; ++i) {\n        arcs[i]._options = me._resolveElementOptions(arcs[i], i);\n        me.updateElement(arcs[i], i, reset);\n      }\n    },\n\n    /**\n     * @private\n     */\n    _updateRadius: function _updateRadius() {\n      var me = this;\n      var chart = me.chart;\n      var chartArea = chart.chartArea;\n      var opts = chart.options;\n      var minSize = Math.min(chartArea.right - chartArea.left, chartArea.bottom - chartArea.top);\n      chart.outerRadius = Math.max(minSize / 2, 0);\n      chart.innerRadius = Math.max(opts.cutoutPercentage ? chart.outerRadius / 100 * opts.cutoutPercentage : 1, 0);\n      chart.radiusLength = (chart.outerRadius - chart.innerRadius) / chart.getVisibleDatasetCount();\n      me.outerRadius = chart.outerRadius - chart.radiusLength * me.index;\n      me.innerRadius = me.outerRadius - chart.radiusLength;\n    },\n    updateElement: function updateElement(arc, index, reset) {\n      var me = this;\n      var chart = me.chart;\n      var dataset = me.getDataset();\n      var opts = chart.options;\n      var animationOpts = opts.animation;\n      var scale = chart.scale;\n      var labels = chart.data.labels;\n      var centerX = scale.xCenter;\n      var centerY = scale.yCenter; // var negHalfPI = -0.5 * Math.PI;\n\n      var datasetStartAngle = opts.startAngle;\n      var distance = arc.hidden ? 0 : scale.getDistanceFromCenterForValue(dataset.data[index]);\n      var startAngle = me._starts[index];\n      var endAngle = startAngle + (arc.hidden ? 0 : me._angles[index]);\n      var resetRadius = animationOpts.animateScale ? 0 : scale.getDistanceFromCenterForValue(dataset.data[index]);\n      var options = arc._options || {};\n      helpers$1.extend(arc, {\n        // Utility\n        _datasetIndex: me.index,\n        _index: index,\n        _scale: scale,\n        // Desired view properties\n        _model: {\n          backgroundColor: options.backgroundColor,\n          borderColor: options.borderColor,\n          borderWidth: options.borderWidth,\n          borderAlign: options.borderAlign,\n          x: centerX,\n          y: centerY,\n          innerRadius: 0,\n          outerRadius: reset ? resetRadius : distance,\n          startAngle: reset && animationOpts.animateRotate ? datasetStartAngle : startAngle,\n          endAngle: reset && animationOpts.animateRotate ? datasetStartAngle : endAngle,\n          label: helpers$1.valueAtIndexOrDefault(labels, index, labels[index])\n        }\n      });\n      arc.pivot();\n    },\n    countVisibleElements: function countVisibleElements() {\n      var dataset = this.getDataset();\n      var meta = this.getMeta();\n      var count = 0;\n      helpers$1.each(meta.data, function (element, index) {\n        if (!isNaN(dataset.data[index]) && !element.hidden) {\n          count++;\n        }\n      });\n      return count;\n    },\n\n    /**\n     * @protected\n     */\n    setHoverStyle: function setHoverStyle(arc) {\n      var model = arc._model;\n      var options = arc._options;\n      var getHoverColor = helpers$1.getHoverColor;\n      var valueOrDefault = helpers$1.valueOrDefault;\n      arc.$previousStyle = {\n        backgroundColor: model.backgroundColor,\n        borderColor: model.borderColor,\n        borderWidth: model.borderWidth\n      };\n      model.backgroundColor = valueOrDefault(options.hoverBackgroundColor, getHoverColor(options.backgroundColor));\n      model.borderColor = valueOrDefault(options.hoverBorderColor, getHoverColor(options.borderColor));\n      model.borderWidth = valueOrDefault(options.hoverBorderWidth, options.borderWidth);\n    },\n\n    /**\n     * @private\n     */\n    _resolveElementOptions: function _resolveElementOptions(arc, index) {\n      var me = this;\n      var chart = me.chart;\n      var dataset = me.getDataset();\n      var custom = arc.custom || {};\n      var options = chart.options.elements.arc;\n      var values = {};\n      var i, ilen, key; // Scriptable options\n\n      var context = {\n        chart: chart,\n        dataIndex: index,\n        dataset: dataset,\n        datasetIndex: me.index\n      };\n      var keys = ['backgroundColor', 'borderColor', 'borderWidth', 'borderAlign', 'hoverBackgroundColor', 'hoverBorderColor', 'hoverBorderWidth'];\n\n      for (i = 0, ilen = keys.length; i < ilen; ++i) {\n        key = keys[i];\n        values[key] = resolve$5([custom[key], dataset[key], options[key]], context, index);\n      }\n\n      return values;\n    },\n\n    /**\n     * @private\n     */\n    _computeAngle: function _computeAngle(index) {\n      var me = this;\n      var count = this.getMeta().count;\n      var dataset = me.getDataset();\n      var meta = me.getMeta();\n\n      if (isNaN(dataset.data[index]) || meta.data[index].hidden) {\n        return 0;\n      } // Scriptable options\n\n\n      var context = {\n        chart: me.chart,\n        dataIndex: index,\n        dataset: dataset,\n        datasetIndex: me.index\n      };\n      return resolve$5([me.chart.options.elements.arc.angle, 2 * Math.PI / count], context, index);\n    }\n  });\n\n  core_defaults._set('pie', helpers$1.clone(core_defaults.doughnut));\n\n  core_defaults._set('pie', {\n    cutoutPercentage: 0\n  }); // Pie charts are Doughnut chart with different defaults\n\n\n  var controller_pie = controller_doughnut;\n  var valueOrDefault$6 = helpers$1.valueOrDefault;\n  var resolve$6 = helpers$1.options.resolve;\n\n  core_defaults._set('radar', {\n    scale: {\n      type: 'radialLinear'\n    },\n    elements: {\n      line: {\n        tension: 0 // no bezier in radar\n\n      }\n    }\n  });\n\n  var controller_radar = core_datasetController.extend({\n    datasetElementType: elements.Line,\n    dataElementType: elements.Point,\n    linkScales: helpers$1.noop,\n    update: function update(reset) {\n      var me = this;\n      var meta = me.getMeta();\n      var line = meta.dataset;\n      var points = meta.data || [];\n      var scale = me.chart.scale;\n      var dataset = me.getDataset();\n      var i, ilen; // Compatibility: If the properties are defined with only the old name, use those values\n\n      if (dataset.tension !== undefined && dataset.lineTension === undefined) {\n        dataset.lineTension = dataset.tension;\n      } // Utility\n\n\n      line._scale = scale;\n      line._datasetIndex = me.index; // Data\n\n      line._children = points;\n      line._loop = true; // Model\n\n      line._model = me._resolveLineOptions(line);\n      line.pivot(); // Update Points\n\n      for (i = 0, ilen = points.length; i < ilen; ++i) {\n        me.updateElement(points[i], i, reset);\n      } // Update bezier control points\n\n\n      me.updateBezierControlPoints(); // Now pivot the point for animation\n\n      for (i = 0, ilen = points.length; i < ilen; ++i) {\n        points[i].pivot();\n      }\n    },\n    updateElement: function updateElement(point, index, reset) {\n      var me = this;\n      var custom = point.custom || {};\n      var dataset = me.getDataset();\n      var scale = me.chart.scale;\n      var pointPosition = scale.getPointPositionForValue(index, dataset.data[index]);\n\n      var options = me._resolvePointOptions(point, index);\n\n      var lineModel = me.getMeta().dataset._model;\n\n      var x = reset ? scale.xCenter : pointPosition.x;\n      var y = reset ? scale.yCenter : pointPosition.y; // Utility\n\n      point._scale = scale;\n      point._options = options;\n      point._datasetIndex = me.index;\n      point._index = index; // Desired view properties\n\n      point._model = {\n        x: x,\n        // value not used in dataset scale, but we want a consistent API between scales\n        y: y,\n        skip: custom.skip || isNaN(x) || isNaN(y),\n        // Appearance\n        radius: options.radius,\n        pointStyle: options.pointStyle,\n        rotation: options.rotation,\n        backgroundColor: options.backgroundColor,\n        borderColor: options.borderColor,\n        borderWidth: options.borderWidth,\n        tension: valueOrDefault$6(custom.tension, lineModel ? lineModel.tension : 0),\n        // Tooltip\n        hitRadius: options.hitRadius\n      };\n    },\n\n    /**\n     * @private\n     */\n    _resolvePointOptions: function _resolvePointOptions(element, index) {\n      var me = this;\n      var chart = me.chart;\n      var dataset = chart.data.datasets[me.index];\n      var custom = element.custom || {};\n      var options = chart.options.elements.point;\n      var values = {};\n      var i, ilen, key; // Scriptable options\n\n      var context = {\n        chart: chart,\n        dataIndex: index,\n        dataset: dataset,\n        datasetIndex: me.index\n      };\n      var ELEMENT_OPTIONS = {\n        backgroundColor: 'pointBackgroundColor',\n        borderColor: 'pointBorderColor',\n        borderWidth: 'pointBorderWidth',\n        hitRadius: 'pointHitRadius',\n        hoverBackgroundColor: 'pointHoverBackgroundColor',\n        hoverBorderColor: 'pointHoverBorderColor',\n        hoverBorderWidth: 'pointHoverBorderWidth',\n        hoverRadius: 'pointHoverRadius',\n        pointStyle: 'pointStyle',\n        radius: 'pointRadius',\n        rotation: 'pointRotation'\n      };\n      var keys = Object.keys(ELEMENT_OPTIONS);\n\n      for (i = 0, ilen = keys.length; i < ilen; ++i) {\n        key = keys[i];\n        values[key] = resolve$6([custom[key], dataset[ELEMENT_OPTIONS[key]], dataset[key], options[key]], context, index);\n      }\n\n      return values;\n    },\n\n    /**\n     * @private\n     */\n    _resolveLineOptions: function _resolveLineOptions(element) {\n      var me = this;\n      var chart = me.chart;\n      var dataset = chart.data.datasets[me.index];\n      var custom = element.custom || {};\n      var options = chart.options.elements.line;\n      var values = {};\n      var i, ilen, key;\n      var keys = ['backgroundColor', 'borderWidth', 'borderColor', 'borderCapStyle', 'borderDash', 'borderDashOffset', 'borderJoinStyle', 'fill'];\n\n      for (i = 0, ilen = keys.length; i < ilen; ++i) {\n        key = keys[i];\n        values[key] = resolve$6([custom[key], dataset[key], options[key]]);\n      }\n\n      values.tension = valueOrDefault$6(dataset.lineTension, options.tension);\n      return values;\n    },\n    updateBezierControlPoints: function updateBezierControlPoints() {\n      var me = this;\n      var meta = me.getMeta();\n      var area = me.chart.chartArea;\n      var points = meta.data || [];\n      var i, ilen, model, controlPoints;\n\n      function capControlPoint(pt, min, max) {\n        return Math.max(Math.min(pt, max), min);\n      }\n\n      for (i = 0, ilen = points.length; i < ilen; ++i) {\n        model = points[i]._model;\n        controlPoints = helpers$1.splineCurve(helpers$1.previousItem(points, i, true)._model, model, helpers$1.nextItem(points, i, true)._model, model.tension); // Prevent the bezier going outside of the bounds of the graph\n\n        model.controlPointPreviousX = capControlPoint(controlPoints.previous.x, area.left, area.right);\n        model.controlPointPreviousY = capControlPoint(controlPoints.previous.y, area.top, area.bottom);\n        model.controlPointNextX = capControlPoint(controlPoints.next.x, area.left, area.right);\n        model.controlPointNextY = capControlPoint(controlPoints.next.y, area.top, area.bottom);\n      }\n    },\n    setHoverStyle: function setHoverStyle(point) {\n      var model = point._model;\n      var options = point._options;\n      var getHoverColor = helpers$1.getHoverColor;\n      point.$previousStyle = {\n        backgroundColor: model.backgroundColor,\n        borderColor: model.borderColor,\n        borderWidth: model.borderWidth,\n        radius: model.radius\n      };\n      model.backgroundColor = valueOrDefault$6(options.hoverBackgroundColor, getHoverColor(options.backgroundColor));\n      model.borderColor = valueOrDefault$6(options.hoverBorderColor, getHoverColor(options.borderColor));\n      model.borderWidth = valueOrDefault$6(options.hoverBorderWidth, options.borderWidth);\n      model.radius = valueOrDefault$6(options.hoverRadius, options.radius);\n    }\n  });\n\n  core_defaults._set('scatter', {\n    hover: {\n      mode: 'single'\n    },\n    scales: {\n      xAxes: [{\n        id: 'x-axis-1',\n        // need an ID so datasets can reference the scale\n        type: 'linear',\n        // scatter should not use a category axis\n        position: 'bottom'\n      }],\n      yAxes: [{\n        id: 'y-axis-1',\n        type: 'linear',\n        position: 'left'\n      }]\n    },\n    showLines: false,\n    tooltips: {\n      callbacks: {\n        title: function title() {\n          return ''; // doesn't make sense for scatter since data are formatted as a point\n        },\n        label: function label(item) {\n          return '(' + item.xLabel + ', ' + item.yLabel + ')';\n        }\n      }\n    }\n  }); // Scatter charts use line controllers\n\n\n  var controller_scatter = controller_line; // NOTE export a map in which the key represents the controller type, not\n  // the class, and so must be CamelCase in order to be correctly retrieved\n  // by the controller in core.controller.js (`controllers[meta.type]`).\n\n  var controllers = {\n    bar: controller_bar,\n    bubble: controller_bubble,\n    doughnut: controller_doughnut,\n    horizontalBar: controller_horizontalBar,\n    line: controller_line,\n    polarArea: controller_polarArea,\n    pie: controller_pie,\n    radar: controller_radar,\n    scatter: controller_scatter\n  };\n  /**\n   * Helper function to get relative position for an event\n   * @param {Event|IEvent} event - The event to get the position for\n   * @param {Chart} chart - The chart\n   * @returns {object} the event position\n   */\n\n  function getRelativePosition(e, chart) {\n    if (e.native) {\n      return {\n        x: e.x,\n        y: e.y\n      };\n    }\n\n    return helpers$1.getRelativePosition(e, chart);\n  }\n  /**\n   * Helper function to traverse all of the visible elements in the chart\n   * @param {Chart} chart - the chart\n   * @param {function} handler - the callback to execute for each visible item\n   */\n\n\n  function parseVisibleItems(chart, handler) {\n    var datasets = chart.data.datasets;\n    var meta, i, j, ilen, jlen;\n\n    for (i = 0, ilen = datasets.length; i < ilen; ++i) {\n      if (!chart.isDatasetVisible(i)) {\n        continue;\n      }\n\n      meta = chart.getDatasetMeta(i);\n\n      for (j = 0, jlen = meta.data.length; j < jlen; ++j) {\n        var element = meta.data[j];\n\n        if (!element._view.skip) {\n          handler(element);\n        }\n      }\n    }\n  }\n  /**\n   * Helper function to get the items that intersect the event position\n   * @param {ChartElement[]} items - elements to filter\n   * @param {object} position - the point to be nearest to\n   * @return {ChartElement[]} the nearest items\n   */\n\n\n  function getIntersectItems(chart, position) {\n    var elements = [];\n    parseVisibleItems(chart, function (element) {\n      if (element.inRange(position.x, position.y)) {\n        elements.push(element);\n      }\n    });\n    return elements;\n  }\n  /**\n   * Helper function to get the items nearest to the event position considering all visible items in teh chart\n   * @param {Chart} chart - the chart to look at elements from\n   * @param {object} position - the point to be nearest to\n   * @param {boolean} intersect - if true, only consider items that intersect the position\n   * @param {function} distanceMetric - function to provide the distance between points\n   * @return {ChartElement[]} the nearest items\n   */\n\n\n  function getNearestItems(chart, position, intersect, distanceMetric) {\n    var minDistance = Number.POSITIVE_INFINITY;\n    var nearestItems = [];\n    parseVisibleItems(chart, function (element) {\n      if (intersect && !element.inRange(position.x, position.y)) {\n        return;\n      }\n\n      var center = element.getCenterPoint();\n      var distance = distanceMetric(position, center);\n\n      if (distance < minDistance) {\n        nearestItems = [element];\n        minDistance = distance;\n      } else if (distance === minDistance) {\n        // Can have multiple items at the same distance in which case we sort by size\n        nearestItems.push(element);\n      }\n    });\n    return nearestItems;\n  }\n  /**\n   * Get a distance metric function for two points based on the\n   * axis mode setting\n   * @param {string} axis - the axis mode. x|y|xy\n   */\n\n\n  function getDistanceMetricForAxis(axis) {\n    var useX = axis.indexOf('x') !== -1;\n    var useY = axis.indexOf('y') !== -1;\n    return function (pt1, pt2) {\n      var deltaX = useX ? Math.abs(pt1.x - pt2.x) : 0;\n      var deltaY = useY ? Math.abs(pt1.y - pt2.y) : 0;\n      return Math.sqrt(Math.pow(deltaX, 2) + Math.pow(deltaY, 2));\n    };\n  }\n\n  function indexMode(chart, e, options) {\n    var position = getRelativePosition(e, chart); // Default axis for index mode is 'x' to match old behaviour\n\n    options.axis = options.axis || 'x';\n    var distanceMetric = getDistanceMetricForAxis(options.axis);\n    var items = options.intersect ? getIntersectItems(chart, position) : getNearestItems(chart, position, false, distanceMetric);\n    var elements = [];\n\n    if (!items.length) {\n      return [];\n    }\n\n    chart.data.datasets.forEach(function (dataset, datasetIndex) {\n      if (chart.isDatasetVisible(datasetIndex)) {\n        var meta = chart.getDatasetMeta(datasetIndex);\n        var element = meta.data[items[0]._index]; // don't count items that are skipped (null data)\n\n        if (element && !element._view.skip) {\n          elements.push(element);\n        }\n      }\n    });\n    return elements;\n  }\n  /**\n   * @interface IInteractionOptions\n   */\n\n  /**\n   * If true, only consider items that intersect the point\n   * @name IInterfaceOptions#boolean\n   * @type Boolean\n   */\n\n  /**\n   * Contains interaction related functions\n   * @namespace Chart.Interaction\n   */\n\n\n  var core_interaction = {\n    // Helper function for different modes\n    modes: {\n      single: function single(chart, e) {\n        var position = getRelativePosition(e, chart);\n        var elements = [];\n        parseVisibleItems(chart, function (element) {\n          if (element.inRange(position.x, position.y)) {\n            elements.push(element);\n            return elements;\n          }\n        });\n        return elements.slice(0, 1);\n      },\n\n      /**\n       * @function Chart.Interaction.modes.label\n       * @deprecated since version 2.4.0\n       * @todo remove at version 3\n       * @private\n       */\n      label: indexMode,\n\n      /**\n       * Returns items at the same index. If the options.intersect parameter is true, we only return items if we intersect something\n       * If the options.intersect mode is false, we find the nearest item and return the items at the same index as that item\n       * @function Chart.Interaction.modes.index\n       * @since v2.4.0\n       * @param {Chart} chart - the chart we are returning items from\n       * @param {Event} e - the event we are find things at\n       * @param {IInteractionOptions} options - options to use during interaction\n       * @return {Chart.Element[]} Array of elements that are under the point. If none are found, an empty array is returned\n       */\n      index: indexMode,\n\n      /**\n       * Returns items in the same dataset. If the options.intersect parameter is true, we only return items if we intersect something\n       * If the options.intersect is false, we find the nearest item and return the items in that dataset\n       * @function Chart.Interaction.modes.dataset\n       * @param {Chart} chart - the chart we are returning items from\n       * @param {Event} e - the event we are find things at\n       * @param {IInteractionOptions} options - options to use during interaction\n       * @return {Chart.Element[]} Array of elements that are under the point. If none are found, an empty array is returned\n       */\n      dataset: function dataset(chart, e, options) {\n        var position = getRelativePosition(e, chart);\n        options.axis = options.axis || 'xy';\n        var distanceMetric = getDistanceMetricForAxis(options.axis);\n        var items = options.intersect ? getIntersectItems(chart, position) : getNearestItems(chart, position, false, distanceMetric);\n\n        if (items.length > 0) {\n          items = chart.getDatasetMeta(items[0]._datasetIndex).data;\n        }\n\n        return items;\n      },\n\n      /**\n       * @function Chart.Interaction.modes.x-axis\n       * @deprecated since version 2.4.0. Use index mode and intersect == true\n       * @todo remove at version 3\n       * @private\n       */\n      'x-axis': function xAxis(chart, e) {\n        return indexMode(chart, e, {\n          intersect: false\n        });\n      },\n\n      /**\n       * Point mode returns all elements that hit test based on the event position\n       * of the event\n       * @function Chart.Interaction.modes.intersect\n       * @param {Chart} chart - the chart we are returning items from\n       * @param {Event} e - the event we are find things at\n       * @return {Chart.Element[]} Array of elements that are under the point. If none are found, an empty array is returned\n       */\n      point: function point(chart, e) {\n        var position = getRelativePosition(e, chart);\n        return getIntersectItems(chart, position);\n      },\n\n      /**\n       * nearest mode returns the element closest to the point\n       * @function Chart.Interaction.modes.intersect\n       * @param {Chart} chart - the chart we are returning items from\n       * @param {Event} e - the event we are find things at\n       * @param {IInteractionOptions} options - options to use\n       * @return {Chart.Element[]} Array of elements that are under the point. If none are found, an empty array is returned\n       */\n      nearest: function nearest(chart, e, options) {\n        var position = getRelativePosition(e, chart);\n        options.axis = options.axis || 'xy';\n        var distanceMetric = getDistanceMetricForAxis(options.axis);\n        return getNearestItems(chart, position, options.intersect, distanceMetric);\n      },\n\n      /**\n       * x mode returns the elements that hit-test at the current x coordinate\n       * @function Chart.Interaction.modes.x\n       * @param {Chart} chart - the chart we are returning items from\n       * @param {Event} e - the event we are find things at\n       * @param {IInteractionOptions} options - options to use\n       * @return {Chart.Element[]} Array of elements that are under the point. If none are found, an empty array is returned\n       */\n      x: function x(chart, e, options) {\n        var position = getRelativePosition(e, chart);\n        var items = [];\n        var intersectsItem = false;\n        parseVisibleItems(chart, function (element) {\n          if (element.inXRange(position.x)) {\n            items.push(element);\n          }\n\n          if (element.inRange(position.x, position.y)) {\n            intersectsItem = true;\n          }\n        }); // If we want to trigger on an intersect and we don't have any items\n        // that intersect the position, return nothing\n\n        if (options.intersect && !intersectsItem) {\n          items = [];\n        }\n\n        return items;\n      },\n\n      /**\n       * y mode returns the elements that hit-test at the current y coordinate\n       * @function Chart.Interaction.modes.y\n       * @param {Chart} chart - the chart we are returning items from\n       * @param {Event} e - the event we are find things at\n       * @param {IInteractionOptions} options - options to use\n       * @return {Chart.Element[]} Array of elements that are under the point. If none are found, an empty array is returned\n       */\n      y: function y(chart, e, options) {\n        var position = getRelativePosition(e, chart);\n        var items = [];\n        var intersectsItem = false;\n        parseVisibleItems(chart, function (element) {\n          if (element.inYRange(position.y)) {\n            items.push(element);\n          }\n\n          if (element.inRange(position.x, position.y)) {\n            intersectsItem = true;\n          }\n        }); // If we want to trigger on an intersect and we don't have any items\n        // that intersect the position, return nothing\n\n        if (options.intersect && !intersectsItem) {\n          items = [];\n        }\n\n        return items;\n      }\n    }\n  };\n\n  function filterByPosition(array, position) {\n    return helpers$1.where(array, function (v) {\n      return v.position === position;\n    });\n  }\n\n  function sortByWeight(array, reverse) {\n    array.forEach(function (v, i) {\n      v._tmpIndex_ = i;\n      return v;\n    });\n    array.sort(function (a, b) {\n      var v0 = reverse ? b : a;\n      var v1 = reverse ? a : b;\n      return v0.weight === v1.weight ? v0._tmpIndex_ - v1._tmpIndex_ : v0.weight - v1.weight;\n    });\n    array.forEach(function (v) {\n      delete v._tmpIndex_;\n    });\n  }\n\n  function findMaxPadding(boxes) {\n    var top = 0;\n    var left = 0;\n    var bottom = 0;\n    var right = 0;\n    helpers$1.each(boxes, function (box) {\n      if (box.getPadding) {\n        var boxPadding = box.getPadding();\n        top = Math.max(top, boxPadding.top);\n        left = Math.max(left, boxPadding.left);\n        bottom = Math.max(bottom, boxPadding.bottom);\n        right = Math.max(right, boxPadding.right);\n      }\n    });\n    return {\n      top: top,\n      left: left,\n      bottom: bottom,\n      right: right\n    };\n  }\n\n  function addSizeByPosition(boxes, size) {\n    helpers$1.each(boxes, function (box) {\n      size[box.position] += box.isHorizontal() ? box.height : box.width;\n    });\n  }\n\n  core_defaults._set('global', {\n    layout: {\n      padding: {\n        top: 0,\n        right: 0,\n        bottom: 0,\n        left: 0\n      }\n    }\n  });\n  /**\n   * @interface ILayoutItem\n   * @prop {string} position - The position of the item in the chart layout. Possible values are\n   * 'left', 'top', 'right', 'bottom', and 'chartArea'\n   * @prop {number} weight - The weight used to sort the item. Higher weights are further away from the chart area\n   * @prop {boolean} fullWidth - if true, and the item is horizontal, then push vertical boxes down\n   * @prop {function} isHorizontal - returns true if the layout item is horizontal (ie. top or bottom)\n   * @prop {function} update - Takes two parameters: width and height. Returns size of item\n   * @prop {function} getPadding -  Returns an object with padding on the edges\n   * @prop {number} width - Width of item. Must be valid after update()\n   * @prop {number} height - Height of item. Must be valid after update()\n   * @prop {number} left - Left edge of the item. Set by layout system and cannot be used in update\n   * @prop {number} top - Top edge of the item. Set by layout system and cannot be used in update\n   * @prop {number} right - Right edge of the item. Set by layout system and cannot be used in update\n   * @prop {number} bottom - Bottom edge of the item. Set by layout system and cannot be used in update\n   */\n  // The layout service is very self explanatory.  It's responsible for the layout within a chart.\n  // Scales, Legends and Plugins all rely on the layout service and can easily register to be placed anywhere they need\n  // It is this service's responsibility of carrying out that layout.\n\n\n  var core_layouts = {\n    defaults: {},\n\n    /**\n     * Register a box to a chart.\n     * A box is simply a reference to an object that requires layout. eg. Scales, Legend, Title.\n     * @param {Chart} chart - the chart to use\n     * @param {ILayoutItem} item - the item to add to be layed out\n     */\n    addBox: function addBox(chart, item) {\n      if (!chart.boxes) {\n        chart.boxes = [];\n      } // initialize item with default values\n\n\n      item.fullWidth = item.fullWidth || false;\n      item.position = item.position || 'top';\n      item.weight = item.weight || 0;\n      chart.boxes.push(item);\n    },\n\n    /**\n     * Remove a layoutItem from a chart\n     * @param {Chart} chart - the chart to remove the box from\n     * @param {ILayoutItem} layoutItem - the item to remove from the layout\n     */\n    removeBox: function removeBox(chart, layoutItem) {\n      var index = chart.boxes ? chart.boxes.indexOf(layoutItem) : -1;\n\n      if (index !== -1) {\n        chart.boxes.splice(index, 1);\n      }\n    },\n\n    /**\n     * Sets (or updates) options on the given `item`.\n     * @param {Chart} chart - the chart in which the item lives (or will be added to)\n     * @param {ILayoutItem} item - the item to configure with the given options\n     * @param {object} options - the new item options.\n     */\n    configure: function configure(chart, item, options) {\n      var props = ['fullWidth', 'position', 'weight'];\n      var ilen = props.length;\n      var i = 0;\n      var prop;\n\n      for (; i < ilen; ++i) {\n        prop = props[i];\n\n        if (options.hasOwnProperty(prop)) {\n          item[prop] = options[prop];\n        }\n      }\n    },\n\n    /**\n     * Fits boxes of the given chart into the given size by having each box measure itself\n     * then running a fitting algorithm\n     * @param {Chart} chart - the chart\n     * @param {number} width - the width to fit into\n     * @param {number} height - the height to fit into\n     */\n    update: function update(chart, width, height) {\n      if (!chart) {\n        return;\n      }\n\n      var layoutOptions = chart.options.layout || {};\n      var padding = helpers$1.options.toPadding(layoutOptions.padding);\n      var leftPadding = padding.left;\n      var rightPadding = padding.right;\n      var topPadding = padding.top;\n      var bottomPadding = padding.bottom;\n      var leftBoxes = filterByPosition(chart.boxes, 'left');\n      var rightBoxes = filterByPosition(chart.boxes, 'right');\n      var topBoxes = filterByPosition(chart.boxes, 'top');\n      var bottomBoxes = filterByPosition(chart.boxes, 'bottom');\n      var chartAreaBoxes = filterByPosition(chart.boxes, 'chartArea'); // Sort boxes by weight. A higher weight is further away from the chart area\n\n      sortByWeight(leftBoxes, true);\n      sortByWeight(rightBoxes, false);\n      sortByWeight(topBoxes, true);\n      sortByWeight(bottomBoxes, false);\n      var verticalBoxes = leftBoxes.concat(rightBoxes);\n      var horizontalBoxes = topBoxes.concat(bottomBoxes);\n      var outerBoxes = verticalBoxes.concat(horizontalBoxes); // Essentially we now have any number of boxes on each of the 4 sides.\n      // Our canvas looks like the following.\n      // The areas L1 and L2 are the left axes. R1 is the right axis, T1 is the top axis and\n      // B1 is the bottom axis\n      // There are also 4 quadrant-like locations (left to right instead of clockwise) reserved for chart overlays\n      // These locations are single-box locations only, when trying to register a chartArea location that is already taken,\n      // an error will be thrown.\n      //\n      // |----------------------------------------------------|\n      // |                  T1 (Full Width)                   |\n      // |----------------------------------------------------|\n      // |    |    |                 T2                  |    |\n      // |    |----|-------------------------------------|----|\n      // |    |    | C1 |                           | C2 |    |\n      // |    |    |----|                           |----|    |\n      // |    |    |                                     |    |\n      // | L1 | L2 |           ChartArea (C0)            | R1 |\n      // |    |    |                                     |    |\n      // |    |    |----|                           |----|    |\n      // |    |    | C3 |                           | C4 |    |\n      // |    |----|-------------------------------------|----|\n      // |    |    |                 B1                  |    |\n      // |----------------------------------------------------|\n      // |                  B2 (Full Width)                   |\n      // |----------------------------------------------------|\n      //\n      // What we do to find the best sizing, we do the following\n      // 1. Determine the minimum size of the chart area.\n      // 2. Split the remaining width equally between each vertical axis\n      // 3. Split the remaining height equally between each horizontal axis\n      // 4. Give each layout the maximum size it can be. The layout will return it's minimum size\n      // 5. Adjust the sizes of each axis based on it's minimum reported size.\n      // 6. Refit each axis\n      // 7. Position each axis in the final location\n      // 8. Tell the chart the final location of the chart area\n      // 9. Tell any axes that overlay the chart area the positions of the chart area\n      // Step 1\n\n      var chartWidth = width - leftPadding - rightPadding;\n      var chartHeight = height - topPadding - bottomPadding;\n      var chartAreaWidth = chartWidth / 2; // min 50%\n      // Step 2\n\n      var verticalBoxWidth = (width - chartAreaWidth) / verticalBoxes.length; // Step 3\n      // TODO re-limit horizontal axis height (this limit has affected only padding calculation since PR 1837)\n      // var horizontalBoxHeight = (height - chartAreaHeight) / horizontalBoxes.length;\n      // Step 4\n\n      var maxChartAreaWidth = chartWidth;\n      var maxChartAreaHeight = chartHeight;\n      var outerBoxSizes = {\n        top: topPadding,\n        left: leftPadding,\n        bottom: bottomPadding,\n        right: rightPadding\n      };\n      var minBoxSizes = [];\n      var maxPadding;\n\n      function getMinimumBoxSize(box) {\n        var minSize;\n        var isHorizontal = box.isHorizontal();\n\n        if (isHorizontal) {\n          minSize = box.update(box.fullWidth ? chartWidth : maxChartAreaWidth, chartHeight / 2);\n          maxChartAreaHeight -= minSize.height;\n        } else {\n          minSize = box.update(verticalBoxWidth, maxChartAreaHeight);\n          maxChartAreaWidth -= minSize.width;\n        }\n\n        minBoxSizes.push({\n          horizontal: isHorizontal,\n          width: minSize.width,\n          box: box\n        });\n      }\n\n      helpers$1.each(outerBoxes, getMinimumBoxSize); // If a horizontal box has padding, we move the left boxes over to avoid ugly charts (see issue #2478)\n\n      maxPadding = findMaxPadding(outerBoxes); // At this point, maxChartAreaHeight and maxChartAreaWidth are the size the chart area could\n      // be if the axes are drawn at their minimum sizes.\n      // Steps 5 & 6\n      // Function to fit a box\n\n      function fitBox(box) {\n        var minBoxSize = helpers$1.findNextWhere(minBoxSizes, function (minBox) {\n          return minBox.box === box;\n        });\n\n        if (minBoxSize) {\n          if (minBoxSize.horizontal) {\n            var scaleMargin = {\n              left: Math.max(outerBoxSizes.left, maxPadding.left),\n              right: Math.max(outerBoxSizes.right, maxPadding.right),\n              top: 0,\n              bottom: 0\n            }; // Don't use min size here because of label rotation. When the labels are rotated, their rotation highly depends\n            // on the margin. Sometimes they need to increase in size slightly\n\n            box.update(box.fullWidth ? chartWidth : maxChartAreaWidth, chartHeight / 2, scaleMargin);\n          } else {\n            box.update(minBoxSize.width, maxChartAreaHeight);\n          }\n        }\n      } // Update, and calculate the left and right margins for the horizontal boxes\n\n\n      helpers$1.each(verticalBoxes, fitBox);\n      addSizeByPosition(verticalBoxes, outerBoxSizes); // Set the Left and Right margins for the horizontal boxes\n\n      helpers$1.each(horizontalBoxes, fitBox);\n      addSizeByPosition(horizontalBoxes, outerBoxSizes);\n\n      function finalFitVerticalBox(box) {\n        var minBoxSize = helpers$1.findNextWhere(minBoxSizes, function (minSize) {\n          return minSize.box === box;\n        });\n        var scaleMargin = {\n          left: 0,\n          right: 0,\n          top: outerBoxSizes.top,\n          bottom: outerBoxSizes.bottom\n        };\n\n        if (minBoxSize) {\n          box.update(minBoxSize.width, maxChartAreaHeight, scaleMargin);\n        }\n      } // Let the left layout know the final margin\n\n\n      helpers$1.each(verticalBoxes, finalFitVerticalBox); // Recalculate because the size of each layout might have changed slightly due to the margins (label rotation for instance)\n\n      outerBoxSizes = {\n        top: topPadding,\n        left: leftPadding,\n        bottom: bottomPadding,\n        right: rightPadding\n      };\n      addSizeByPosition(outerBoxes, outerBoxSizes); // We may be adding some padding to account for rotated x axis labels\n\n      var leftPaddingAddition = Math.max(maxPadding.left - outerBoxSizes.left, 0);\n      outerBoxSizes.left += leftPaddingAddition;\n      outerBoxSizes.right += Math.max(maxPadding.right - outerBoxSizes.right, 0);\n      var topPaddingAddition = Math.max(maxPadding.top - outerBoxSizes.top, 0);\n      outerBoxSizes.top += topPaddingAddition;\n      outerBoxSizes.bottom += Math.max(maxPadding.bottom - outerBoxSizes.bottom, 0); // Figure out if our chart area changed. This would occur if the dataset layout label rotation\n      // changed due to the application of the margins in step 6. Since we can only get bigger, this is safe to do\n      // without calling `fit` again\n\n      var newMaxChartAreaHeight = height - outerBoxSizes.top - outerBoxSizes.bottom;\n      var newMaxChartAreaWidth = width - outerBoxSizes.left - outerBoxSizes.right;\n\n      if (newMaxChartAreaWidth !== maxChartAreaWidth || newMaxChartAreaHeight !== maxChartAreaHeight) {\n        helpers$1.each(verticalBoxes, function (box) {\n          box.height = newMaxChartAreaHeight;\n        });\n        helpers$1.each(horizontalBoxes, function (box) {\n          if (!box.fullWidth) {\n            box.width = newMaxChartAreaWidth;\n          }\n        });\n        maxChartAreaHeight = newMaxChartAreaHeight;\n        maxChartAreaWidth = newMaxChartAreaWidth;\n      } // Step 7 - Position the boxes\n\n\n      var left = leftPadding + leftPaddingAddition;\n      var top = topPadding + topPaddingAddition;\n\n      function placeBox(box) {\n        if (box.isHorizontal()) {\n          box.left = box.fullWidth ? leftPadding : outerBoxSizes.left;\n          box.right = box.fullWidth ? width - rightPadding : outerBoxSizes.left + maxChartAreaWidth;\n          box.top = top;\n          box.bottom = top + box.height; // Move to next point\n\n          top = box.bottom;\n        } else {\n          box.left = left;\n          box.right = left + box.width;\n          box.top = outerBoxSizes.top;\n          box.bottom = outerBoxSizes.top + maxChartAreaHeight; // Move to next point\n\n          left = box.right;\n        }\n      }\n\n      helpers$1.each(leftBoxes.concat(topBoxes), placeBox); // Account for chart width and height\n\n      left += maxChartAreaWidth;\n      top += maxChartAreaHeight;\n      helpers$1.each(rightBoxes, placeBox);\n      helpers$1.each(bottomBoxes, placeBox); // Step 8\n\n      chart.chartArea = {\n        left: outerBoxSizes.left,\n        top: outerBoxSizes.top,\n        right: outerBoxSizes.left + maxChartAreaWidth,\n        bottom: outerBoxSizes.top + maxChartAreaHeight\n      }; // Step 9\n\n      helpers$1.each(chartAreaBoxes, function (box) {\n        box.left = chart.chartArea.left;\n        box.top = chart.chartArea.top;\n        box.right = chart.chartArea.right;\n        box.bottom = chart.chartArea.bottom;\n        box.update(maxChartAreaWidth, maxChartAreaHeight);\n      });\n    }\n  };\n  /**\n   * Platform fallback implementation (minimal).\n   * @see https://github.com/chartjs/Chart.js/pull/4591#issuecomment-319575939\n   */\n\n  var platform_basic = {\n    acquireContext: function acquireContext(item) {\n      if (item && item.canvas) {\n        // Support for any object associated to a canvas (including a context2d)\n        item = item.canvas;\n      }\n\n      return item && item.getContext('2d') || null;\n    }\n  };\n  var platform_dom = \"/*\\n * DOM element rendering detection\\n * https://davidwalsh.name/detect-node-insertion\\n */\\n@keyframes chartjs-render-animation {\\n\\tfrom { opacity: 0.99; }\\n\\tto { opacity: 1; }\\n}\\n\\n.chartjs-render-monitor {\\n\\tanimation: chartjs-render-animation 0.001s;\\n}\\n\\n/*\\n * DOM element resizing detection\\n * https://github.com/marcj/css-element-queries\\n */\\n.chartjs-size-monitor,\\n.chartjs-size-monitor-expand,\\n.chartjs-size-monitor-shrink {\\n\\tposition: absolute;\\n\\tdirection: ltr;\\n\\tleft: 0;\\n\\ttop: 0;\\n\\tright: 0;\\n\\tbottom: 0;\\n\\toverflow: hidden;\\n\\tpointer-events: none;\\n\\tvisibility: hidden;\\n\\tz-index: -1;\\n}\\n\\n.chartjs-size-monitor-expand > div {\\n\\tposition: absolute;\\n\\twidth: 1000000px;\\n\\theight: 1000000px;\\n\\tleft: 0;\\n\\ttop: 0;\\n}\\n\\n.chartjs-size-monitor-shrink > div {\\n\\tposition: absolute;\\n\\twidth: 200%;\\n\\theight: 200%;\\n\\tleft: 0;\\n\\ttop: 0;\\n}\\n\";\n  var platform_dom$1 =\n  /*#__PURE__*/\n  Object.freeze({\n    default: platform_dom\n  });\n\n  function getCjsExportFromNamespace(n) {\n    return n && n.default || n;\n  }\n\n  var stylesheet = getCjsExportFromNamespace(platform_dom$1);\n  var EXPANDO_KEY = '$chartjs';\n  var CSS_PREFIX = 'chartjs-';\n  var CSS_SIZE_MONITOR = CSS_PREFIX + 'size-monitor';\n  var CSS_RENDER_MONITOR = CSS_PREFIX + 'render-monitor';\n  var CSS_RENDER_ANIMATION = CSS_PREFIX + 'render-animation';\n  var ANIMATION_START_EVENTS = ['animationstart', 'webkitAnimationStart'];\n  /**\n   * DOM event types -> Chart.js event types.\n   * Note: only events with different types are mapped.\n   * @see https://developer.mozilla.org/en-US/docs/Web/Events\n   */\n\n  var EVENT_TYPES = {\n    touchstart: 'mousedown',\n    touchmove: 'mousemove',\n    touchend: 'mouseup',\n    pointerenter: 'mouseenter',\n    pointerdown: 'mousedown',\n    pointermove: 'mousemove',\n    pointerup: 'mouseup',\n    pointerleave: 'mouseout',\n    pointerout: 'mouseout'\n  };\n  /**\n   * The \"used\" size is the final value of a dimension property after all calculations have\n   * been performed. This method uses the computed style of `element` but returns undefined\n   * if the computed style is not expressed in pixels. That can happen in some cases where\n   * `element` has a size relative to its parent and this last one is not yet displayed,\n   * for example because of `display: none` on a parent node.\n   * @see https://developer.mozilla.org/en-US/docs/Web/CSS/used_value\n   * @returns {number} Size in pixels or undefined if unknown.\n   */\n\n  function readUsedSize(element, property) {\n    var value = helpers$1.getStyle(element, property);\n    var matches = value && value.match(/^(\\d+)(\\.\\d+)?px$/);\n    return matches ? Number(matches[1]) : undefined;\n  }\n  /**\n   * Initializes the canvas style and render size without modifying the canvas display size,\n   * since responsiveness is handled by the controller.resize() method. The config is used\n   * to determine the aspect ratio to apply in case no explicit height has been specified.\n   */\n\n\n  function initCanvas(canvas, config) {\n    var style = canvas.style; // NOTE(SB) canvas.getAttribute('width') !== canvas.width: in the first case it\n    // returns null or '' if no explicit value has been set to the canvas attribute.\n\n    var renderHeight = canvas.getAttribute('height');\n    var renderWidth = canvas.getAttribute('width'); // Chart.js modifies some canvas values that we want to restore on destroy\n\n    canvas[EXPANDO_KEY] = {\n      initial: {\n        height: renderHeight,\n        width: renderWidth,\n        style: {\n          display: style.display,\n          height: style.height,\n          width: style.width\n        }\n      }\n    }; // Force canvas to display as block to avoid extra space caused by inline\n    // elements, which would interfere with the responsive resize process.\n    // https://github.com/chartjs/Chart.js/issues/2538\n\n    style.display = style.display || 'block';\n\n    if (renderWidth === null || renderWidth === '') {\n      var displayWidth = readUsedSize(canvas, 'width');\n\n      if (displayWidth !== undefined) {\n        canvas.width = displayWidth;\n      }\n    }\n\n    if (renderHeight === null || renderHeight === '') {\n      if (canvas.style.height === '') {\n        // If no explicit render height and style height, let's apply the aspect ratio,\n        // which one can be specified by the user but also by charts as default option\n        // (i.e. options.aspectRatio). If not specified, use canvas aspect ratio of 2.\n        canvas.height = canvas.width / (config.options.aspectRatio || 2);\n      } else {\n        var displayHeight = readUsedSize(canvas, 'height');\n\n        if (displayWidth !== undefined) {\n          canvas.height = displayHeight;\n        }\n      }\n    }\n\n    return canvas;\n  }\n  /**\n   * Detects support for options object argument in addEventListener.\n   * https://developer.mozilla.org/en-US/docs/Web/API/EventTarget/addEventListener#Safely_detecting_option_support\n   * @private\n   */\n\n\n  var supportsEventListenerOptions = function () {\n    var supports = false;\n\n    try {\n      var options = Object.defineProperty({}, 'passive', {\n        // eslint-disable-next-line getter-return\n        get: function get() {\n          supports = true;\n        }\n      });\n      window.addEventListener('e', null, options);\n    } catch (e) {// continue regardless of error\n    }\n\n    return supports;\n  }(); // Default passive to true as expected by Chrome for 'touchstart' and 'touchend' events.\n  // https://github.com/chartjs/Chart.js/issues/4287\n\n\n  var eventListenerOptions = supportsEventListenerOptions ? {\n    passive: true\n  } : false;\n\n  function addListener(node, type, listener) {\n    node.addEventListener(type, listener, eventListenerOptions);\n  }\n\n  function removeListener(node, type, listener) {\n    node.removeEventListener(type, listener, eventListenerOptions);\n  }\n\n  function createEvent(type, chart, x, y, nativeEvent) {\n    return {\n      type: type,\n      chart: chart,\n      native: nativeEvent || null,\n      x: x !== undefined ? x : null,\n      y: y !== undefined ? y : null\n    };\n  }\n\n  function fromNativeEvent(event, chart) {\n    var type = EVENT_TYPES[event.type] || event.type;\n    var pos = helpers$1.getRelativePosition(event, chart);\n    return createEvent(type, chart, pos.x, pos.y, event);\n  }\n\n  function throttled(fn, thisArg) {\n    var ticking = false;\n    var args = [];\n    return function () {\n      args = Array.prototype.slice.call(arguments);\n      thisArg = thisArg || this;\n\n      if (!ticking) {\n        ticking = true;\n        helpers$1.requestAnimFrame.call(window, function () {\n          ticking = false;\n          fn.apply(thisArg, args);\n        });\n      }\n    };\n  }\n\n  function createDiv(cls) {\n    var el = document.createElement('div');\n    el.className = cls || '';\n    return el;\n  } // Implementation based on https://github.com/marcj/css-element-queries\n\n\n  function createResizer(handler) {\n    var maxSize = 1000000; // NOTE(SB) Don't use innerHTML because it could be considered unsafe.\n    // https://github.com/chartjs/Chart.js/issues/5902\n\n    var resizer = createDiv(CSS_SIZE_MONITOR);\n    var expand = createDiv(CSS_SIZE_MONITOR + '-expand');\n    var shrink = createDiv(CSS_SIZE_MONITOR + '-shrink');\n    expand.appendChild(createDiv());\n    shrink.appendChild(createDiv());\n    resizer.appendChild(expand);\n    resizer.appendChild(shrink);\n\n    resizer._reset = function () {\n      expand.scrollLeft = maxSize;\n      expand.scrollTop = maxSize;\n      shrink.scrollLeft = maxSize;\n      shrink.scrollTop = maxSize;\n    };\n\n    var onScroll = function onScroll() {\n      resizer._reset();\n\n      handler();\n    };\n\n    addListener(expand, 'scroll', onScroll.bind(expand, 'expand'));\n    addListener(shrink, 'scroll', onScroll.bind(shrink, 'shrink'));\n    return resizer;\n  } // https://davidwalsh.name/detect-node-insertion\n\n\n  function watchForRender(node, handler) {\n    var expando = node[EXPANDO_KEY] || (node[EXPANDO_KEY] = {});\n\n    var proxy = expando.renderProxy = function (e) {\n      if (e.animationName === CSS_RENDER_ANIMATION) {\n        handler();\n      }\n    };\n\n    helpers$1.each(ANIMATION_START_EVENTS, function (type) {\n      addListener(node, type, proxy);\n    }); // #4737: Chrome might skip the CSS animation when the CSS_RENDER_MONITOR class\n    // is removed then added back immediately (same animation frame?). Accessing the\n    // `offsetParent` property will force a reflow and re-evaluate the CSS animation.\n    // https://gist.github.com/paulirish/5d52fb081b3570c81e3a#box-metrics\n    // https://github.com/chartjs/Chart.js/issues/4737\n\n    expando.reflow = !!node.offsetParent;\n    node.classList.add(CSS_RENDER_MONITOR);\n  }\n\n  function unwatchForRender(node) {\n    var expando = node[EXPANDO_KEY] || {};\n    var proxy = expando.renderProxy;\n\n    if (proxy) {\n      helpers$1.each(ANIMATION_START_EVENTS, function (type) {\n        removeListener(node, type, proxy);\n      });\n      delete expando.renderProxy;\n    }\n\n    node.classList.remove(CSS_RENDER_MONITOR);\n  }\n\n  function addResizeListener(node, listener, chart) {\n    var expando = node[EXPANDO_KEY] || (node[EXPANDO_KEY] = {}); // Let's keep track of this added resizer and thus avoid DOM query when removing it.\n\n    var resizer = expando.resizer = createResizer(throttled(function () {\n      if (expando.resizer) {\n        var container = chart.options.maintainAspectRatio && node.parentNode;\n        var w = container ? container.clientWidth : 0;\n        listener(createEvent('resize', chart));\n\n        if (container && container.clientWidth < w && chart.canvas) {\n          // If the container size shrank during chart resize, let's assume\n          // scrollbar appeared. So we resize again with the scrollbar visible -\n          // effectively making chart smaller and the scrollbar hidden again.\n          // Because we are inside `throttled`, and currently `ticking`, scroll\n          // events are ignored during this whole 2 resize process.\n          // If we assumed wrong and something else happened, we are resizing\n          // twice in a frame (potential performance issue)\n          listener(createEvent('resize', chart));\n        }\n      }\n    })); // The resizer needs to be attached to the node parent, so we first need to be\n    // sure that `node` is attached to the DOM before injecting the resizer element.\n\n    watchForRender(node, function () {\n      if (expando.resizer) {\n        var container = node.parentNode;\n\n        if (container && container !== resizer.parentNode) {\n          container.insertBefore(resizer, container.firstChild);\n        } // The container size might have changed, let's reset the resizer state.\n\n\n        resizer._reset();\n      }\n    });\n  }\n\n  function removeResizeListener(node) {\n    var expando = node[EXPANDO_KEY] || {};\n    var resizer = expando.resizer;\n    delete expando.resizer;\n    unwatchForRender(node);\n\n    if (resizer && resizer.parentNode) {\n      resizer.parentNode.removeChild(resizer);\n    }\n  }\n\n  function injectCSS(platform, css) {\n    // https://stackoverflow.com/q/3922139\n    var style = platform._style || document.createElement('style');\n\n    if (!platform._style) {\n      platform._style = style;\n      css = '/* Chart.js */\\n' + css;\n      style.setAttribute('type', 'text/css');\n      document.getElementsByTagName('head')[0].appendChild(style);\n    }\n\n    style.appendChild(document.createTextNode(css));\n  }\n\n  var platform_dom$2 = {\n    /**\n     * When `true`, prevents the automatic injection of the stylesheet required to\n     * correctly detect when the chart is added to the DOM and then resized. This\n     * switch has been added to allow external stylesheet (`dist/Chart(.min)?.js`)\n     * to be manually imported to make this library compatible with any CSP.\n     * See https://github.com/chartjs/Chart.js/issues/5208\n     */\n    disableCSSInjection: false,\n\n    /**\n     * This property holds whether this platform is enabled for the current environment.\n     * Currently used by platform.js to select the proper implementation.\n     * @private\n     */\n    _enabled: typeof window !== 'undefined' && typeof document !== 'undefined',\n\n    /**\n     * @private\n     */\n    _ensureLoaded: function _ensureLoaded() {\n      if (this._loaded) {\n        return;\n      }\n\n      this._loaded = true; // https://github.com/chartjs/Chart.js/issues/5208\n\n      if (!this.disableCSSInjection) {\n        injectCSS(this, stylesheet);\n      }\n    },\n    acquireContext: function acquireContext(item, config) {\n      if (typeof item === 'string') {\n        item = document.getElementById(item);\n      } else if (item.length) {\n        // Support for array based queries (such as jQuery)\n        item = item[0];\n      }\n\n      if (item && item.canvas) {\n        // Support for any object associated to a canvas (including a context2d)\n        item = item.canvas;\n      } // To prevent canvas fingerprinting, some add-ons undefine the getContext\n      // method, for example: https://github.com/kkapsner/CanvasBlocker\n      // https://github.com/chartjs/Chart.js/issues/2807\n\n\n      var context = item && item.getContext && item.getContext('2d'); // Load platform resources on first chart creation, to make possible to change\n      // platform options after importing the library (e.g. `disableCSSInjection`).\n\n      this._ensureLoaded(); // `instanceof HTMLCanvasElement/CanvasRenderingContext2D` fails when the item is\n      // inside an iframe or when running in a protected environment. We could guess the\n      // types from their toString() value but let's keep things flexible and assume it's\n      // a sufficient condition if the item has a context2D which has item as `canvas`.\n      // https://github.com/chartjs/Chart.js/issues/3887\n      // https://github.com/chartjs/Chart.js/issues/4102\n      // https://github.com/chartjs/Chart.js/issues/4152\n\n\n      if (context && context.canvas === item) {\n        initCanvas(item, config);\n        return context;\n      }\n\n      return null;\n    },\n    releaseContext: function releaseContext(context) {\n      var canvas = context.canvas;\n\n      if (!canvas[EXPANDO_KEY]) {\n        return;\n      }\n\n      var initial = canvas[EXPANDO_KEY].initial;\n      ['height', 'width'].forEach(function (prop) {\n        var value = initial[prop];\n\n        if (helpers$1.isNullOrUndef(value)) {\n          canvas.removeAttribute(prop);\n        } else {\n          canvas.setAttribute(prop, value);\n        }\n      });\n      helpers$1.each(initial.style || {}, function (value, key) {\n        canvas.style[key] = value;\n      }); // The canvas render size might have been changed (and thus the state stack discarded),\n      // we can't use save() and restore() to restore the initial state. So make sure that at\n      // least the canvas context is reset to the default state by setting the canvas width.\n      // https://www.w3.org/TR/2011/WD-html5-20110525/the-canvas-element.html\n      // eslint-disable-next-line no-self-assign\n\n      canvas.width = canvas.width;\n      delete canvas[EXPANDO_KEY];\n    },\n    addEventListener: function addEventListener(chart, type, listener) {\n      var canvas = chart.canvas;\n\n      if (type === 'resize') {\n        // Note: the resize event is not supported on all browsers.\n        addResizeListener(canvas, listener, chart);\n        return;\n      }\n\n      var expando = listener[EXPANDO_KEY] || (listener[EXPANDO_KEY] = {});\n      var proxies = expando.proxies || (expando.proxies = {});\n\n      var proxy = proxies[chart.id + '_' + type] = function (event) {\n        listener(fromNativeEvent(event, chart));\n      };\n\n      addListener(canvas, type, proxy);\n    },\n    removeEventListener: function removeEventListener(chart, type, listener) {\n      var canvas = chart.canvas;\n\n      if (type === 'resize') {\n        // Note: the resize event is not supported on all browsers.\n        removeResizeListener(canvas);\n        return;\n      }\n\n      var expando = listener[EXPANDO_KEY] || {};\n      var proxies = expando.proxies || {};\n      var proxy = proxies[chart.id + '_' + type];\n\n      if (!proxy) {\n        return;\n      }\n\n      removeListener(canvas, type, proxy);\n    }\n  }; // DEPRECATIONS\n\n  /**\n   * Provided for backward compatibility, use EventTarget.addEventListener instead.\n   * EventTarget.addEventListener compatibility: Chrome, Opera 7, Safari, FF1.5+, IE9+\n   * @see https://developer.mozilla.org/en-US/docs/Web/API/EventTarget/addEventListener\n   * @function Chart.helpers.addEvent\n   * @deprecated since version 2.7.0\n   * @todo remove at version 3\n   * @private\n   */\n\n  helpers$1.addEvent = addListener;\n  /**\n   * Provided for backward compatibility, use EventTarget.removeEventListener instead.\n   * EventTarget.removeEventListener compatibility: Chrome, Opera 7, Safari, FF1.5+, IE9+\n   * @see https://developer.mozilla.org/en-US/docs/Web/API/EventTarget/removeEventListener\n   * @function Chart.helpers.removeEvent\n   * @deprecated since version 2.7.0\n   * @todo remove at version 3\n   * @private\n   */\n\n  helpers$1.removeEvent = removeListener; // @TODO Make possible to select another platform at build time.\n\n  var implementation = platform_dom$2._enabled ? platform_dom$2 : platform_basic;\n  /**\n   * @namespace Chart.platform\n   * @see https://chartjs.gitbooks.io/proposals/content/Platform.html\n   * @since 2.4.0\n   */\n\n  var platform = helpers$1.extend({\n    /**\n     * @since 2.7.0\n     */\n    initialize: function initialize() {},\n\n    /**\n     * Called at chart construction time, returns a context2d instance implementing\n     * the [W3C Canvas 2D Context API standard]{@link https://www.w3.org/TR/2dcontext/}.\n     * @param {*} item - The native item from which to acquire context (platform specific)\n     * @param {object} options - The chart options\n     * @returns {CanvasRenderingContext2D} context2d instance\n     */\n    acquireContext: function acquireContext() {},\n\n    /**\n     * Called at chart destruction time, releases any resources associated to the context\n     * previously returned by the acquireContext() method.\n     * @param {CanvasRenderingContext2D} context - The context2d instance\n     * @returns {boolean} true if the method succeeded, else false\n     */\n    releaseContext: function releaseContext() {},\n\n    /**\n     * Registers the specified listener on the given chart.\n     * @param {Chart} chart - Chart from which to listen for event\n     * @param {string} type - The ({@link IEvent}) type to listen for\n     * @param {function} listener - Receives a notification (an object that implements\n     * the {@link IEvent} interface) when an event of the specified type occurs.\n     */\n    addEventListener: function addEventListener() {},\n\n    /**\n     * Removes the specified listener previously registered with addEventListener.\n     * @param {Chart} chart - Chart from which to remove the listener\n     * @param {string} type - The ({@link IEvent}) type to remove\n     * @param {function} listener - The listener function to remove from the event target.\n     */\n    removeEventListener: function removeEventListener() {}\n  }, implementation);\n\n  core_defaults._set('global', {\n    plugins: {}\n  });\n  /**\n   * The plugin service singleton\n   * @namespace Chart.plugins\n   * @since 2.1.0\n   */\n\n\n  var core_plugins = {\n    /**\n     * Globally registered plugins.\n     * @private\n     */\n    _plugins: [],\n\n    /**\n     * This identifier is used to invalidate the descriptors cache attached to each chart\n     * when a global plugin is registered or unregistered. In this case, the cache ID is\n     * incremented and descriptors are regenerated during following API calls.\n     * @private\n     */\n    _cacheId: 0,\n\n    /**\n     * Registers the given plugin(s) if not already registered.\n     * @param {IPlugin[]|IPlugin} plugins plugin instance(s).\n     */\n    register: function register(plugins) {\n      var p = this._plugins;\n      [].concat(plugins).forEach(function (plugin) {\n        if (p.indexOf(plugin) === -1) {\n          p.push(plugin);\n        }\n      });\n      this._cacheId++;\n    },\n\n    /**\n     * Unregisters the given plugin(s) only if registered.\n     * @param {IPlugin[]|IPlugin} plugins plugin instance(s).\n     */\n    unregister: function unregister(plugins) {\n      var p = this._plugins;\n      [].concat(plugins).forEach(function (plugin) {\n        var idx = p.indexOf(plugin);\n\n        if (idx !== -1) {\n          p.splice(idx, 1);\n        }\n      });\n      this._cacheId++;\n    },\n\n    /**\n     * Remove all registered plugins.\n     * @since 2.1.5\n     */\n    clear: function clear() {\n      this._plugins = [];\n      this._cacheId++;\n    },\n\n    /**\n     * Returns the number of registered plugins?\n     * @returns {number}\n     * @since 2.1.5\n     */\n    count: function count() {\n      return this._plugins.length;\n    },\n\n    /**\n     * Returns all registered plugin instances.\n     * @returns {IPlugin[]} array of plugin objects.\n     * @since 2.1.5\n     */\n    getAll: function getAll() {\n      return this._plugins;\n    },\n\n    /**\n     * Calls enabled plugins for `chart` on the specified hook and with the given args.\n     * This method immediately returns as soon as a plugin explicitly returns false. The\n     * returned value can be used, for instance, to interrupt the current action.\n     * @param {Chart} chart - The chart instance for which plugins should be called.\n     * @param {string} hook - The name of the plugin method to call (e.g. 'beforeUpdate').\n     * @param {Array} [args] - Extra arguments to apply to the hook call.\n     * @returns {boolean} false if any of the plugins return false, else returns true.\n     */\n    notify: function notify(chart, hook, args) {\n      var descriptors = this.descriptors(chart);\n      var ilen = descriptors.length;\n      var i, descriptor, plugin, params, method;\n\n      for (i = 0; i < ilen; ++i) {\n        descriptor = descriptors[i];\n        plugin = descriptor.plugin;\n        method = plugin[hook];\n\n        if (typeof method === 'function') {\n          params = [chart].concat(args || []);\n          params.push(descriptor.options);\n\n          if (method.apply(plugin, params) === false) {\n            return false;\n          }\n        }\n      }\n\n      return true;\n    },\n\n    /**\n     * Returns descriptors of enabled plugins for the given chart.\n     * @returns {object[]} [{ plugin, options }]\n     * @private\n     */\n    descriptors: function descriptors(chart) {\n      var cache = chart.$plugins || (chart.$plugins = {});\n\n      if (cache.id === this._cacheId) {\n        return cache.descriptors;\n      }\n\n      var plugins = [];\n      var descriptors = [];\n      var config = chart && chart.config || {};\n      var options = config.options && config.options.plugins || {};\n\n      this._plugins.concat(config.plugins || []).forEach(function (plugin) {\n        var idx = plugins.indexOf(plugin);\n\n        if (idx !== -1) {\n          return;\n        }\n\n        var id = plugin.id;\n        var opts = options[id];\n\n        if (opts === false) {\n          return;\n        }\n\n        if (opts === true) {\n          opts = helpers$1.clone(core_defaults.global.plugins[id]);\n        }\n\n        plugins.push(plugin);\n        descriptors.push({\n          plugin: plugin,\n          options: opts || {}\n        });\n      });\n\n      cache.descriptors = descriptors;\n      cache.id = this._cacheId;\n      return descriptors;\n    },\n\n    /**\n     * Invalidates cache for the given chart: descriptors hold a reference on plugin option,\n     * but in some cases, this reference can be changed by the user when updating options.\n     * https://github.com/chartjs/Chart.js/issues/5111#issuecomment-355934167\n     * @private\n     */\n    _invalidate: function _invalidate(chart) {\n      delete chart.$plugins;\n    }\n  };\n  var core_scaleService = {\n    // Scale registration object. Extensions can register new scale types (such as log or DB scales) and then\n    // use the new chart options to grab the correct scale\n    constructors: {},\n    // Use a registration function so that we can move to an ES6 map when we no longer need to support\n    // old browsers\n    // Scale config defaults\n    defaults: {},\n    registerScaleType: function registerScaleType(type, scaleConstructor, scaleDefaults) {\n      this.constructors[type] = scaleConstructor;\n      this.defaults[type] = helpers$1.clone(scaleDefaults);\n    },\n    getScaleConstructor: function getScaleConstructor(type) {\n      return this.constructors.hasOwnProperty(type) ? this.constructors[type] : undefined;\n    },\n    getScaleDefaults: function getScaleDefaults(type) {\n      // Return the scale defaults merged with the global settings so that we always use the latest ones\n      return this.defaults.hasOwnProperty(type) ? helpers$1.merge({}, [core_defaults.scale, this.defaults[type]]) : {};\n    },\n    updateScaleDefaults: function updateScaleDefaults(type, additions) {\n      var me = this;\n\n      if (me.defaults.hasOwnProperty(type)) {\n        me.defaults[type] = helpers$1.extend(me.defaults[type], additions);\n      }\n    },\n    addScalesToLayout: function addScalesToLayout(chart) {\n      // Adds each scale to the chart.boxes array to be sized accordingly\n      helpers$1.each(chart.scales, function (scale) {\n        // Set ILayoutItem parameters for backwards compatibility\n        scale.fullWidth = scale.options.fullWidth;\n        scale.position = scale.options.position;\n        scale.weight = scale.options.weight;\n        core_layouts.addBox(chart, scale);\n      });\n    }\n  };\n  var valueOrDefault$7 = helpers$1.valueOrDefault;\n\n  core_defaults._set('global', {\n    tooltips: {\n      enabled: true,\n      custom: null,\n      mode: 'nearest',\n      position: 'average',\n      intersect: true,\n      backgroundColor: 'rgba(0,0,0,0.8)',\n      titleFontStyle: 'bold',\n      titleSpacing: 2,\n      titleMarginBottom: 6,\n      titleFontColor: '#fff',\n      titleAlign: 'left',\n      bodySpacing: 2,\n      bodyFontColor: '#fff',\n      bodyAlign: 'left',\n      footerFontStyle: 'bold',\n      footerSpacing: 2,\n      footerMarginTop: 6,\n      footerFontColor: '#fff',\n      footerAlign: 'left',\n      yPadding: 6,\n      xPadding: 6,\n      caretPadding: 2,\n      caretSize: 5,\n      cornerRadius: 6,\n      multiKeyBackground: '#fff',\n      displayColors: true,\n      borderColor: 'rgba(0,0,0,0)',\n      borderWidth: 0,\n      callbacks: {\n        // Args are: (tooltipItems, data)\n        beforeTitle: helpers$1.noop,\n        title: function title(tooltipItems, data) {\n          var title = '';\n          var labels = data.labels;\n          var labelCount = labels ? labels.length : 0;\n\n          if (tooltipItems.length > 0) {\n            var item = tooltipItems[0];\n\n            if (item.label) {\n              title = item.label;\n            } else if (item.xLabel) {\n              title = item.xLabel;\n            } else if (labelCount > 0 && item.index < labelCount) {\n              title = labels[item.index];\n            }\n          }\n\n          return title;\n        },\n        afterTitle: helpers$1.noop,\n        // Args are: (tooltipItems, data)\n        beforeBody: helpers$1.noop,\n        // Args are: (tooltipItem, data)\n        beforeLabel: helpers$1.noop,\n        label: function label(tooltipItem, data) {\n          var label = data.datasets[tooltipItem.datasetIndex].label || '';\n\n          if (label) {\n            label += ': ';\n          }\n\n          if (!helpers$1.isNullOrUndef(tooltipItem.value)) {\n            label += tooltipItem.value;\n          } else {\n            label += tooltipItem.yLabel;\n          }\n\n          return label;\n        },\n        labelColor: function labelColor(tooltipItem, chart) {\n          var meta = chart.getDatasetMeta(tooltipItem.datasetIndex);\n          var activeElement = meta.data[tooltipItem.index];\n          var view = activeElement._view;\n          return {\n            borderColor: view.borderColor,\n            backgroundColor: view.backgroundColor\n          };\n        },\n        labelTextColor: function labelTextColor() {\n          return this._options.bodyFontColor;\n        },\n        afterLabel: helpers$1.noop,\n        // Args are: (tooltipItems, data)\n        afterBody: helpers$1.noop,\n        // Args are: (tooltipItems, data)\n        beforeFooter: helpers$1.noop,\n        footer: helpers$1.noop,\n        afterFooter: helpers$1.noop\n      }\n    }\n  });\n\n  var positioners = {\n    /**\n     * Average mode places the tooltip at the average position of the elements shown\n     * @function Chart.Tooltip.positioners.average\n     * @param elements {ChartElement[]} the elements being displayed in the tooltip\n     * @returns {object} tooltip position\n     */\n    average: function average(elements) {\n      if (!elements.length) {\n        return false;\n      }\n\n      var i, len;\n      var x = 0;\n      var y = 0;\n      var count = 0;\n\n      for (i = 0, len = elements.length; i < len; ++i) {\n        var el = elements[i];\n\n        if (el && el.hasValue()) {\n          var pos = el.tooltipPosition();\n          x += pos.x;\n          y += pos.y;\n          ++count;\n        }\n      }\n\n      return {\n        x: x / count,\n        y: y / count\n      };\n    },\n\n    /**\n     * Gets the tooltip position nearest of the item nearest to the event position\n     * @function Chart.Tooltip.positioners.nearest\n     * @param elements {Chart.Element[]} the tooltip elements\n     * @param eventPosition {object} the position of the event in canvas coordinates\n     * @returns {object} the tooltip position\n     */\n    nearest: function nearest(elements, eventPosition) {\n      var x = eventPosition.x;\n      var y = eventPosition.y;\n      var minDistance = Number.POSITIVE_INFINITY;\n      var i, len, nearestElement;\n\n      for (i = 0, len = elements.length; i < len; ++i) {\n        var el = elements[i];\n\n        if (el && el.hasValue()) {\n          var center = el.getCenterPoint();\n          var d = helpers$1.distanceBetweenPoints(eventPosition, center);\n\n          if (d < minDistance) {\n            minDistance = d;\n            nearestElement = el;\n          }\n        }\n      }\n\n      if (nearestElement) {\n        var tp = nearestElement.tooltipPosition();\n        x = tp.x;\n        y = tp.y;\n      }\n\n      return {\n        x: x,\n        y: y\n      };\n    }\n  }; // Helper to push or concat based on if the 2nd parameter is an array or not\n\n  function pushOrConcat(base, toPush) {\n    if (toPush) {\n      if (helpers$1.isArray(toPush)) {\n        // base = base.concat(toPush);\n        Array.prototype.push.apply(base, toPush);\n      } else {\n        base.push(toPush);\n      }\n    }\n\n    return base;\n  }\n  /**\n   * Returns array of strings split by newline\n   * @param {string} value - The value to split by newline.\n   * @returns {string[]} value if newline present - Returned from String split() method\n   * @function\n   */\n\n\n  function splitNewlines(str) {\n    if ((typeof str === 'string' || str instanceof String) && str.indexOf('\\n') > -1) {\n      return str.split('\\n');\n    }\n\n    return str;\n  }\n  /**\n   * Private helper to create a tooltip item model\n   * @param element - the chart element (point, arc, bar) to create the tooltip item for\n   * @return new tooltip item\n   */\n\n\n  function createTooltipItem(element) {\n    var xScale = element._xScale;\n    var yScale = element._yScale || element._scale; // handle radar || polarArea charts\n\n    var index = element._index;\n    var datasetIndex = element._datasetIndex;\n\n    var controller = element._chart.getDatasetMeta(datasetIndex).controller;\n\n    var indexScale = controller._getIndexScale();\n\n    var valueScale = controller._getValueScale();\n\n    return {\n      xLabel: xScale ? xScale.getLabelForIndex(index, datasetIndex) : '',\n      yLabel: yScale ? yScale.getLabelForIndex(index, datasetIndex) : '',\n      label: indexScale ? '' + indexScale.getLabelForIndex(index, datasetIndex) : '',\n      value: valueScale ? '' + valueScale.getLabelForIndex(index, datasetIndex) : '',\n      index: index,\n      datasetIndex: datasetIndex,\n      x: element._model.x,\n      y: element._model.y\n    };\n  }\n  /**\n   * Helper to get the reset model for the tooltip\n   * @param tooltipOpts {object} the tooltip options\n   */\n\n\n  function getBaseModel(tooltipOpts) {\n    var globalDefaults = core_defaults.global;\n    return {\n      // Positioning\n      xPadding: tooltipOpts.xPadding,\n      yPadding: tooltipOpts.yPadding,\n      xAlign: tooltipOpts.xAlign,\n      yAlign: tooltipOpts.yAlign,\n      // Body\n      bodyFontColor: tooltipOpts.bodyFontColor,\n      _bodyFontFamily: valueOrDefault$7(tooltipOpts.bodyFontFamily, globalDefaults.defaultFontFamily),\n      _bodyFontStyle: valueOrDefault$7(tooltipOpts.bodyFontStyle, globalDefaults.defaultFontStyle),\n      _bodyAlign: tooltipOpts.bodyAlign,\n      bodyFontSize: valueOrDefault$7(tooltipOpts.bodyFontSize, globalDefaults.defaultFontSize),\n      bodySpacing: tooltipOpts.bodySpacing,\n      // Title\n      titleFontColor: tooltipOpts.titleFontColor,\n      _titleFontFamily: valueOrDefault$7(tooltipOpts.titleFontFamily, globalDefaults.defaultFontFamily),\n      _titleFontStyle: valueOrDefault$7(tooltipOpts.titleFontStyle, globalDefaults.defaultFontStyle),\n      titleFontSize: valueOrDefault$7(tooltipOpts.titleFontSize, globalDefaults.defaultFontSize),\n      _titleAlign: tooltipOpts.titleAlign,\n      titleSpacing: tooltipOpts.titleSpacing,\n      titleMarginBottom: tooltipOpts.titleMarginBottom,\n      // Footer\n      footerFontColor: tooltipOpts.footerFontColor,\n      _footerFontFamily: valueOrDefault$7(tooltipOpts.footerFontFamily, globalDefaults.defaultFontFamily),\n      _footerFontStyle: valueOrDefault$7(tooltipOpts.footerFontStyle, globalDefaults.defaultFontStyle),\n      footerFontSize: valueOrDefault$7(tooltipOpts.footerFontSize, globalDefaults.defaultFontSize),\n      _footerAlign: tooltipOpts.footerAlign,\n      footerSpacing: tooltipOpts.footerSpacing,\n      footerMarginTop: tooltipOpts.footerMarginTop,\n      // Appearance\n      caretSize: tooltipOpts.caretSize,\n      cornerRadius: tooltipOpts.cornerRadius,\n      backgroundColor: tooltipOpts.backgroundColor,\n      opacity: 0,\n      legendColorBackground: tooltipOpts.multiKeyBackground,\n      displayColors: tooltipOpts.displayColors,\n      borderColor: tooltipOpts.borderColor,\n      borderWidth: tooltipOpts.borderWidth\n    };\n  }\n  /**\n   * Get the size of the tooltip\n   */\n\n\n  function getTooltipSize(tooltip, model) {\n    var ctx = tooltip._chart.ctx;\n    var height = model.yPadding * 2; // Tooltip Padding\n\n    var width = 0; // Count of all lines in the body\n\n    var body = model.body;\n    var combinedBodyLength = body.reduce(function (count, bodyItem) {\n      return count + bodyItem.before.length + bodyItem.lines.length + bodyItem.after.length;\n    }, 0);\n    combinedBodyLength += model.beforeBody.length + model.afterBody.length;\n    var titleLineCount = model.title.length;\n    var footerLineCount = model.footer.length;\n    var titleFontSize = model.titleFontSize;\n    var bodyFontSize = model.bodyFontSize;\n    var footerFontSize = model.footerFontSize;\n    height += titleLineCount * titleFontSize; // Title Lines\n\n    height += titleLineCount ? (titleLineCount - 1) * model.titleSpacing : 0; // Title Line Spacing\n\n    height += titleLineCount ? model.titleMarginBottom : 0; // Title's bottom Margin\n\n    height += combinedBodyLength * bodyFontSize; // Body Lines\n\n    height += combinedBodyLength ? (combinedBodyLength - 1) * model.bodySpacing : 0; // Body Line Spacing\n\n    height += footerLineCount ? model.footerMarginTop : 0; // Footer Margin\n\n    height += footerLineCount * footerFontSize; // Footer Lines\n\n    height += footerLineCount ? (footerLineCount - 1) * model.footerSpacing : 0; // Footer Line Spacing\n    // Title width\n\n    var widthPadding = 0;\n\n    var maxLineWidth = function maxLineWidth(line) {\n      width = Math.max(width, ctx.measureText(line).width + widthPadding);\n    };\n\n    ctx.font = helpers$1.fontString(titleFontSize, model._titleFontStyle, model._titleFontFamily);\n    helpers$1.each(model.title, maxLineWidth); // Body width\n\n    ctx.font = helpers$1.fontString(bodyFontSize, model._bodyFontStyle, model._bodyFontFamily);\n    helpers$1.each(model.beforeBody.concat(model.afterBody), maxLineWidth); // Body lines may include some extra width due to the color box\n\n    widthPadding = model.displayColors ? bodyFontSize + 2 : 0;\n    helpers$1.each(body, function (bodyItem) {\n      helpers$1.each(bodyItem.before, maxLineWidth);\n      helpers$1.each(bodyItem.lines, maxLineWidth);\n      helpers$1.each(bodyItem.after, maxLineWidth);\n    }); // Reset back to 0\n\n    widthPadding = 0; // Footer width\n\n    ctx.font = helpers$1.fontString(footerFontSize, model._footerFontStyle, model._footerFontFamily);\n    helpers$1.each(model.footer, maxLineWidth); // Add padding\n\n    width += 2 * model.xPadding;\n    return {\n      width: width,\n      height: height\n    };\n  }\n  /**\n   * Helper to get the alignment of a tooltip given the size\n   */\n\n\n  function determineAlignment(tooltip, size) {\n    var model = tooltip._model;\n    var chart = tooltip._chart;\n    var chartArea = tooltip._chart.chartArea;\n    var xAlign = 'center';\n    var yAlign = 'center';\n\n    if (model.y < size.height) {\n      yAlign = 'top';\n    } else if (model.y > chart.height - size.height) {\n      yAlign = 'bottom';\n    }\n\n    var lf, rf; // functions to determine left, right alignment\n\n    var olf, orf; // functions to determine if left/right alignment causes tooltip to go outside chart\n\n    var yf; // function to get the y alignment if the tooltip goes outside of the left or right edges\n\n    var midX = (chartArea.left + chartArea.right) / 2;\n    var midY = (chartArea.top + chartArea.bottom) / 2;\n\n    if (yAlign === 'center') {\n      lf = function lf(x) {\n        return x <= midX;\n      };\n\n      rf = function rf(x) {\n        return x > midX;\n      };\n    } else {\n      lf = function lf(x) {\n        return x <= size.width / 2;\n      };\n\n      rf = function rf(x) {\n        return x >= chart.width - size.width / 2;\n      };\n    }\n\n    olf = function olf(x) {\n      return x + size.width + model.caretSize + model.caretPadding > chart.width;\n    };\n\n    orf = function orf(x) {\n      return x - size.width - model.caretSize - model.caretPadding < 0;\n    };\n\n    yf = function yf(y) {\n      return y <= midY ? 'top' : 'bottom';\n    };\n\n    if (lf(model.x)) {\n      xAlign = 'left'; // Is tooltip too wide and goes over the right side of the chart.?\n\n      if (olf(model.x)) {\n        xAlign = 'center';\n        yAlign = yf(model.y);\n      }\n    } else if (rf(model.x)) {\n      xAlign = 'right'; // Is tooltip too wide and goes outside left edge of canvas?\n\n      if (orf(model.x)) {\n        xAlign = 'center';\n        yAlign = yf(model.y);\n      }\n    }\n\n    var opts = tooltip._options;\n    return {\n      xAlign: opts.xAlign ? opts.xAlign : xAlign,\n      yAlign: opts.yAlign ? opts.yAlign : yAlign\n    };\n  }\n  /**\n   * Helper to get the location a tooltip needs to be placed at given the initial position (via the vm) and the size and alignment\n   */\n\n\n  function getBackgroundPoint(vm, size, alignment, chart) {\n    // Background Position\n    var x = vm.x;\n    var y = vm.y;\n    var caretSize = vm.caretSize;\n    var caretPadding = vm.caretPadding;\n    var cornerRadius = vm.cornerRadius;\n    var xAlign = alignment.xAlign;\n    var yAlign = alignment.yAlign;\n    var paddingAndSize = caretSize + caretPadding;\n    var radiusAndPadding = cornerRadius + caretPadding;\n\n    if (xAlign === 'right') {\n      x -= size.width;\n    } else if (xAlign === 'center') {\n      x -= size.width / 2;\n\n      if (x + size.width > chart.width) {\n        x = chart.width - size.width;\n      }\n\n      if (x < 0) {\n        x = 0;\n      }\n    }\n\n    if (yAlign === 'top') {\n      y += paddingAndSize;\n    } else if (yAlign === 'bottom') {\n      y -= size.height + paddingAndSize;\n    } else {\n      y -= size.height / 2;\n    }\n\n    if (yAlign === 'center') {\n      if (xAlign === 'left') {\n        x += paddingAndSize;\n      } else if (xAlign === 'right') {\n        x -= paddingAndSize;\n      }\n    } else if (xAlign === 'left') {\n      x -= radiusAndPadding;\n    } else if (xAlign === 'right') {\n      x += radiusAndPadding;\n    }\n\n    return {\n      x: x,\n      y: y\n    };\n  }\n\n  function getAlignedX(vm, align) {\n    return align === 'center' ? vm.x + vm.width / 2 : align === 'right' ? vm.x + vm.width - vm.xPadding : vm.x + vm.xPadding;\n  }\n  /**\n   * Helper to build before and after body lines\n   */\n\n\n  function getBeforeAfterBodyLines(callback) {\n    return pushOrConcat([], splitNewlines(callback));\n  }\n\n  var exports$3 = core_element.extend({\n    initialize: function initialize() {\n      this._model = getBaseModel(this._options);\n      this._lastActive = [];\n    },\n    // Get the title\n    // Args are: (tooltipItem, data)\n    getTitle: function getTitle() {\n      var me = this;\n      var opts = me._options;\n      var callbacks = opts.callbacks;\n      var beforeTitle = callbacks.beforeTitle.apply(me, arguments);\n      var title = callbacks.title.apply(me, arguments);\n      var afterTitle = callbacks.afterTitle.apply(me, arguments);\n      var lines = [];\n      lines = pushOrConcat(lines, splitNewlines(beforeTitle));\n      lines = pushOrConcat(lines, splitNewlines(title));\n      lines = pushOrConcat(lines, splitNewlines(afterTitle));\n      return lines;\n    },\n    // Args are: (tooltipItem, data)\n    getBeforeBody: function getBeforeBody() {\n      return getBeforeAfterBodyLines(this._options.callbacks.beforeBody.apply(this, arguments));\n    },\n    // Args are: (tooltipItem, data)\n    getBody: function getBody(tooltipItems, data) {\n      var me = this;\n      var callbacks = me._options.callbacks;\n      var bodyItems = [];\n      helpers$1.each(tooltipItems, function (tooltipItem) {\n        var bodyItem = {\n          before: [],\n          lines: [],\n          after: []\n        };\n        pushOrConcat(bodyItem.before, splitNewlines(callbacks.beforeLabel.call(me, tooltipItem, data)));\n        pushOrConcat(bodyItem.lines, callbacks.label.call(me, tooltipItem, data));\n        pushOrConcat(bodyItem.after, splitNewlines(callbacks.afterLabel.call(me, tooltipItem, data)));\n        bodyItems.push(bodyItem);\n      });\n      return bodyItems;\n    },\n    // Args are: (tooltipItem, data)\n    getAfterBody: function getAfterBody() {\n      return getBeforeAfterBodyLines(this._options.callbacks.afterBody.apply(this, arguments));\n    },\n    // Get the footer and beforeFooter and afterFooter lines\n    // Args are: (tooltipItem, data)\n    getFooter: function getFooter() {\n      var me = this;\n      var callbacks = me._options.callbacks;\n      var beforeFooter = callbacks.beforeFooter.apply(me, arguments);\n      var footer = callbacks.footer.apply(me, arguments);\n      var afterFooter = callbacks.afterFooter.apply(me, arguments);\n      var lines = [];\n      lines = pushOrConcat(lines, splitNewlines(beforeFooter));\n      lines = pushOrConcat(lines, splitNewlines(footer));\n      lines = pushOrConcat(lines, splitNewlines(afterFooter));\n      return lines;\n    },\n    update: function update(changed) {\n      var me = this;\n      var opts = me._options; // Need to regenerate the model because its faster than using extend and it is necessary due to the optimization in Chart.Element.transition\n      // that does _view = _model if ease === 1. This causes the 2nd tooltip update to set properties in both the view and model at the same time\n      // which breaks any animations.\n\n      var existingModel = me._model;\n      var model = me._model = getBaseModel(opts);\n      var active = me._active;\n      var data = me._data; // In the case where active.length === 0 we need to keep these at existing values for good animations\n\n      var alignment = {\n        xAlign: existingModel.xAlign,\n        yAlign: existingModel.yAlign\n      };\n      var backgroundPoint = {\n        x: existingModel.x,\n        y: existingModel.y\n      };\n      var tooltipSize = {\n        width: existingModel.width,\n        height: existingModel.height\n      };\n      var tooltipPosition = {\n        x: existingModel.caretX,\n        y: existingModel.caretY\n      };\n      var i, len;\n\n      if (active.length) {\n        model.opacity = 1;\n        var labelColors = [];\n        var labelTextColors = [];\n        tooltipPosition = positioners[opts.position].call(me, active, me._eventPosition);\n        var tooltipItems = [];\n\n        for (i = 0, len = active.length; i < len; ++i) {\n          tooltipItems.push(createTooltipItem(active[i]));\n        } // If the user provided a filter function, use it to modify the tooltip items\n\n\n        if (opts.filter) {\n          tooltipItems = tooltipItems.filter(function (a) {\n            return opts.filter(a, data);\n          });\n        } // If the user provided a sorting function, use it to modify the tooltip items\n\n\n        if (opts.itemSort) {\n          tooltipItems = tooltipItems.sort(function (a, b) {\n            return opts.itemSort(a, b, data);\n          });\n        } // Determine colors for boxes\n\n\n        helpers$1.each(tooltipItems, function (tooltipItem) {\n          labelColors.push(opts.callbacks.labelColor.call(me, tooltipItem, me._chart));\n          labelTextColors.push(opts.callbacks.labelTextColor.call(me, tooltipItem, me._chart));\n        }); // Build the Text Lines\n\n        model.title = me.getTitle(tooltipItems, data);\n        model.beforeBody = me.getBeforeBody(tooltipItems, data);\n        model.body = me.getBody(tooltipItems, data);\n        model.afterBody = me.getAfterBody(tooltipItems, data);\n        model.footer = me.getFooter(tooltipItems, data); // Initial positioning and colors\n\n        model.x = tooltipPosition.x;\n        model.y = tooltipPosition.y;\n        model.caretPadding = opts.caretPadding;\n        model.labelColors = labelColors;\n        model.labelTextColors = labelTextColors; // data points\n\n        model.dataPoints = tooltipItems; // We need to determine alignment of the tooltip\n\n        tooltipSize = getTooltipSize(this, model);\n        alignment = determineAlignment(this, tooltipSize); // Final Size and Position\n\n        backgroundPoint = getBackgroundPoint(model, tooltipSize, alignment, me._chart);\n      } else {\n        model.opacity = 0;\n      }\n\n      model.xAlign = alignment.xAlign;\n      model.yAlign = alignment.yAlign;\n      model.x = backgroundPoint.x;\n      model.y = backgroundPoint.y;\n      model.width = tooltipSize.width;\n      model.height = tooltipSize.height; // Point where the caret on the tooltip points to\n\n      model.caretX = tooltipPosition.x;\n      model.caretY = tooltipPosition.y;\n      me._model = model;\n\n      if (changed && opts.custom) {\n        opts.custom.call(me, model);\n      }\n\n      return me;\n    },\n    drawCaret: function drawCaret(tooltipPoint, size) {\n      var ctx = this._chart.ctx;\n      var vm = this._view;\n      var caretPosition = this.getCaretPosition(tooltipPoint, size, vm);\n      ctx.lineTo(caretPosition.x1, caretPosition.y1);\n      ctx.lineTo(caretPosition.x2, caretPosition.y2);\n      ctx.lineTo(caretPosition.x3, caretPosition.y3);\n    },\n    getCaretPosition: function getCaretPosition(tooltipPoint, size, vm) {\n      var x1, x2, x3, y1, y2, y3;\n      var caretSize = vm.caretSize;\n      var cornerRadius = vm.cornerRadius;\n      var xAlign = vm.xAlign;\n      var yAlign = vm.yAlign;\n      var ptX = tooltipPoint.x;\n      var ptY = tooltipPoint.y;\n      var width = size.width;\n      var height = size.height;\n\n      if (yAlign === 'center') {\n        y2 = ptY + height / 2;\n\n        if (xAlign === 'left') {\n          x1 = ptX;\n          x2 = x1 - caretSize;\n          x3 = x1;\n          y1 = y2 + caretSize;\n          y3 = y2 - caretSize;\n        } else {\n          x1 = ptX + width;\n          x2 = x1 + caretSize;\n          x3 = x1;\n          y1 = y2 - caretSize;\n          y3 = y2 + caretSize;\n        }\n      } else {\n        if (xAlign === 'left') {\n          x2 = ptX + cornerRadius + caretSize;\n          x1 = x2 - caretSize;\n          x3 = x2 + caretSize;\n        } else if (xAlign === 'right') {\n          x2 = ptX + width - cornerRadius - caretSize;\n          x1 = x2 - caretSize;\n          x3 = x2 + caretSize;\n        } else {\n          x2 = vm.caretX;\n          x1 = x2 - caretSize;\n          x3 = x2 + caretSize;\n        }\n\n        if (yAlign === 'top') {\n          y1 = ptY;\n          y2 = y1 - caretSize;\n          y3 = y1;\n        } else {\n          y1 = ptY + height;\n          y2 = y1 + caretSize;\n          y3 = y1; // invert drawing order\n\n          var tmp = x3;\n          x3 = x1;\n          x1 = tmp;\n        }\n      }\n\n      return {\n        x1: x1,\n        x2: x2,\n        x3: x3,\n        y1: y1,\n        y2: y2,\n        y3: y3\n      };\n    },\n    drawTitle: function drawTitle(pt, vm, ctx) {\n      var title = vm.title;\n\n      if (title.length) {\n        pt.x = getAlignedX(vm, vm._titleAlign);\n        ctx.textAlign = vm._titleAlign;\n        ctx.textBaseline = 'top';\n        var titleFontSize = vm.titleFontSize;\n        var titleSpacing = vm.titleSpacing;\n        ctx.fillStyle = vm.titleFontColor;\n        ctx.font = helpers$1.fontString(titleFontSize, vm._titleFontStyle, vm._titleFontFamily);\n        var i, len;\n\n        for (i = 0, len = title.length; i < len; ++i) {\n          ctx.fillText(title[i], pt.x, pt.y);\n          pt.y += titleFontSize + titleSpacing; // Line Height and spacing\n\n          if (i + 1 === title.length) {\n            pt.y += vm.titleMarginBottom - titleSpacing; // If Last, add margin, remove spacing\n          }\n        }\n      }\n    },\n    drawBody: function drawBody(pt, vm, ctx) {\n      var bodyFontSize = vm.bodyFontSize;\n      var bodySpacing = vm.bodySpacing;\n      var bodyAlign = vm._bodyAlign;\n      var body = vm.body;\n      var drawColorBoxes = vm.displayColors;\n      var labelColors = vm.labelColors;\n      var xLinePadding = 0;\n      var colorX = drawColorBoxes ? getAlignedX(vm, 'left') : 0;\n      var textColor;\n      ctx.textAlign = bodyAlign;\n      ctx.textBaseline = 'top';\n      ctx.font = helpers$1.fontString(bodyFontSize, vm._bodyFontStyle, vm._bodyFontFamily);\n      pt.x = getAlignedX(vm, bodyAlign); // Before Body\n\n      var fillLineOfText = function fillLineOfText(line) {\n        ctx.fillText(line, pt.x + xLinePadding, pt.y);\n        pt.y += bodyFontSize + bodySpacing;\n      }; // Before body lines\n\n\n      ctx.fillStyle = vm.bodyFontColor;\n      helpers$1.each(vm.beforeBody, fillLineOfText);\n      xLinePadding = drawColorBoxes && bodyAlign !== 'right' ? bodyAlign === 'center' ? bodyFontSize / 2 + 1 : bodyFontSize + 2 : 0; // Draw body lines now\n\n      helpers$1.each(body, function (bodyItem, i) {\n        textColor = vm.labelTextColors[i];\n        ctx.fillStyle = textColor;\n        helpers$1.each(bodyItem.before, fillLineOfText);\n        helpers$1.each(bodyItem.lines, function (line) {\n          // Draw Legend-like boxes if needed\n          if (drawColorBoxes) {\n            // Fill a white rect so that colours merge nicely if the opacity is < 1\n            ctx.fillStyle = vm.legendColorBackground;\n            ctx.fillRect(colorX, pt.y, bodyFontSize, bodyFontSize); // Border\n\n            ctx.lineWidth = 1;\n            ctx.strokeStyle = labelColors[i].borderColor;\n            ctx.strokeRect(colorX, pt.y, bodyFontSize, bodyFontSize); // Inner square\n\n            ctx.fillStyle = labelColors[i].backgroundColor;\n            ctx.fillRect(colorX + 1, pt.y + 1, bodyFontSize - 2, bodyFontSize - 2);\n            ctx.fillStyle = textColor;\n          }\n\n          fillLineOfText(line);\n        });\n        helpers$1.each(bodyItem.after, fillLineOfText);\n      }); // Reset back to 0 for after body\n\n      xLinePadding = 0; // After body lines\n\n      helpers$1.each(vm.afterBody, fillLineOfText);\n      pt.y -= bodySpacing; // Remove last body spacing\n    },\n    drawFooter: function drawFooter(pt, vm, ctx) {\n      var footer = vm.footer;\n\n      if (footer.length) {\n        pt.x = getAlignedX(vm, vm._footerAlign);\n        pt.y += vm.footerMarginTop;\n        ctx.textAlign = vm._footerAlign;\n        ctx.textBaseline = 'top';\n        ctx.fillStyle = vm.footerFontColor;\n        ctx.font = helpers$1.fontString(vm.footerFontSize, vm._footerFontStyle, vm._footerFontFamily);\n        helpers$1.each(footer, function (line) {\n          ctx.fillText(line, pt.x, pt.y);\n          pt.y += vm.footerFontSize + vm.footerSpacing;\n        });\n      }\n    },\n    drawBackground: function drawBackground(pt, vm, ctx, tooltipSize) {\n      ctx.fillStyle = vm.backgroundColor;\n      ctx.strokeStyle = vm.borderColor;\n      ctx.lineWidth = vm.borderWidth;\n      var xAlign = vm.xAlign;\n      var yAlign = vm.yAlign;\n      var x = pt.x;\n      var y = pt.y;\n      var width = tooltipSize.width;\n      var height = tooltipSize.height;\n      var radius = vm.cornerRadius;\n      ctx.beginPath();\n      ctx.moveTo(x + radius, y);\n\n      if (yAlign === 'top') {\n        this.drawCaret(pt, tooltipSize);\n      }\n\n      ctx.lineTo(x + width - radius, y);\n      ctx.quadraticCurveTo(x + width, y, x + width, y + radius);\n\n      if (yAlign === 'center' && xAlign === 'right') {\n        this.drawCaret(pt, tooltipSize);\n      }\n\n      ctx.lineTo(x + width, y + height - radius);\n      ctx.quadraticCurveTo(x + width, y + height, x + width - radius, y + height);\n\n      if (yAlign === 'bottom') {\n        this.drawCaret(pt, tooltipSize);\n      }\n\n      ctx.lineTo(x + radius, y + height);\n      ctx.quadraticCurveTo(x, y + height, x, y + height - radius);\n\n      if (yAlign === 'center' && xAlign === 'left') {\n        this.drawCaret(pt, tooltipSize);\n      }\n\n      ctx.lineTo(x, y + radius);\n      ctx.quadraticCurveTo(x, y, x + radius, y);\n      ctx.closePath();\n      ctx.fill();\n\n      if (vm.borderWidth > 0) {\n        ctx.stroke();\n      }\n    },\n    draw: function draw() {\n      var ctx = this._chart.ctx;\n      var vm = this._view;\n\n      if (vm.opacity === 0) {\n        return;\n      }\n\n      var tooltipSize = {\n        width: vm.width,\n        height: vm.height\n      };\n      var pt = {\n        x: vm.x,\n        y: vm.y\n      }; // IE11/Edge does not like very small opacities, so snap to 0\n\n      var opacity = Math.abs(vm.opacity < 1e-3) ? 0 : vm.opacity; // Truthy/falsey value for empty tooltip\n\n      var hasTooltipContent = vm.title.length || vm.beforeBody.length || vm.body.length || vm.afterBody.length || vm.footer.length;\n\n      if (this._options.enabled && hasTooltipContent) {\n        ctx.save();\n        ctx.globalAlpha = opacity; // Draw Background\n\n        this.drawBackground(pt, vm, ctx, tooltipSize); // Draw Title, Body, and Footer\n\n        pt.y += vm.yPadding; // Titles\n\n        this.drawTitle(pt, vm, ctx); // Body\n\n        this.drawBody(pt, vm, ctx); // Footer\n\n        this.drawFooter(pt, vm, ctx);\n        ctx.restore();\n      }\n    },\n\n    /**\n     * Handle an event\n     * @private\n     * @param {IEvent} event - The event to handle\n     * @returns {boolean} true if the tooltip changed\n     */\n    handleEvent: function handleEvent(e) {\n      var me = this;\n      var options = me._options;\n      var changed = false;\n      me._lastActive = me._lastActive || []; // Find Active Elements for tooltips\n\n      if (e.type === 'mouseout') {\n        me._active = [];\n      } else {\n        me._active = me._chart.getElementsAtEventForMode(e, options.mode, options);\n      } // Remember Last Actives\n\n\n      changed = !helpers$1.arrayEquals(me._active, me._lastActive); // Only handle target event on tooltip change\n\n      if (changed) {\n        me._lastActive = me._active;\n\n        if (options.enabled || options.custom) {\n          me._eventPosition = {\n            x: e.x,\n            y: e.y\n          };\n          me.update(true);\n          me.pivot();\n        }\n      }\n\n      return changed;\n    }\n  });\n  /**\n   * @namespace Chart.Tooltip.positioners\n   */\n\n  var positioners_1 = positioners;\n  var core_tooltip = exports$3;\n  core_tooltip.positioners = positioners_1;\n  var valueOrDefault$8 = helpers$1.valueOrDefault;\n\n  core_defaults._set('global', {\n    elements: {},\n    events: ['mousemove', 'mouseout', 'click', 'touchstart', 'touchmove'],\n    hover: {\n      onHover: null,\n      mode: 'nearest',\n      intersect: true,\n      animationDuration: 400\n    },\n    onClick: null,\n    maintainAspectRatio: true,\n    responsive: true,\n    responsiveAnimationDuration: 0\n  });\n  /**\n   * Recursively merge the given config objects representing the `scales` option\n   * by incorporating scale defaults in `xAxes` and `yAxes` array items, then\n   * returns a deep copy of the result, thus doesn't alter inputs.\n   */\n\n\n  function mergeScaleConfig()\n  /* config objects ... */\n  {\n    return helpers$1.merge({}, [].slice.call(arguments), {\n      merger: function merger(key, target, source, options) {\n        if (key === 'xAxes' || key === 'yAxes') {\n          var slen = source[key].length;\n          var i, type, scale;\n\n          if (!target[key]) {\n            target[key] = [];\n          }\n\n          for (i = 0; i < slen; ++i) {\n            scale = source[key][i];\n            type = valueOrDefault$8(scale.type, key === 'xAxes' ? 'category' : 'linear');\n\n            if (i >= target[key].length) {\n              target[key].push({});\n            }\n\n            if (!target[key][i].type || scale.type && scale.type !== target[key][i].type) {\n              // new/untyped scale or type changed: let's apply the new defaults\n              // then merge source scale to correctly overwrite the defaults.\n              helpers$1.merge(target[key][i], [core_scaleService.getScaleDefaults(type), scale]);\n            } else {\n              // scales type are the same\n              helpers$1.merge(target[key][i], scale);\n            }\n          }\n        } else {\n          helpers$1._merger(key, target, source, options);\n        }\n      }\n    });\n  }\n  /**\n   * Recursively merge the given config objects as the root options by handling\n   * default scale options for the `scales` and `scale` properties, then returns\n   * a deep copy of the result, thus doesn't alter inputs.\n   */\n\n\n  function mergeConfig()\n  /* config objects ... */\n  {\n    return helpers$1.merge({}, [].slice.call(arguments), {\n      merger: function merger(key, target, source, options) {\n        var tval = target[key] || {};\n        var sval = source[key];\n\n        if (key === 'scales') {\n          // scale config merging is complex. Add our own function here for that\n          target[key] = mergeScaleConfig(tval, sval);\n        } else if (key === 'scale') {\n          // used in polar area & radar charts since there is only one scale\n          target[key] = helpers$1.merge(tval, [core_scaleService.getScaleDefaults(sval.type), sval]);\n        } else {\n          helpers$1._merger(key, target, source, options);\n        }\n      }\n    });\n  }\n\n  function initConfig(config) {\n    config = config || {}; // Do NOT use mergeConfig for the data object because this method merges arrays\n    // and so would change references to labels and datasets, preventing data updates.\n\n    var data = config.data = config.data || {};\n    data.datasets = data.datasets || [];\n    data.labels = data.labels || [];\n    config.options = mergeConfig(core_defaults.global, core_defaults[config.type], config.options || {});\n    return config;\n  }\n\n  function updateConfig(chart) {\n    var newOptions = chart.options;\n    helpers$1.each(chart.scales, function (scale) {\n      core_layouts.removeBox(chart, scale);\n    });\n    newOptions = mergeConfig(core_defaults.global, core_defaults[chart.config.type], newOptions);\n    chart.options = chart.config.options = newOptions;\n    chart.ensureScalesHaveIDs();\n    chart.buildOrUpdateScales(); // Tooltip\n\n    chart.tooltip._options = newOptions.tooltips;\n    chart.tooltip.initialize();\n  }\n\n  function positionIsHorizontal(position) {\n    return position === 'top' || position === 'bottom';\n  }\n\n  var Chart = function Chart(item, config) {\n    this.construct(item, config);\n    return this;\n  };\n\n  helpers$1.extend(Chart.prototype,\n  /** @lends Chart */\n  {\n    /**\n     * @private\n     */\n    construct: function construct(item, config) {\n      var me = this;\n      config = initConfig(config);\n      var context = platform.acquireContext(item, config);\n      var canvas = context && context.canvas;\n      var height = canvas && canvas.height;\n      var width = canvas && canvas.width;\n      me.id = helpers$1.uid();\n      me.ctx = context;\n      me.canvas = canvas;\n      me.config = config;\n      me.width = width;\n      me.height = height;\n      me.aspectRatio = height ? width / height : null;\n      me.options = config.options;\n      me._bufferedRender = false;\n      /**\n       * Provided for backward compatibility, Chart and Chart.Controller have been merged,\n       * the \"instance\" still need to be defined since it might be called from plugins.\n       * @prop Chart#chart\n       * @deprecated since version 2.6.0\n       * @todo remove at version 3\n       * @private\n       */\n\n      me.chart = me;\n      me.controller = me; // chart.chart.controller #inception\n      // Add the chart instance to the global namespace\n\n      Chart.instances[me.id] = me; // Define alias to the config data: `chart.data === chart.config.data`\n\n      Object.defineProperty(me, 'data', {\n        get: function get() {\n          return me.config.data;\n        },\n        set: function set(value) {\n          me.config.data = value;\n        }\n      });\n\n      if (!context || !canvas) {\n        // The given item is not a compatible context2d element, let's return before finalizing\n        // the chart initialization but after setting basic chart / controller properties that\n        // can help to figure out that the chart is not valid (e.g chart.canvas !== null);\n        // https://github.com/chartjs/Chart.js/issues/2807\n        console.error(\"Failed to create chart: can't acquire context from the given item\");\n        return;\n      }\n\n      me.initialize();\n      me.update();\n    },\n\n    /**\n     * @private\n     */\n    initialize: function initialize() {\n      var me = this; // Before init plugin notification\n\n      core_plugins.notify(me, 'beforeInit');\n      helpers$1.retinaScale(me, me.options.devicePixelRatio);\n      me.bindEvents();\n\n      if (me.options.responsive) {\n        // Initial resize before chart draws (must be silent to preserve initial animations).\n        me.resize(true);\n      } // Make sure scales have IDs and are built before we build any controllers.\n\n\n      me.ensureScalesHaveIDs();\n      me.buildOrUpdateScales();\n      me.initToolTip(); // After init plugin notification\n\n      core_plugins.notify(me, 'afterInit');\n      return me;\n    },\n    clear: function clear() {\n      helpers$1.canvas.clear(this);\n      return this;\n    },\n    stop: function stop() {\n      // Stops any current animation loop occurring\n      core_animations.cancelAnimation(this);\n      return this;\n    },\n    resize: function resize(silent) {\n      var me = this;\n      var options = me.options;\n      var canvas = me.canvas;\n      var aspectRatio = options.maintainAspectRatio && me.aspectRatio || null; // the canvas render width and height will be casted to integers so make sure that\n      // the canvas display style uses the same integer values to avoid blurring effect.\n      // Set to 0 instead of canvas.size because the size defaults to 300x150 if the element is collapsed\n\n      var newWidth = Math.max(0, Math.floor(helpers$1.getMaximumWidth(canvas)));\n      var newHeight = Math.max(0, Math.floor(aspectRatio ? newWidth / aspectRatio : helpers$1.getMaximumHeight(canvas)));\n\n      if (me.width === newWidth && me.height === newHeight) {\n        return;\n      }\n\n      canvas.width = me.width = newWidth;\n      canvas.height = me.height = newHeight;\n      canvas.style.width = newWidth + 'px';\n      canvas.style.height = newHeight + 'px';\n      helpers$1.retinaScale(me, options.devicePixelRatio);\n\n      if (!silent) {\n        // Notify any plugins about the resize\n        var newSize = {\n          width: newWidth,\n          height: newHeight\n        };\n        core_plugins.notify(me, 'resize', [newSize]); // Notify of resize\n\n        if (options.onResize) {\n          options.onResize(me, newSize);\n        }\n\n        me.stop();\n        me.update({\n          duration: options.responsiveAnimationDuration\n        });\n      }\n    },\n    ensureScalesHaveIDs: function ensureScalesHaveIDs() {\n      var options = this.options;\n      var scalesOptions = options.scales || {};\n      var scaleOptions = options.scale;\n      helpers$1.each(scalesOptions.xAxes, function (xAxisOptions, index) {\n        xAxisOptions.id = xAxisOptions.id || 'x-axis-' + index;\n      });\n      helpers$1.each(scalesOptions.yAxes, function (yAxisOptions, index) {\n        yAxisOptions.id = yAxisOptions.id || 'y-axis-' + index;\n      });\n\n      if (scaleOptions) {\n        scaleOptions.id = scaleOptions.id || 'scale';\n      }\n    },\n\n    /**\n     * Builds a map of scale ID to scale object for future lookup.\n     */\n    buildOrUpdateScales: function buildOrUpdateScales() {\n      var me = this;\n      var options = me.options;\n      var scales = me.scales || {};\n      var items = [];\n      var updated = Object.keys(scales).reduce(function (obj, id) {\n        obj[id] = false;\n        return obj;\n      }, {});\n\n      if (options.scales) {\n        items = items.concat((options.scales.xAxes || []).map(function (xAxisOptions) {\n          return {\n            options: xAxisOptions,\n            dtype: 'category',\n            dposition: 'bottom'\n          };\n        }), (options.scales.yAxes || []).map(function (yAxisOptions) {\n          return {\n            options: yAxisOptions,\n            dtype: 'linear',\n            dposition: 'left'\n          };\n        }));\n      }\n\n      if (options.scale) {\n        items.push({\n          options: options.scale,\n          dtype: 'radialLinear',\n          isDefault: true,\n          dposition: 'chartArea'\n        });\n      }\n\n      helpers$1.each(items, function (item) {\n        var scaleOptions = item.options;\n        var id = scaleOptions.id;\n        var scaleType = valueOrDefault$8(scaleOptions.type, item.dtype);\n\n        if (positionIsHorizontal(scaleOptions.position) !== positionIsHorizontal(item.dposition)) {\n          scaleOptions.position = item.dposition;\n        }\n\n        updated[id] = true;\n        var scale = null;\n\n        if (id in scales && scales[id].type === scaleType) {\n          scale = scales[id];\n          scale.options = scaleOptions;\n          scale.ctx = me.ctx;\n          scale.chart = me;\n        } else {\n          var scaleClass = core_scaleService.getScaleConstructor(scaleType);\n\n          if (!scaleClass) {\n            return;\n          }\n\n          scale = new scaleClass({\n            id: id,\n            type: scaleType,\n            options: scaleOptions,\n            ctx: me.ctx,\n            chart: me\n          });\n          scales[scale.id] = scale;\n        }\n\n        scale.mergeTicksOptions(); // TODO(SB): I think we should be able to remove this custom case (options.scale)\n        // and consider it as a regular scale part of the \"scales\"\" map only! This would\n        // make the logic easier and remove some useless? custom code.\n\n        if (item.isDefault) {\n          me.scale = scale;\n        }\n      }); // clear up discarded scales\n\n      helpers$1.each(updated, function (hasUpdated, id) {\n        if (!hasUpdated) {\n          delete scales[id];\n        }\n      });\n      me.scales = scales;\n      core_scaleService.addScalesToLayout(this);\n    },\n    buildOrUpdateControllers: function buildOrUpdateControllers() {\n      var me = this;\n      var newControllers = [];\n      helpers$1.each(me.data.datasets, function (dataset, datasetIndex) {\n        var meta = me.getDatasetMeta(datasetIndex);\n        var type = dataset.type || me.config.type;\n\n        if (meta.type && meta.type !== type) {\n          me.destroyDatasetMeta(datasetIndex);\n          meta = me.getDatasetMeta(datasetIndex);\n        }\n\n        meta.type = type;\n\n        if (meta.controller) {\n          meta.controller.updateIndex(datasetIndex);\n          meta.controller.linkScales();\n        } else {\n          var ControllerClass = controllers[meta.type];\n\n          if (ControllerClass === undefined) {\n            throw new Error('\"' + meta.type + '\" is not a chart type.');\n          }\n\n          meta.controller = new ControllerClass(me, datasetIndex);\n          newControllers.push(meta.controller);\n        }\n      }, me);\n      return newControllers;\n    },\n\n    /**\n     * Reset the elements of all datasets\n     * @private\n     */\n    resetElements: function resetElements() {\n      var me = this;\n      helpers$1.each(me.data.datasets, function (dataset, datasetIndex) {\n        me.getDatasetMeta(datasetIndex).controller.reset();\n      }, me);\n    },\n\n    /**\n    * Resets the chart back to it's state before the initial animation\n    */\n    reset: function reset() {\n      this.resetElements();\n      this.tooltip.initialize();\n    },\n    update: function update(config) {\n      var me = this;\n\n      if (!config || typeof config !== 'object') {\n        // backwards compatibility\n        config = {\n          duration: config,\n          lazy: arguments[1]\n        };\n      }\n\n      updateConfig(me); // plugins options references might have change, let's invalidate the cache\n      // https://github.com/chartjs/Chart.js/issues/5111#issuecomment-355934167\n\n      core_plugins._invalidate(me);\n\n      if (core_plugins.notify(me, 'beforeUpdate') === false) {\n        return;\n      } // In case the entire data object changed\n\n\n      me.tooltip._data = me.data; // Make sure dataset controllers are updated and new controllers are reset\n\n      var newControllers = me.buildOrUpdateControllers(); // Make sure all dataset controllers have correct meta data counts\n\n      helpers$1.each(me.data.datasets, function (dataset, datasetIndex) {\n        me.getDatasetMeta(datasetIndex).controller.buildOrUpdateElements();\n      }, me);\n      me.updateLayout(); // Can only reset the new controllers after the scales have been updated\n\n      if (me.options.animation && me.options.animation.duration) {\n        helpers$1.each(newControllers, function (controller) {\n          controller.reset();\n        });\n      }\n\n      me.updateDatasets(); // Need to reset tooltip in case it is displayed with elements that are removed\n      // after update.\n\n      me.tooltip.initialize(); // Last active contains items that were previously in the tooltip.\n      // When we reset the tooltip, we need to clear it\n\n      me.lastActive = []; // Do this before render so that any plugins that need final scale updates can use it\n\n      core_plugins.notify(me, 'afterUpdate');\n\n      if (me._bufferedRender) {\n        me._bufferedRequest = {\n          duration: config.duration,\n          easing: config.easing,\n          lazy: config.lazy\n        };\n      } else {\n        me.render(config);\n      }\n    },\n\n    /**\n     * Updates the chart layout unless a plugin returns `false` to the `beforeLayout`\n     * hook, in which case, plugins will not be called on `afterLayout`.\n     * @private\n     */\n    updateLayout: function updateLayout() {\n      var me = this;\n\n      if (core_plugins.notify(me, 'beforeLayout') === false) {\n        return;\n      }\n\n      core_layouts.update(this, this.width, this.height);\n      /**\n       * Provided for backward compatibility, use `afterLayout` instead.\n       * @method IPlugin#afterScaleUpdate\n       * @deprecated since version 2.5.0\n       * @todo remove at version 3\n       * @private\n       */\n\n      core_plugins.notify(me, 'afterScaleUpdate');\n      core_plugins.notify(me, 'afterLayout');\n    },\n\n    /**\n     * Updates all datasets unless a plugin returns `false` to the `beforeDatasetsUpdate`\n     * hook, in which case, plugins will not be called on `afterDatasetsUpdate`.\n     * @private\n     */\n    updateDatasets: function updateDatasets() {\n      var me = this;\n\n      if (core_plugins.notify(me, 'beforeDatasetsUpdate') === false) {\n        return;\n      }\n\n      for (var i = 0, ilen = me.data.datasets.length; i < ilen; ++i) {\n        me.updateDataset(i);\n      }\n\n      core_plugins.notify(me, 'afterDatasetsUpdate');\n    },\n\n    /**\n     * Updates dataset at index unless a plugin returns `false` to the `beforeDatasetUpdate`\n     * hook, in which case, plugins will not be called on `afterDatasetUpdate`.\n     * @private\n     */\n    updateDataset: function updateDataset(index) {\n      var me = this;\n      var meta = me.getDatasetMeta(index);\n      var args = {\n        meta: meta,\n        index: index\n      };\n\n      if (core_plugins.notify(me, 'beforeDatasetUpdate', [args]) === false) {\n        return;\n      }\n\n      meta.controller.update();\n      core_plugins.notify(me, 'afterDatasetUpdate', [args]);\n    },\n    render: function render(config) {\n      var me = this;\n\n      if (!config || typeof config !== 'object') {\n        // backwards compatibility\n        config = {\n          duration: config,\n          lazy: arguments[1]\n        };\n      }\n\n      var animationOptions = me.options.animation;\n      var duration = valueOrDefault$8(config.duration, animationOptions && animationOptions.duration);\n      var lazy = config.lazy;\n\n      if (core_plugins.notify(me, 'beforeRender') === false) {\n        return;\n      }\n\n      var onComplete = function onComplete(animation) {\n        core_plugins.notify(me, 'afterRender');\n        helpers$1.callback(animationOptions && animationOptions.onComplete, [animation], me);\n      };\n\n      if (animationOptions && duration) {\n        var animation = new core_animation({\n          numSteps: duration / 16.66,\n          // 60 fps\n          easing: config.easing || animationOptions.easing,\n          render: function render(chart, animationObject) {\n            var easingFunction = helpers$1.easing.effects[animationObject.easing];\n            var currentStep = animationObject.currentStep;\n            var stepDecimal = currentStep / animationObject.numSteps;\n            chart.draw(easingFunction(stepDecimal), stepDecimal, currentStep);\n          },\n          onAnimationProgress: animationOptions.onProgress,\n          onAnimationComplete: onComplete\n        });\n        core_animations.addAnimation(me, animation, duration, lazy);\n      } else {\n        me.draw(); // See https://github.com/chartjs/Chart.js/issues/3781\n\n        onComplete(new core_animation({\n          numSteps: 0,\n          chart: me\n        }));\n      }\n\n      return me;\n    },\n    draw: function draw(easingValue) {\n      var me = this;\n      me.clear();\n\n      if (helpers$1.isNullOrUndef(easingValue)) {\n        easingValue = 1;\n      }\n\n      me.transition(easingValue);\n\n      if (me.width <= 0 || me.height <= 0) {\n        return;\n      }\n\n      if (core_plugins.notify(me, 'beforeDraw', [easingValue]) === false) {\n        return;\n      } // Draw all the scales\n\n\n      helpers$1.each(me.boxes, function (box) {\n        box.draw(me.chartArea);\n      }, me);\n      me.drawDatasets(easingValue);\n\n      me._drawTooltip(easingValue);\n\n      core_plugins.notify(me, 'afterDraw', [easingValue]);\n    },\n\n    /**\n     * @private\n     */\n    transition: function transition(easingValue) {\n      var me = this;\n\n      for (var i = 0, ilen = (me.data.datasets || []).length; i < ilen; ++i) {\n        if (me.isDatasetVisible(i)) {\n          me.getDatasetMeta(i).controller.transition(easingValue);\n        }\n      }\n\n      me.tooltip.transition(easingValue);\n    },\n\n    /**\n     * Draws all datasets unless a plugin returns `false` to the `beforeDatasetsDraw`\n     * hook, in which case, plugins will not be called on `afterDatasetsDraw`.\n     * @private\n     */\n    drawDatasets: function drawDatasets(easingValue) {\n      var me = this;\n\n      if (core_plugins.notify(me, 'beforeDatasetsDraw', [easingValue]) === false) {\n        return;\n      } // Draw datasets reversed to support proper line stacking\n\n\n      for (var i = (me.data.datasets || []).length - 1; i >= 0; --i) {\n        if (me.isDatasetVisible(i)) {\n          me.drawDataset(i, easingValue);\n        }\n      }\n\n      core_plugins.notify(me, 'afterDatasetsDraw', [easingValue]);\n    },\n\n    /**\n     * Draws dataset at index unless a plugin returns `false` to the `beforeDatasetDraw`\n     * hook, in which case, plugins will not be called on `afterDatasetDraw`.\n     * @private\n     */\n    drawDataset: function drawDataset(index, easingValue) {\n      var me = this;\n      var meta = me.getDatasetMeta(index);\n      var args = {\n        meta: meta,\n        index: index,\n        easingValue: easingValue\n      };\n\n      if (core_plugins.notify(me, 'beforeDatasetDraw', [args]) === false) {\n        return;\n      }\n\n      meta.controller.draw(easingValue);\n      core_plugins.notify(me, 'afterDatasetDraw', [args]);\n    },\n\n    /**\n     * Draws tooltip unless a plugin returns `false` to the `beforeTooltipDraw`\n     * hook, in which case, plugins will not be called on `afterTooltipDraw`.\n     * @private\n     */\n    _drawTooltip: function _drawTooltip(easingValue) {\n      var me = this;\n      var tooltip = me.tooltip;\n      var args = {\n        tooltip: tooltip,\n        easingValue: easingValue\n      };\n\n      if (core_plugins.notify(me, 'beforeTooltipDraw', [args]) === false) {\n        return;\n      }\n\n      tooltip.draw();\n      core_plugins.notify(me, 'afterTooltipDraw', [args]);\n    },\n\n    /**\n     * Get the single element that was clicked on\n     * @return An object containing the dataset index and element index of the matching element. Also contains the rectangle that was draw\n     */\n    getElementAtEvent: function getElementAtEvent(e) {\n      return core_interaction.modes.single(this, e);\n    },\n    getElementsAtEvent: function getElementsAtEvent(e) {\n      return core_interaction.modes.label(this, e, {\n        intersect: true\n      });\n    },\n    getElementsAtXAxis: function getElementsAtXAxis(e) {\n      return core_interaction.modes['x-axis'](this, e, {\n        intersect: true\n      });\n    },\n    getElementsAtEventForMode: function getElementsAtEventForMode(e, mode, options) {\n      var method = core_interaction.modes[mode];\n\n      if (typeof method === 'function') {\n        return method(this, e, options);\n      }\n\n      return [];\n    },\n    getDatasetAtEvent: function getDatasetAtEvent(e) {\n      return core_interaction.modes.dataset(this, e, {\n        intersect: true\n      });\n    },\n    getDatasetMeta: function getDatasetMeta(datasetIndex) {\n      var me = this;\n      var dataset = me.data.datasets[datasetIndex];\n\n      if (!dataset._meta) {\n        dataset._meta = {};\n      }\n\n      var meta = dataset._meta[me.id];\n\n      if (!meta) {\n        meta = dataset._meta[me.id] = {\n          type: null,\n          data: [],\n          dataset: null,\n          controller: null,\n          hidden: null,\n          // See isDatasetVisible() comment\n          xAxisID: null,\n          yAxisID: null\n        };\n      }\n\n      return meta;\n    },\n    getVisibleDatasetCount: function getVisibleDatasetCount() {\n      var count = 0;\n\n      for (var i = 0, ilen = this.data.datasets.length; i < ilen; ++i) {\n        if (this.isDatasetVisible(i)) {\n          count++;\n        }\n      }\n\n      return count;\n    },\n    isDatasetVisible: function isDatasetVisible(datasetIndex) {\n      var meta = this.getDatasetMeta(datasetIndex); // meta.hidden is a per chart dataset hidden flag override with 3 states: if true or false,\n      // the dataset.hidden value is ignored, else if null, the dataset hidden state is returned.\n\n      return typeof meta.hidden === 'boolean' ? !meta.hidden : !this.data.datasets[datasetIndex].hidden;\n    },\n    generateLegend: function generateLegend() {\n      return this.options.legendCallback(this);\n    },\n\n    /**\n     * @private\n     */\n    destroyDatasetMeta: function destroyDatasetMeta(datasetIndex) {\n      var id = this.id;\n      var dataset = this.data.datasets[datasetIndex];\n      var meta = dataset._meta && dataset._meta[id];\n\n      if (meta) {\n        meta.controller.destroy();\n        delete dataset._meta[id];\n      }\n    },\n    destroy: function destroy() {\n      var me = this;\n      var canvas = me.canvas;\n      var i, ilen;\n      me.stop(); // dataset controllers need to cleanup associated data\n\n      for (i = 0, ilen = me.data.datasets.length; i < ilen; ++i) {\n        me.destroyDatasetMeta(i);\n      }\n\n      if (canvas) {\n        me.unbindEvents();\n        helpers$1.canvas.clear(me);\n        platform.releaseContext(me.ctx);\n        me.canvas = null;\n        me.ctx = null;\n      }\n\n      core_plugins.notify(me, 'destroy');\n      delete Chart.instances[me.id];\n    },\n    toBase64Image: function toBase64Image() {\n      return this.canvas.toDataURL.apply(this.canvas, arguments);\n    },\n    initToolTip: function initToolTip() {\n      var me = this;\n      me.tooltip = new core_tooltip({\n        _chart: me,\n        _chartInstance: me,\n        // deprecated, backward compatibility\n        _data: me.data,\n        _options: me.options.tooltips\n      }, me);\n    },\n\n    /**\n     * @private\n     */\n    bindEvents: function bindEvents() {\n      var me = this;\n      var listeners = me._listeners = {};\n\n      var listener = function listener() {\n        me.eventHandler.apply(me, arguments);\n      };\n\n      helpers$1.each(me.options.events, function (type) {\n        platform.addEventListener(me, type, listener);\n        listeners[type] = listener;\n      }); // Elements used to detect size change should not be injected for non responsive charts.\n      // See https://github.com/chartjs/Chart.js/issues/2210\n\n      if (me.options.responsive) {\n        listener = function listener() {\n          me.resize();\n        };\n\n        platform.addEventListener(me, 'resize', listener);\n        listeners.resize = listener;\n      }\n    },\n\n    /**\n     * @private\n     */\n    unbindEvents: function unbindEvents() {\n      var me = this;\n      var listeners = me._listeners;\n\n      if (!listeners) {\n        return;\n      }\n\n      delete me._listeners;\n      helpers$1.each(listeners, function (listener, type) {\n        platform.removeEventListener(me, type, listener);\n      });\n    },\n    updateHoverStyle: function updateHoverStyle(elements, mode, enabled) {\n      var method = enabled ? 'setHoverStyle' : 'removeHoverStyle';\n      var element, i, ilen;\n\n      for (i = 0, ilen = elements.length; i < ilen; ++i) {\n        element = elements[i];\n\n        if (element) {\n          this.getDatasetMeta(element._datasetIndex).controller[method](element);\n        }\n      }\n    },\n\n    /**\n     * @private\n     */\n    eventHandler: function eventHandler(e) {\n      var me = this;\n      var tooltip = me.tooltip;\n\n      if (core_plugins.notify(me, 'beforeEvent', [e]) === false) {\n        return;\n      } // Buffer any update calls so that renders do not occur\n\n\n      me._bufferedRender = true;\n      me._bufferedRequest = null;\n      var changed = me.handleEvent(e); // for smooth tooltip animations issue #4989\n      // the tooltip should be the source of change\n      // Animation check workaround:\n      // tooltip._start will be null when tooltip isn't animating\n\n      if (tooltip) {\n        changed = tooltip._start ? tooltip.handleEvent(e) : changed | tooltip.handleEvent(e);\n      }\n\n      core_plugins.notify(me, 'afterEvent', [e]);\n      var bufferedRequest = me._bufferedRequest;\n\n      if (bufferedRequest) {\n        // If we have an update that was triggered, we need to do a normal render\n        me.render(bufferedRequest);\n      } else if (changed && !me.animating) {\n        // If entering, leaving, or changing elements, animate the change via pivot\n        me.stop(); // We only need to render at this point. Updating will cause scales to be\n        // recomputed generating flicker & using more memory than necessary.\n\n        me.render({\n          duration: me.options.hover.animationDuration,\n          lazy: true\n        });\n      }\n\n      me._bufferedRender = false;\n      me._bufferedRequest = null;\n      return me;\n    },\n\n    /**\n     * Handle an event\n     * @private\n     * @param {IEvent} event the event to handle\n     * @return {boolean} true if the chart needs to re-render\n     */\n    handleEvent: function handleEvent(e) {\n      var me = this;\n      var options = me.options || {};\n      var hoverOptions = options.hover;\n      var changed = false;\n      me.lastActive = me.lastActive || []; // Find Active Elements for hover and tooltips\n\n      if (e.type === 'mouseout') {\n        me.active = [];\n      } else {\n        me.active = me.getElementsAtEventForMode(e, hoverOptions.mode, hoverOptions);\n      } // Invoke onHover hook\n      // Need to call with native event here to not break backwards compatibility\n\n\n      helpers$1.callback(options.onHover || options.hover.onHover, [e.native, me.active], me);\n\n      if (e.type === 'mouseup' || e.type === 'click') {\n        if (options.onClick) {\n          // Use e.native here for backwards compatibility\n          options.onClick.call(me, e.native, me.active);\n        }\n      } // Remove styling for last active (even if it may still be active)\n\n\n      if (me.lastActive.length) {\n        me.updateHoverStyle(me.lastActive, hoverOptions.mode, false);\n      } // Built in hover styling\n\n\n      if (me.active.length && hoverOptions.mode) {\n        me.updateHoverStyle(me.active, hoverOptions.mode, true);\n      }\n\n      changed = !helpers$1.arrayEquals(me.active, me.lastActive); // Remember Last Actives\n\n      me.lastActive = me.active;\n      return changed;\n    }\n  });\n  /**\n   * NOTE(SB) We actually don't use this container anymore but we need to keep it\n   * for backward compatibility. Though, it can still be useful for plugins that\n   * would need to work on multiple charts?!\n   */\n\n  Chart.instances = {};\n  var core_controller = Chart; // DEPRECATIONS\n\n  /**\n   * Provided for backward compatibility, use Chart instead.\n   * @class Chart.Controller\n   * @deprecated since version 2.6\n   * @todo remove at version 3\n   * @private\n   */\n\n  Chart.Controller = Chart;\n  /**\n   * Provided for backward compatibility, not available anymore.\n   * @namespace Chart\n   * @deprecated since version 2.8\n   * @todo remove at version 3\n   * @private\n   */\n\n  Chart.types = {};\n  /**\n   * Provided for backward compatibility, not available anymore.\n   * @namespace Chart.helpers.configMerge\n   * @deprecated since version 2.8.0\n   * @todo remove at version 3\n   * @private\n   */\n\n  helpers$1.configMerge = mergeConfig;\n  /**\n   * Provided for backward compatibility, not available anymore.\n   * @namespace Chart.helpers.scaleMerge\n   * @deprecated since version 2.8.0\n   * @todo remove at version 3\n   * @private\n   */\n\n  helpers$1.scaleMerge = mergeScaleConfig;\n\n  var core_helpers = function core_helpers() {\n    // -- Basic js utility methods\n    helpers$1.where = function (collection, filterCallback) {\n      if (helpers$1.isArray(collection) && Array.prototype.filter) {\n        return collection.filter(filterCallback);\n      }\n\n      var filtered = [];\n      helpers$1.each(collection, function (item) {\n        if (filterCallback(item)) {\n          filtered.push(item);\n        }\n      });\n      return filtered;\n    };\n\n    helpers$1.findIndex = Array.prototype.findIndex ? function (array, callback, scope) {\n      return array.findIndex(callback, scope);\n    } : function (array, callback, scope) {\n      scope = scope === undefined ? array : scope;\n\n      for (var i = 0, ilen = array.length; i < ilen; ++i) {\n        if (callback.call(scope, array[i], i, array)) {\n          return i;\n        }\n      }\n\n      return -1;\n    };\n\n    helpers$1.findNextWhere = function (arrayToSearch, filterCallback, startIndex) {\n      // Default to start of the array\n      if (helpers$1.isNullOrUndef(startIndex)) {\n        startIndex = -1;\n      }\n\n      for (var i = startIndex + 1; i < arrayToSearch.length; i++) {\n        var currentItem = arrayToSearch[i];\n\n        if (filterCallback(currentItem)) {\n          return currentItem;\n        }\n      }\n    };\n\n    helpers$1.findPreviousWhere = function (arrayToSearch, filterCallback, startIndex) {\n      // Default to end of the array\n      if (helpers$1.isNullOrUndef(startIndex)) {\n        startIndex = arrayToSearch.length;\n      }\n\n      for (var i = startIndex - 1; i >= 0; i--) {\n        var currentItem = arrayToSearch[i];\n\n        if (filterCallback(currentItem)) {\n          return currentItem;\n        }\n      }\n    }; // -- Math methods\n\n\n    helpers$1.isNumber = function (n) {\n      return !isNaN(parseFloat(n)) && isFinite(n);\n    };\n\n    helpers$1.almostEquals = function (x, y, epsilon) {\n      return Math.abs(x - y) < epsilon;\n    };\n\n    helpers$1.almostWhole = function (x, epsilon) {\n      var rounded = Math.round(x);\n      return rounded - epsilon < x && rounded + epsilon > x;\n    };\n\n    helpers$1.max = function (array) {\n      return array.reduce(function (max, value) {\n        if (!isNaN(value)) {\n          return Math.max(max, value);\n        }\n\n        return max;\n      }, Number.NEGATIVE_INFINITY);\n    };\n\n    helpers$1.min = function (array) {\n      return array.reduce(function (min, value) {\n        if (!isNaN(value)) {\n          return Math.min(min, value);\n        }\n\n        return min;\n      }, Number.POSITIVE_INFINITY);\n    };\n\n    helpers$1.sign = Math.sign ? function (x) {\n      return Math.sign(x);\n    } : function (x) {\n      x = +x; // convert to a number\n\n      if (x === 0 || isNaN(x)) {\n        return x;\n      }\n\n      return x > 0 ? 1 : -1;\n    };\n    helpers$1.log10 = Math.log10 ? function (x) {\n      return Math.log10(x);\n    } : function (x) {\n      var exponent = Math.log(x) * Math.LOG10E; // Math.LOG10E = 1 / Math.LN10.\n      // Check for whole powers of 10,\n      // which due to floating point rounding error should be corrected.\n\n      var powerOf10 = Math.round(exponent);\n      var isPowerOf10 = x === Math.pow(10, powerOf10);\n      return isPowerOf10 ? powerOf10 : exponent;\n    };\n\n    helpers$1.toRadians = function (degrees) {\n      return degrees * (Math.PI / 180);\n    };\n\n    helpers$1.toDegrees = function (radians) {\n      return radians * (180 / Math.PI);\n    };\n    /**\n     * Returns the number of decimal places\n     * i.e. the number of digits after the decimal point, of the value of this Number.\n     * @param {number} x - A number.\n     * @returns {number} The number of decimal places.\n     * @private\n     */\n\n\n    helpers$1._decimalPlaces = function (x) {\n      if (!helpers$1.isFinite(x)) {\n        return;\n      }\n\n      var e = 1;\n      var p = 0;\n\n      while (Math.round(x * e) / e !== x) {\n        e *= 10;\n        p++;\n      }\n\n      return p;\n    }; // Gets the angle from vertical upright to the point about a centre.\n\n\n    helpers$1.getAngleFromPoint = function (centrePoint, anglePoint) {\n      var distanceFromXCenter = anglePoint.x - centrePoint.x;\n      var distanceFromYCenter = anglePoint.y - centrePoint.y;\n      var radialDistanceFromCenter = Math.sqrt(distanceFromXCenter * distanceFromXCenter + distanceFromYCenter * distanceFromYCenter);\n      var angle = Math.atan2(distanceFromYCenter, distanceFromXCenter);\n\n      if (angle < -0.5 * Math.PI) {\n        angle += 2.0 * Math.PI; // make sure the returned angle is in the range of (-PI/2, 3PI/2]\n      }\n\n      return {\n        angle: angle,\n        distance: radialDistanceFromCenter\n      };\n    };\n\n    helpers$1.distanceBetweenPoints = function (pt1, pt2) {\n      return Math.sqrt(Math.pow(pt2.x - pt1.x, 2) + Math.pow(pt2.y - pt1.y, 2));\n    };\n    /**\n     * Provided for backward compatibility, not available anymore\n     * @function Chart.helpers.aliasPixel\n     * @deprecated since version 2.8.0\n     * @todo remove at version 3\n     */\n\n\n    helpers$1.aliasPixel = function (pixelWidth) {\n      return pixelWidth % 2 === 0 ? 0 : 0.5;\n    };\n    /**\n     * Returns the aligned pixel value to avoid anti-aliasing blur\n     * @param {Chart} chart - The chart instance.\n     * @param {number} pixel - A pixel value.\n     * @param {number} width - The width of the element.\n     * @returns {number} The aligned pixel value.\n     * @private\n     */\n\n\n    helpers$1._alignPixel = function (chart, pixel, width) {\n      var devicePixelRatio = chart.currentDevicePixelRatio;\n      var halfWidth = width / 2;\n      return Math.round((pixel - halfWidth) * devicePixelRatio) / devicePixelRatio + halfWidth;\n    };\n\n    helpers$1.splineCurve = function (firstPoint, middlePoint, afterPoint, t) {\n      // Props to Rob Spencer at scaled innovation for his post on splining between points\n      // http://scaledinnovation.com/analytics/splines/aboutSplines.html\n      // This function must also respect \"skipped\" points\n      var previous = firstPoint.skip ? middlePoint : firstPoint;\n      var current = middlePoint;\n      var next = afterPoint.skip ? middlePoint : afterPoint;\n      var d01 = Math.sqrt(Math.pow(current.x - previous.x, 2) + Math.pow(current.y - previous.y, 2));\n      var d12 = Math.sqrt(Math.pow(next.x - current.x, 2) + Math.pow(next.y - current.y, 2));\n      var s01 = d01 / (d01 + d12);\n      var s12 = d12 / (d01 + d12); // If all points are the same, s01 & s02 will be inf\n\n      s01 = isNaN(s01) ? 0 : s01;\n      s12 = isNaN(s12) ? 0 : s12;\n      var fa = t * s01; // scaling factor for triangle Ta\n\n      var fb = t * s12;\n      return {\n        previous: {\n          x: current.x - fa * (next.x - previous.x),\n          y: current.y - fa * (next.y - previous.y)\n        },\n        next: {\n          x: current.x + fb * (next.x - previous.x),\n          y: current.y + fb * (next.y - previous.y)\n        }\n      };\n    };\n\n    helpers$1.EPSILON = Number.EPSILON || 1e-14;\n\n    helpers$1.splineCurveMonotone = function (points) {\n      // This function calculates Bézier control points in a similar way than |splineCurve|,\n      // but preserves monotonicity of the provided data and ensures no local extremums are added\n      // between the dataset discrete points due to the interpolation.\n      // See : https://en.wikipedia.org/wiki/Monotone_cubic_interpolation\n      var pointsWithTangents = (points || []).map(function (point) {\n        return {\n          model: point._model,\n          deltaK: 0,\n          mK: 0\n        };\n      }); // Calculate slopes (deltaK) and initialize tangents (mK)\n\n      var pointsLen = pointsWithTangents.length;\n      var i, pointBefore, pointCurrent, pointAfter;\n\n      for (i = 0; i < pointsLen; ++i) {\n        pointCurrent = pointsWithTangents[i];\n\n        if (pointCurrent.model.skip) {\n          continue;\n        }\n\n        pointBefore = i > 0 ? pointsWithTangents[i - 1] : null;\n        pointAfter = i < pointsLen - 1 ? pointsWithTangents[i + 1] : null;\n\n        if (pointAfter && !pointAfter.model.skip) {\n          var slopeDeltaX = pointAfter.model.x - pointCurrent.model.x; // In the case of two points that appear at the same x pixel, slopeDeltaX is 0\n\n          pointCurrent.deltaK = slopeDeltaX !== 0 ? (pointAfter.model.y - pointCurrent.model.y) / slopeDeltaX : 0;\n        }\n\n        if (!pointBefore || pointBefore.model.skip) {\n          pointCurrent.mK = pointCurrent.deltaK;\n        } else if (!pointAfter || pointAfter.model.skip) {\n          pointCurrent.mK = pointBefore.deltaK;\n        } else if (this.sign(pointBefore.deltaK) !== this.sign(pointCurrent.deltaK)) {\n          pointCurrent.mK = 0;\n        } else {\n          pointCurrent.mK = (pointBefore.deltaK + pointCurrent.deltaK) / 2;\n        }\n      } // Adjust tangents to ensure monotonic properties\n\n\n      var alphaK, betaK, tauK, squaredMagnitude;\n\n      for (i = 0; i < pointsLen - 1; ++i) {\n        pointCurrent = pointsWithTangents[i];\n        pointAfter = pointsWithTangents[i + 1];\n\n        if (pointCurrent.model.skip || pointAfter.model.skip) {\n          continue;\n        }\n\n        if (helpers$1.almostEquals(pointCurrent.deltaK, 0, this.EPSILON)) {\n          pointCurrent.mK = pointAfter.mK = 0;\n          continue;\n        }\n\n        alphaK = pointCurrent.mK / pointCurrent.deltaK;\n        betaK = pointAfter.mK / pointCurrent.deltaK;\n        squaredMagnitude = Math.pow(alphaK, 2) + Math.pow(betaK, 2);\n\n        if (squaredMagnitude <= 9) {\n          continue;\n        }\n\n        tauK = 3 / Math.sqrt(squaredMagnitude);\n        pointCurrent.mK = alphaK * tauK * pointCurrent.deltaK;\n        pointAfter.mK = betaK * tauK * pointCurrent.deltaK;\n      } // Compute control points\n\n\n      var deltaX;\n\n      for (i = 0; i < pointsLen; ++i) {\n        pointCurrent = pointsWithTangents[i];\n\n        if (pointCurrent.model.skip) {\n          continue;\n        }\n\n        pointBefore = i > 0 ? pointsWithTangents[i - 1] : null;\n        pointAfter = i < pointsLen - 1 ? pointsWithTangents[i + 1] : null;\n\n        if (pointBefore && !pointBefore.model.skip) {\n          deltaX = (pointCurrent.model.x - pointBefore.model.x) / 3;\n          pointCurrent.model.controlPointPreviousX = pointCurrent.model.x - deltaX;\n          pointCurrent.model.controlPointPreviousY = pointCurrent.model.y - deltaX * pointCurrent.mK;\n        }\n\n        if (pointAfter && !pointAfter.model.skip) {\n          deltaX = (pointAfter.model.x - pointCurrent.model.x) / 3;\n          pointCurrent.model.controlPointNextX = pointCurrent.model.x + deltaX;\n          pointCurrent.model.controlPointNextY = pointCurrent.model.y + deltaX * pointCurrent.mK;\n        }\n      }\n    };\n\n    helpers$1.nextItem = function (collection, index, loop) {\n      if (loop) {\n        return index >= collection.length - 1 ? collection[0] : collection[index + 1];\n      }\n\n      return index >= collection.length - 1 ? collection[collection.length - 1] : collection[index + 1];\n    };\n\n    helpers$1.previousItem = function (collection, index, loop) {\n      if (loop) {\n        return index <= 0 ? collection[collection.length - 1] : collection[index - 1];\n      }\n\n      return index <= 0 ? collection[0] : collection[index - 1];\n    }; // Implementation of the nice number algorithm used in determining where axis labels will go\n\n\n    helpers$1.niceNum = function (range, round) {\n      var exponent = Math.floor(helpers$1.log10(range));\n      var fraction = range / Math.pow(10, exponent);\n      var niceFraction;\n\n      if (round) {\n        if (fraction < 1.5) {\n          niceFraction = 1;\n        } else if (fraction < 3) {\n          niceFraction = 2;\n        } else if (fraction < 7) {\n          niceFraction = 5;\n        } else {\n          niceFraction = 10;\n        }\n      } else if (fraction <= 1.0) {\n        niceFraction = 1;\n      } else if (fraction <= 2) {\n        niceFraction = 2;\n      } else if (fraction <= 5) {\n        niceFraction = 5;\n      } else {\n        niceFraction = 10;\n      }\n\n      return niceFraction * Math.pow(10, exponent);\n    }; // Request animation polyfill - https://www.paulirish.com/2011/requestanimationframe-for-smart-animating/\n\n\n    helpers$1.requestAnimFrame = function () {\n      if (typeof window === 'undefined') {\n        return function (callback) {\n          callback();\n        };\n      }\n\n      return window.requestAnimationFrame || window.webkitRequestAnimationFrame || window.mozRequestAnimationFrame || window.oRequestAnimationFrame || window.msRequestAnimationFrame || function (callback) {\n        return window.setTimeout(callback, 1000 / 60);\n      };\n    }(); // -- DOM methods\n\n\n    helpers$1.getRelativePosition = function (evt, chart) {\n      var mouseX, mouseY;\n      var e = evt.originalEvent || evt;\n      var canvas = evt.target || evt.srcElement;\n      var boundingRect = canvas.getBoundingClientRect();\n      var touches = e.touches;\n\n      if (touches && touches.length > 0) {\n        mouseX = touches[0].clientX;\n        mouseY = touches[0].clientY;\n      } else {\n        mouseX = e.clientX;\n        mouseY = e.clientY;\n      } // Scale mouse coordinates into canvas coordinates\n      // by following the pattern laid out by 'jerryj' in the comments of\n      // https://www.html5canvastutorials.com/advanced/html5-canvas-mouse-coordinates/\n\n\n      var paddingLeft = parseFloat(helpers$1.getStyle(canvas, 'padding-left'));\n      var paddingTop = parseFloat(helpers$1.getStyle(canvas, 'padding-top'));\n      var paddingRight = parseFloat(helpers$1.getStyle(canvas, 'padding-right'));\n      var paddingBottom = parseFloat(helpers$1.getStyle(canvas, 'padding-bottom'));\n      var width = boundingRect.right - boundingRect.left - paddingLeft - paddingRight;\n      var height = boundingRect.bottom - boundingRect.top - paddingTop - paddingBottom; // We divide by the current device pixel ratio, because the canvas is scaled up by that amount in each direction. However\n      // the backend model is in unscaled coordinates. Since we are going to deal with our model coordinates, we go back here\n\n      mouseX = Math.round((mouseX - boundingRect.left - paddingLeft) / width * canvas.width / chart.currentDevicePixelRatio);\n      mouseY = Math.round((mouseY - boundingRect.top - paddingTop) / height * canvas.height / chart.currentDevicePixelRatio);\n      return {\n        x: mouseX,\n        y: mouseY\n      };\n    }; // Private helper function to convert max-width/max-height values that may be percentages into a number\n\n\n    function parseMaxStyle(styleValue, node, parentProperty) {\n      var valueInPixels;\n\n      if (typeof styleValue === 'string') {\n        valueInPixels = parseInt(styleValue, 10);\n\n        if (styleValue.indexOf('%') !== -1) {\n          // percentage * size in dimension\n          valueInPixels = valueInPixels / 100 * node.parentNode[parentProperty];\n        }\n      } else {\n        valueInPixels = styleValue;\n      }\n\n      return valueInPixels;\n    }\n    /**\n     * Returns if the given value contains an effective constraint.\n     * @private\n     */\n\n\n    function isConstrainedValue(value) {\n      return value !== undefined && value !== null && value !== 'none';\n    }\n    /**\n     * Returns the max width or height of the given DOM node in a cross-browser compatible fashion\n     * @param {HTMLElement} domNode - the node to check the constraint on\n     * @param {string} maxStyle - the style that defines the maximum for the direction we are using ('max-width' / 'max-height')\n     * @param {string} percentageProperty - property of parent to use when calculating width as a percentage\n     * @see {@link https://www.nathanaeljones.com/blog/2013/reading-max-width-cross-browser}\n     */\n\n\n    function getConstraintDimension(domNode, maxStyle, percentageProperty) {\n      var view = document.defaultView;\n\n      var parentNode = helpers$1._getParentNode(domNode);\n\n      var constrainedNode = view.getComputedStyle(domNode)[maxStyle];\n      var constrainedContainer = view.getComputedStyle(parentNode)[maxStyle];\n      var hasCNode = isConstrainedValue(constrainedNode);\n      var hasCContainer = isConstrainedValue(constrainedContainer);\n      var infinity = Number.POSITIVE_INFINITY;\n\n      if (hasCNode || hasCContainer) {\n        return Math.min(hasCNode ? parseMaxStyle(constrainedNode, domNode, percentageProperty) : infinity, hasCContainer ? parseMaxStyle(constrainedContainer, parentNode, percentageProperty) : infinity);\n      }\n\n      return 'none';\n    } // returns Number or undefined if no constraint\n\n\n    helpers$1.getConstraintWidth = function (domNode) {\n      return getConstraintDimension(domNode, 'max-width', 'clientWidth');\n    }; // returns Number or undefined if no constraint\n\n\n    helpers$1.getConstraintHeight = function (domNode) {\n      return getConstraintDimension(domNode, 'max-height', 'clientHeight');\n    };\n    /**\n     * @private\n    \t */\n\n\n    helpers$1._calculatePadding = function (container, padding, parentDimension) {\n      padding = helpers$1.getStyle(container, padding);\n      return padding.indexOf('%') > -1 ? parentDimension * parseInt(padding, 10) / 100 : parseInt(padding, 10);\n    };\n    /**\n     * @private\n     */\n\n\n    helpers$1._getParentNode = function (domNode) {\n      var parent = domNode.parentNode;\n\n      if (parent && parent.toString() === '[object ShadowRoot]') {\n        parent = parent.host;\n      }\n\n      return parent;\n    };\n\n    helpers$1.getMaximumWidth = function (domNode) {\n      var container = helpers$1._getParentNode(domNode);\n\n      if (!container) {\n        return domNode.clientWidth;\n      }\n\n      var clientWidth = container.clientWidth;\n\n      var paddingLeft = helpers$1._calculatePadding(container, 'padding-left', clientWidth);\n\n      var paddingRight = helpers$1._calculatePadding(container, 'padding-right', clientWidth);\n\n      var w = clientWidth - paddingLeft - paddingRight;\n      var cw = helpers$1.getConstraintWidth(domNode);\n      return isNaN(cw) ? w : Math.min(w, cw);\n    };\n\n    helpers$1.getMaximumHeight = function (domNode) {\n      var container = helpers$1._getParentNode(domNode);\n\n      if (!container) {\n        return domNode.clientHeight;\n      }\n\n      var clientHeight = container.clientHeight;\n\n      var paddingTop = helpers$1._calculatePadding(container, 'padding-top', clientHeight);\n\n      var paddingBottom = helpers$1._calculatePadding(container, 'padding-bottom', clientHeight);\n\n      var h = clientHeight - paddingTop - paddingBottom;\n      var ch = helpers$1.getConstraintHeight(domNode);\n      return isNaN(ch) ? h : Math.min(h, ch);\n    };\n\n    helpers$1.getStyle = function (el, property) {\n      return el.currentStyle ? el.currentStyle[property] : document.defaultView.getComputedStyle(el, null).getPropertyValue(property);\n    };\n\n    helpers$1.retinaScale = function (chart, forceRatio) {\n      var pixelRatio = chart.currentDevicePixelRatio = forceRatio || typeof window !== 'undefined' && window.devicePixelRatio || 1;\n\n      if (pixelRatio === 1) {\n        return;\n      }\n\n      var canvas = chart.canvas;\n      var height = chart.height;\n      var width = chart.width;\n      canvas.height = height * pixelRatio;\n      canvas.width = width * pixelRatio;\n      chart.ctx.scale(pixelRatio, pixelRatio); // If no style has been set on the canvas, the render size is used as display size,\n      // making the chart visually bigger, so let's enforce it to the \"correct\" values.\n      // See https://github.com/chartjs/Chart.js/issues/3575\n\n      if (!canvas.style.height && !canvas.style.width) {\n        canvas.style.height = height + 'px';\n        canvas.style.width = width + 'px';\n      }\n    }; // -- Canvas methods\n\n\n    helpers$1.fontString = function (pixelSize, fontStyle, fontFamily) {\n      return fontStyle + ' ' + pixelSize + 'px ' + fontFamily;\n    };\n\n    helpers$1.longestText = function (ctx, font, arrayOfThings, cache) {\n      cache = cache || {};\n      var data = cache.data = cache.data || {};\n      var gc = cache.garbageCollect = cache.garbageCollect || [];\n\n      if (cache.font !== font) {\n        data = cache.data = {};\n        gc = cache.garbageCollect = [];\n        cache.font = font;\n      }\n\n      ctx.font = font;\n      var longest = 0;\n      helpers$1.each(arrayOfThings, function (thing) {\n        // Undefined strings and arrays should not be measured\n        if (thing !== undefined && thing !== null && helpers$1.isArray(thing) !== true) {\n          longest = helpers$1.measureText(ctx, data, gc, longest, thing);\n        } else if (helpers$1.isArray(thing)) {\n          // if it is an array lets measure each element\n          // to do maybe simplify this function a bit so we can do this more recursively?\n          helpers$1.each(thing, function (nestedThing) {\n            // Undefined strings and arrays should not be measured\n            if (nestedThing !== undefined && nestedThing !== null && !helpers$1.isArray(nestedThing)) {\n              longest = helpers$1.measureText(ctx, data, gc, longest, nestedThing);\n            }\n          });\n        }\n      });\n      var gcLen = gc.length / 2;\n\n      if (gcLen > arrayOfThings.length) {\n        for (var i = 0; i < gcLen; i++) {\n          delete data[gc[i]];\n        }\n\n        gc.splice(0, gcLen);\n      }\n\n      return longest;\n    };\n\n    helpers$1.measureText = function (ctx, data, gc, longest, string) {\n      var textWidth = data[string];\n\n      if (!textWidth) {\n        textWidth = data[string] = ctx.measureText(string).width;\n        gc.push(string);\n      }\n\n      if (textWidth > longest) {\n        longest = textWidth;\n      }\n\n      return longest;\n    };\n\n    helpers$1.numberOfLabelLines = function (arrayOfThings) {\n      var numberOfLines = 1;\n      helpers$1.each(arrayOfThings, function (thing) {\n        if (helpers$1.isArray(thing)) {\n          if (thing.length > numberOfLines) {\n            numberOfLines = thing.length;\n          }\n        }\n      });\n      return numberOfLines;\n    };\n\n    helpers$1.color = !chartjsColor ? function (value) {\n      console.error('Color.js not found!');\n      return value;\n    } : function (value) {\n      /* global CanvasGradient */\n      if (value instanceof CanvasGradient) {\n        value = core_defaults.global.defaultColor;\n      }\n\n      return chartjsColor(value);\n    };\n\n    helpers$1.getHoverColor = function (colorValue) {\n      /* global CanvasPattern */\n      return colorValue instanceof CanvasPattern || colorValue instanceof CanvasGradient ? colorValue : helpers$1.color(colorValue).saturate(0.5).darken(0.1).rgbString();\n    };\n  };\n\n  function abstract() {\n    throw new Error('This method is not implemented: either no adapter can ' + 'be found or an incomplete integration was provided.');\n  }\n  /**\n   * Date adapter (current used by the time scale)\n   * @namespace Chart._adapters._date\n   * @memberof Chart._adapters\n   * @private\n   */\n\n  /**\n   * Currently supported unit string values.\n   * @typedef {('millisecond'|'second'|'minute'|'hour'|'day'|'week'|'month'|'quarter'|'year')}\n   * @memberof Chart._adapters._date\n   * @name Unit\n   */\n\n  /**\n   * @class\n   */\n\n\n  function DateAdapter(options) {\n    this.options = options || {};\n  }\n\n  helpers$1.extend(DateAdapter.prototype,\n  /** @lends DateAdapter */\n  {\n    /**\n     * Returns a map of time formats for the supported formatting units defined\n     * in Unit as well as 'datetime' representing a detailed date/time string.\n     * @returns {{string: string}}\n     */\n    formats: abstract,\n\n    /**\n     * Parses the given `value` and return the associated timestamp.\n     * @param {any} value - the value to parse (usually comes from the data)\n     * @param {string} [format] - the expected data format\n     * @returns {(number|null)}\n     * @function\n     */\n    parse: abstract,\n\n    /**\n     * Returns the formatted date in the specified `format` for a given `timestamp`.\n     * @param {number} timestamp - the timestamp to format\n     * @param {string} format - the date/time token\n     * @return {string}\n     * @function\n     */\n    format: abstract,\n\n    /**\n     * Adds the specified `amount` of `unit` to the given `timestamp`.\n     * @param {number} timestamp - the input timestamp\n     * @param {number} amount - the amount to add\n     * @param {Unit} unit - the unit as string\n     * @return {number}\n     * @function\n     */\n    add: abstract,\n\n    /**\n     * Returns the number of `unit` between the given timestamps.\n     * @param {number} max - the input timestamp (reference)\n     * @param {number} min - the timestamp to substract\n     * @param {Unit} unit - the unit as string\n     * @return {number}\n     * @function\n     */\n    diff: abstract,\n\n    /**\n     * Returns start of `unit` for the given `timestamp`.\n     * @param {number} timestamp - the input timestamp\n     * @param {Unit} unit - the unit as string\n     * @param {number} [weekday] - the ISO day of the week with 1 being Monday\n     * and 7 being Sunday (only needed if param *unit* is `isoWeek`).\n     * @function\n     */\n    startOf: abstract,\n\n    /**\n     * Returns end of `unit` for the given `timestamp`.\n     * @param {number} timestamp - the input timestamp\n     * @param {Unit} unit - the unit as string\n     * @function\n     */\n    endOf: abstract,\n    // DEPRECATIONS\n\n    /**\n     * Provided for backward compatibility for scale.getValueForPixel(),\n     * this method should be overridden only by the moment adapter.\n     * @deprecated since version 2.8.0\n     * @todo remove at version 3\n     * @private\n     */\n    _create: function _create(value) {\n      return value;\n    }\n  });\n\n  DateAdapter.override = function (members) {\n    helpers$1.extend(DateAdapter.prototype, members);\n  };\n\n  var _date = DateAdapter;\n  var core_adapters = {\n    _date: _date\n  };\n  /**\n   * Namespace to hold static tick generation functions\n   * @namespace Chart.Ticks\n   */\n\n  var core_ticks = {\n    /**\n     * Namespace to hold formatters for different types of ticks\n     * @namespace Chart.Ticks.formatters\n     */\n    formatters: {\n      /**\n       * Formatter for value labels\n       * @method Chart.Ticks.formatters.values\n       * @param value the value to display\n       * @return {string|string[]} the label to display\n       */\n      values: function values(value) {\n        return helpers$1.isArray(value) ? value : '' + value;\n      },\n\n      /**\n       * Formatter for linear numeric ticks\n       * @method Chart.Ticks.formatters.linear\n       * @param tickValue {number} the value to be formatted\n       * @param index {number} the position of the tickValue parameter in the ticks array\n       * @param ticks {number[]} the list of ticks being converted\n       * @return {string} string representation of the tickValue parameter\n       */\n      linear: function linear(tickValue, index, ticks) {\n        // If we have lots of ticks, don't use the ones\n        var delta = ticks.length > 3 ? ticks[2] - ticks[1] : ticks[1] - ticks[0]; // If we have a number like 2.5 as the delta, figure out how many decimal places we need\n\n        if (Math.abs(delta) > 1) {\n          if (tickValue !== Math.floor(tickValue)) {\n            // not an integer\n            delta = tickValue - Math.floor(tickValue);\n          }\n        }\n\n        var logDelta = helpers$1.log10(Math.abs(delta));\n        var tickString = '';\n\n        if (tickValue !== 0) {\n          var maxTick = Math.max(Math.abs(ticks[0]), Math.abs(ticks[ticks.length - 1]));\n\n          if (maxTick < 1e-4) {\n            // all ticks are small numbers; use scientific notation\n            var logTick = helpers$1.log10(Math.abs(tickValue));\n            tickString = tickValue.toExponential(Math.floor(logTick) - Math.floor(logDelta));\n          } else {\n            var numDecimal = -1 * Math.floor(logDelta);\n            numDecimal = Math.max(Math.min(numDecimal, 20), 0); // toFixed has a max of 20 decimal places\n\n            tickString = tickValue.toFixed(numDecimal);\n          }\n        } else {\n          tickString = '0'; // never show decimal places for 0\n        }\n\n        return tickString;\n      },\n      logarithmic: function logarithmic(tickValue, index, ticks) {\n        var remain = tickValue / Math.pow(10, Math.floor(helpers$1.log10(tickValue)));\n\n        if (tickValue === 0) {\n          return '0';\n        } else if (remain === 1 || remain === 2 || remain === 5 || index === 0 || index === ticks.length - 1) {\n          return tickValue.toExponential();\n        }\n\n        return '';\n      }\n    }\n  };\n  var valueOrDefault$9 = helpers$1.valueOrDefault;\n  var valueAtIndexOrDefault = helpers$1.valueAtIndexOrDefault;\n\n  core_defaults._set('scale', {\n    display: true,\n    position: 'left',\n    offset: false,\n    // grid line settings\n    gridLines: {\n      display: true,\n      color: 'rgba(0, 0, 0, 0.1)',\n      lineWidth: 1,\n      drawBorder: true,\n      drawOnChartArea: true,\n      drawTicks: true,\n      tickMarkLength: 10,\n      zeroLineWidth: 1,\n      zeroLineColor: 'rgba(0,0,0,0.25)',\n      zeroLineBorderDash: [],\n      zeroLineBorderDashOffset: 0.0,\n      offsetGridLines: false,\n      borderDash: [],\n      borderDashOffset: 0.0\n    },\n    // scale label\n    scaleLabel: {\n      // display property\n      display: false,\n      // actual label\n      labelString: '',\n      // top/bottom padding\n      padding: {\n        top: 4,\n        bottom: 4\n      }\n    },\n    // label settings\n    ticks: {\n      beginAtZero: false,\n      minRotation: 0,\n      maxRotation: 50,\n      mirror: false,\n      padding: 0,\n      reverse: false,\n      display: true,\n      autoSkip: true,\n      autoSkipPadding: 0,\n      labelOffset: 0,\n      // We pass through arrays to be rendered as multiline labels, we convert Others to strings here.\n      callback: core_ticks.formatters.values,\n      minor: {},\n      major: {}\n    }\n  });\n\n  function labelsFromTicks(ticks) {\n    var labels = [];\n    var i, ilen;\n\n    for (i = 0, ilen = ticks.length; i < ilen; ++i) {\n      labels.push(ticks[i].label);\n    }\n\n    return labels;\n  }\n\n  function getPixelForGridLine(scale, index, offsetGridLines) {\n    var lineValue = scale.getPixelForTick(index);\n\n    if (offsetGridLines) {\n      if (scale.getTicks().length === 1) {\n        lineValue -= scale.isHorizontal() ? Math.max(lineValue - scale.left, scale.right - lineValue) : Math.max(lineValue - scale.top, scale.bottom - lineValue);\n      } else if (index === 0) {\n        lineValue -= (scale.getPixelForTick(1) - lineValue) / 2;\n      } else {\n        lineValue -= (lineValue - scale.getPixelForTick(index - 1)) / 2;\n      }\n    }\n\n    return lineValue;\n  }\n\n  function computeTextSize(context, tick, font) {\n    return helpers$1.isArray(tick) ? helpers$1.longestText(context, font, tick) : context.measureText(tick).width;\n  }\n\n  var core_scale = core_element.extend({\n    /**\n     * Get the padding needed for the scale\n     * @method getPadding\n     * @private\n     * @returns {Padding} the necessary padding\n     */\n    getPadding: function getPadding() {\n      var me = this;\n      return {\n        left: me.paddingLeft || 0,\n        top: me.paddingTop || 0,\n        right: me.paddingRight || 0,\n        bottom: me.paddingBottom || 0\n      };\n    },\n\n    /**\n     * Returns the scale tick objects ({label, major})\n     * @since 2.7\n     */\n    getTicks: function getTicks() {\n      return this._ticks;\n    },\n    // These methods are ordered by lifecyle. Utilities then follow.\n    // Any function defined here is inherited by all scale types.\n    // Any function can be extended by the scale type\n    mergeTicksOptions: function mergeTicksOptions() {\n      var ticks = this.options.ticks;\n\n      if (ticks.minor === false) {\n        ticks.minor = {\n          display: false\n        };\n      }\n\n      if (ticks.major === false) {\n        ticks.major = {\n          display: false\n        };\n      }\n\n      for (var key in ticks) {\n        if (key !== 'major' && key !== 'minor') {\n          if (typeof ticks.minor[key] === 'undefined') {\n            ticks.minor[key] = ticks[key];\n          }\n\n          if (typeof ticks.major[key] === 'undefined') {\n            ticks.major[key] = ticks[key];\n          }\n        }\n      }\n    },\n    beforeUpdate: function beforeUpdate() {\n      helpers$1.callback(this.options.beforeUpdate, [this]);\n    },\n    update: function update(maxWidth, maxHeight, margins) {\n      var me = this;\n      var i, ilen, labels, label, ticks, tick; // Update Lifecycle - Probably don't want to ever extend or overwrite this function ;)\n\n      me.beforeUpdate(); // Absorb the master measurements\n\n      me.maxWidth = maxWidth;\n      me.maxHeight = maxHeight;\n      me.margins = helpers$1.extend({\n        left: 0,\n        right: 0,\n        top: 0,\n        bottom: 0\n      }, margins);\n      me._maxLabelLines = 0;\n      me.longestLabelWidth = 0;\n      me.longestTextCache = me.longestTextCache || {}; // Dimensions\n\n      me.beforeSetDimensions();\n      me.setDimensions();\n      me.afterSetDimensions(); // Data min/max\n\n      me.beforeDataLimits();\n      me.determineDataLimits();\n      me.afterDataLimits(); // Ticks - `this.ticks` is now DEPRECATED!\n      // Internal ticks are now stored as objects in the PRIVATE `this._ticks` member\n      // and must not be accessed directly from outside this class. `this.ticks` being\n      // around for long time and not marked as private, we can't change its structure\n      // without unexpected breaking changes. If you need to access the scale ticks,\n      // use scale.getTicks() instead.\n\n      me.beforeBuildTicks(); // New implementations should return an array of objects but for BACKWARD COMPAT,\n      // we still support no return (`this.ticks` internally set by calling this method).\n\n      ticks = me.buildTicks() || []; // Allow modification of ticks in callback.\n\n      ticks = me.afterBuildTicks(ticks) || ticks;\n      me.beforeTickToLabelConversion(); // New implementations should return the formatted tick labels but for BACKWARD\n      // COMPAT, we still support no return (`this.ticks` internally changed by calling\n      // this method and supposed to contain only string values).\n\n      labels = me.convertTicksToLabels(ticks) || me.ticks;\n      me.afterTickToLabelConversion();\n      me.ticks = labels; // BACKWARD COMPATIBILITY\n      // IMPORTANT: from this point, we consider that `this.ticks` will NEVER change!\n      // BACKWARD COMPAT: synchronize `_ticks` with labels (so potentially `this.ticks`)\n\n      for (i = 0, ilen = labels.length; i < ilen; ++i) {\n        label = labels[i];\n        tick = ticks[i];\n\n        if (!tick) {\n          ticks.push(tick = {\n            label: label,\n            major: false\n          });\n        } else {\n          tick.label = label;\n        }\n      }\n\n      me._ticks = ticks; // Tick Rotation\n\n      me.beforeCalculateTickRotation();\n      me.calculateTickRotation();\n      me.afterCalculateTickRotation(); // Fit\n\n      me.beforeFit();\n      me.fit();\n      me.afterFit(); //\n\n      me.afterUpdate();\n      return me.minSize;\n    },\n    afterUpdate: function afterUpdate() {\n      helpers$1.callback(this.options.afterUpdate, [this]);\n    },\n    //\n    beforeSetDimensions: function beforeSetDimensions() {\n      helpers$1.callback(this.options.beforeSetDimensions, [this]);\n    },\n    setDimensions: function setDimensions() {\n      var me = this; // Set the unconstrained dimension before label rotation\n\n      if (me.isHorizontal()) {\n        // Reset position before calculating rotation\n        me.width = me.maxWidth;\n        me.left = 0;\n        me.right = me.width;\n      } else {\n        me.height = me.maxHeight; // Reset position before calculating rotation\n\n        me.top = 0;\n        me.bottom = me.height;\n      } // Reset padding\n\n\n      me.paddingLeft = 0;\n      me.paddingTop = 0;\n      me.paddingRight = 0;\n      me.paddingBottom = 0;\n    },\n    afterSetDimensions: function afterSetDimensions() {\n      helpers$1.callback(this.options.afterSetDimensions, [this]);\n    },\n    // Data limits\n    beforeDataLimits: function beforeDataLimits() {\n      helpers$1.callback(this.options.beforeDataLimits, [this]);\n    },\n    determineDataLimits: helpers$1.noop,\n    afterDataLimits: function afterDataLimits() {\n      helpers$1.callback(this.options.afterDataLimits, [this]);\n    },\n    //\n    beforeBuildTicks: function beforeBuildTicks() {\n      helpers$1.callback(this.options.beforeBuildTicks, [this]);\n    },\n    buildTicks: helpers$1.noop,\n    afterBuildTicks: function afterBuildTicks(ticks) {\n      var me = this; // ticks is empty for old axis implementations here\n\n      if (helpers$1.isArray(ticks) && ticks.length) {\n        return helpers$1.callback(me.options.afterBuildTicks, [me, ticks]);\n      } // Support old implementations (that modified `this.ticks` directly in buildTicks)\n\n\n      me.ticks = helpers$1.callback(me.options.afterBuildTicks, [me, me.ticks]) || me.ticks;\n      return ticks;\n    },\n    beforeTickToLabelConversion: function beforeTickToLabelConversion() {\n      helpers$1.callback(this.options.beforeTickToLabelConversion, [this]);\n    },\n    convertTicksToLabels: function convertTicksToLabels() {\n      var me = this; // Convert ticks to strings\n\n      var tickOpts = me.options.ticks;\n      me.ticks = me.ticks.map(tickOpts.userCallback || tickOpts.callback, this);\n    },\n    afterTickToLabelConversion: function afterTickToLabelConversion() {\n      helpers$1.callback(this.options.afterTickToLabelConversion, [this]);\n    },\n    //\n    beforeCalculateTickRotation: function beforeCalculateTickRotation() {\n      helpers$1.callback(this.options.beforeCalculateTickRotation, [this]);\n    },\n    calculateTickRotation: function calculateTickRotation() {\n      var me = this;\n      var context = me.ctx;\n      var tickOpts = me.options.ticks;\n      var labels = labelsFromTicks(me._ticks); // Get the width of each grid by calculating the difference\n      // between x offsets between 0 and 1.\n\n      var tickFont = helpers$1.options._parseFont(tickOpts);\n\n      context.font = tickFont.string;\n      var labelRotation = tickOpts.minRotation || 0;\n\n      if (labels.length && me.options.display && me.isHorizontal()) {\n        var originalLabelWidth = helpers$1.longestText(context, tickFont.string, labels, me.longestTextCache);\n        var labelWidth = originalLabelWidth;\n        var cosRotation, sinRotation; // Allow 3 pixels x2 padding either side for label readability\n\n        var tickWidth = me.getPixelForTick(1) - me.getPixelForTick(0) - 6; // Max label rotation can be set or default to 90 - also act as a loop counter\n\n        while (labelWidth > tickWidth && labelRotation < tickOpts.maxRotation) {\n          var angleRadians = helpers$1.toRadians(labelRotation);\n          cosRotation = Math.cos(angleRadians);\n          sinRotation = Math.sin(angleRadians);\n\n          if (sinRotation * originalLabelWidth > me.maxHeight) {\n            // go back one step\n            labelRotation--;\n            break;\n          }\n\n          labelRotation++;\n          labelWidth = cosRotation * originalLabelWidth;\n        }\n      }\n\n      me.labelRotation = labelRotation;\n    },\n    afterCalculateTickRotation: function afterCalculateTickRotation() {\n      helpers$1.callback(this.options.afterCalculateTickRotation, [this]);\n    },\n    //\n    beforeFit: function beforeFit() {\n      helpers$1.callback(this.options.beforeFit, [this]);\n    },\n    fit: function fit() {\n      var me = this; // Reset\n\n      var minSize = me.minSize = {\n        width: 0,\n        height: 0\n      };\n      var labels = labelsFromTicks(me._ticks);\n      var opts = me.options;\n      var tickOpts = opts.ticks;\n      var scaleLabelOpts = opts.scaleLabel;\n      var gridLineOpts = opts.gridLines;\n\n      var display = me._isVisible();\n\n      var position = opts.position;\n      var isHorizontal = me.isHorizontal();\n      var parseFont = helpers$1.options._parseFont;\n      var tickFont = parseFont(tickOpts);\n      var tickMarkLength = opts.gridLines.tickMarkLength; // Width\n\n      if (isHorizontal) {\n        // subtract the margins to line up with the chartArea if we are a full width scale\n        minSize.width = me.isFullWidth() ? me.maxWidth - me.margins.left - me.margins.right : me.maxWidth;\n      } else {\n        minSize.width = display && gridLineOpts.drawTicks ? tickMarkLength : 0;\n      } // height\n\n\n      if (isHorizontal) {\n        minSize.height = display && gridLineOpts.drawTicks ? tickMarkLength : 0;\n      } else {\n        minSize.height = me.maxHeight; // fill all the height\n      } // Are we showing a title for the scale?\n\n\n      if (scaleLabelOpts.display && display) {\n        var scaleLabelFont = parseFont(scaleLabelOpts);\n        var scaleLabelPadding = helpers$1.options.toPadding(scaleLabelOpts.padding);\n        var deltaHeight = scaleLabelFont.lineHeight + scaleLabelPadding.height;\n\n        if (isHorizontal) {\n          minSize.height += deltaHeight;\n        } else {\n          minSize.width += deltaHeight;\n        }\n      } // Don't bother fitting the ticks if we are not showing the labels\n\n\n      if (tickOpts.display && display) {\n        var largestTextWidth = helpers$1.longestText(me.ctx, tickFont.string, labels, me.longestTextCache);\n        var tallestLabelHeightInLines = helpers$1.numberOfLabelLines(labels);\n        var lineSpace = tickFont.size * 0.5;\n        var tickPadding = me.options.ticks.padding; // Store max number of lines and widest label for _autoSkip\n\n        me._maxLabelLines = tallestLabelHeightInLines;\n        me.longestLabelWidth = largestTextWidth;\n\n        if (isHorizontal) {\n          var angleRadians = helpers$1.toRadians(me.labelRotation);\n          var cosRotation = Math.cos(angleRadians);\n          var sinRotation = Math.sin(angleRadians); // TODO - improve this calculation\n\n          var labelHeight = sinRotation * largestTextWidth + tickFont.lineHeight * tallestLabelHeightInLines + lineSpace; // padding\n\n          minSize.height = Math.min(me.maxHeight, minSize.height + labelHeight + tickPadding);\n          me.ctx.font = tickFont.string;\n          var firstLabelWidth = computeTextSize(me.ctx, labels[0], tickFont.string);\n          var lastLabelWidth = computeTextSize(me.ctx, labels[labels.length - 1], tickFont.string);\n          var offsetLeft = me.getPixelForTick(0) - me.left;\n          var offsetRight = me.right - me.getPixelForTick(labels.length - 1);\n          var paddingLeft, paddingRight; // Ensure that our ticks are always inside the canvas. When rotated, ticks are right aligned\n          // which means that the right padding is dominated by the font height\n\n          if (me.labelRotation !== 0) {\n            paddingLeft = position === 'bottom' ? cosRotation * firstLabelWidth : cosRotation * lineSpace;\n            paddingRight = position === 'bottom' ? cosRotation * lineSpace : cosRotation * lastLabelWidth;\n          } else {\n            paddingLeft = firstLabelWidth / 2;\n            paddingRight = lastLabelWidth / 2;\n          }\n\n          me.paddingLeft = Math.max(paddingLeft - offsetLeft, 0) + 3; // add 3 px to move away from canvas edges\n\n          me.paddingRight = Math.max(paddingRight - offsetRight, 0) + 3;\n        } else {\n          // A vertical axis is more constrained by the width. Labels are the\n          // dominant factor here, so get that length first and account for padding\n          if (tickOpts.mirror) {\n            largestTextWidth = 0;\n          } else {\n            // use lineSpace for consistency with horizontal axis\n            // tickPadding is not implemented for horizontal\n            largestTextWidth += tickPadding + lineSpace;\n          }\n\n          minSize.width = Math.min(me.maxWidth, minSize.width + largestTextWidth);\n          me.paddingTop = tickFont.size / 2;\n          me.paddingBottom = tickFont.size / 2;\n        }\n      }\n\n      me.handleMargins();\n      me.width = minSize.width;\n      me.height = minSize.height;\n    },\n\n    /**\n     * Handle margins and padding interactions\n     * @private\n     */\n    handleMargins: function handleMargins() {\n      var me = this;\n\n      if (me.margins) {\n        me.paddingLeft = Math.max(me.paddingLeft - me.margins.left, 0);\n        me.paddingTop = Math.max(me.paddingTop - me.margins.top, 0);\n        me.paddingRight = Math.max(me.paddingRight - me.margins.right, 0);\n        me.paddingBottom = Math.max(me.paddingBottom - me.margins.bottom, 0);\n      }\n    },\n    afterFit: function afterFit() {\n      helpers$1.callback(this.options.afterFit, [this]);\n    },\n    // Shared Methods\n    isHorizontal: function isHorizontal() {\n      return this.options.position === 'top' || this.options.position === 'bottom';\n    },\n    isFullWidth: function isFullWidth() {\n      return this.options.fullWidth;\n    },\n    // Get the correct value. NaN bad inputs, If the value type is object get the x or y based on whether we are horizontal or not\n    getRightValue: function getRightValue(rawValue) {\n      // Null and undefined values first\n      if (helpers$1.isNullOrUndef(rawValue)) {\n        return NaN;\n      } // isNaN(object) returns true, so make sure NaN is checking for a number; Discard Infinite values\n\n\n      if ((typeof rawValue === 'number' || rawValue instanceof Number) && !isFinite(rawValue)) {\n        return NaN;\n      } // If it is in fact an object, dive in one more level\n\n\n      if (rawValue) {\n        if (this.isHorizontal()) {\n          if (rawValue.x !== undefined) {\n            return this.getRightValue(rawValue.x);\n          }\n        } else if (rawValue.y !== undefined) {\n          return this.getRightValue(rawValue.y);\n        }\n      } // Value is good, return it\n\n\n      return rawValue;\n    },\n\n    /**\n     * Used to get the value to display in the tooltip for the data at the given index\n     * @param index\n     * @param datasetIndex\n     */\n    getLabelForIndex: helpers$1.noop,\n\n    /**\n     * Returns the location of the given data point. Value can either be an index or a numerical value\n     * The coordinate (0, 0) is at the upper-left corner of the canvas\n     * @param value\n     * @param index\n     * @param datasetIndex\n     */\n    getPixelForValue: helpers$1.noop,\n\n    /**\n     * Used to get the data value from a given pixel. This is the inverse of getPixelForValue\n     * The coordinate (0, 0) is at the upper-left corner of the canvas\n     * @param pixel\n     */\n    getValueForPixel: helpers$1.noop,\n\n    /**\n     * Returns the location of the tick at the given index\n     * The coordinate (0, 0) is at the upper-left corner of the canvas\n     */\n    getPixelForTick: function getPixelForTick(index) {\n      var me = this;\n      var offset = me.options.offset;\n\n      if (me.isHorizontal()) {\n        var innerWidth = me.width - (me.paddingLeft + me.paddingRight);\n        var tickWidth = innerWidth / Math.max(me._ticks.length - (offset ? 0 : 1), 1);\n        var pixel = tickWidth * index + me.paddingLeft;\n\n        if (offset) {\n          pixel += tickWidth / 2;\n        }\n\n        var finalVal = me.left + pixel;\n        finalVal += me.isFullWidth() ? me.margins.left : 0;\n        return finalVal;\n      }\n\n      var innerHeight = me.height - (me.paddingTop + me.paddingBottom);\n      return me.top + index * (innerHeight / (me._ticks.length - 1));\n    },\n\n    /**\n     * Utility for getting the pixel location of a percentage of scale\n     * The coordinate (0, 0) is at the upper-left corner of the canvas\n     */\n    getPixelForDecimal: function getPixelForDecimal(decimal) {\n      var me = this;\n\n      if (me.isHorizontal()) {\n        var innerWidth = me.width - (me.paddingLeft + me.paddingRight);\n        var valueOffset = innerWidth * decimal + me.paddingLeft;\n        var finalVal = me.left + valueOffset;\n        finalVal += me.isFullWidth() ? me.margins.left : 0;\n        return finalVal;\n      }\n\n      return me.top + decimal * me.height;\n    },\n\n    /**\n     * Returns the pixel for the minimum chart value\n     * The coordinate (0, 0) is at the upper-left corner of the canvas\n     */\n    getBasePixel: function getBasePixel() {\n      return this.getPixelForValue(this.getBaseValue());\n    },\n    getBaseValue: function getBaseValue() {\n      var me = this;\n      var min = me.min;\n      var max = me.max;\n      return me.beginAtZero ? 0 : min < 0 && max < 0 ? max : min > 0 && max > 0 ? min : 0;\n    },\n\n    /**\n     * Returns a subset of ticks to be plotted to avoid overlapping labels.\n     * @private\n     */\n    _autoSkip: function _autoSkip(ticks) {\n      var me = this;\n      var isHorizontal = me.isHorizontal();\n      var optionTicks = me.options.ticks.minor;\n      var tickCount = ticks.length;\n      var skipRatio = false;\n      var maxTicks = optionTicks.maxTicksLimit; // Total space needed to display all ticks. First and last ticks are\n      // drawn as their center at end of axis, so tickCount-1\n\n      var ticksLength = me._tickSize() * (tickCount - 1); // Axis length\n\n      var axisLength = isHorizontal ? me.width - (me.paddingLeft + me.paddingRight) : me.height - (me.paddingTop + me.PaddingBottom);\n      var result = [];\n      var i, tick;\n\n      if (ticksLength > axisLength) {\n        skipRatio = 1 + Math.floor(ticksLength / axisLength);\n      } // if they defined a max number of optionTicks,\n      // increase skipRatio until that number is met\n\n\n      if (tickCount > maxTicks) {\n        skipRatio = Math.max(skipRatio, 1 + Math.floor(tickCount / maxTicks));\n      }\n\n      for (i = 0; i < tickCount; i++) {\n        tick = ticks[i];\n\n        if (skipRatio > 1 && i % skipRatio > 0) {\n          // leave tick in place but make sure it's not displayed (#4635)\n          delete tick.label;\n        }\n\n        result.push(tick);\n      }\n\n      return result;\n    },\n\n    /**\n     * @private\n     */\n    _tickSize: function _tickSize() {\n      var me = this;\n      var isHorizontal = me.isHorizontal();\n      var optionTicks = me.options.ticks.minor; // Calculate space needed by label in axis direction.\n\n      var rot = helpers$1.toRadians(me.labelRotation);\n      var cos = Math.abs(Math.cos(rot));\n      var sin = Math.abs(Math.sin(rot));\n      var padding = optionTicks.autoSkipPadding || 0;\n      var w = me.longestLabelWidth + padding || 0;\n\n      var tickFont = helpers$1.options._parseFont(optionTicks);\n\n      var h = me._maxLabelLines * tickFont.lineHeight + padding || 0; // Calculate space needed for 1 tick in axis direction.\n\n      return isHorizontal ? h * cos > w * sin ? w / cos : h / sin : h * sin < w * cos ? h / cos : w / sin;\n    },\n\n    /**\n     * @private\n     */\n    _isVisible: function _isVisible() {\n      var me = this;\n      var chart = me.chart;\n      var display = me.options.display;\n      var i, ilen, meta;\n\n      if (display !== 'auto') {\n        return !!display;\n      } // When 'auto', the scale is visible if at least one associated dataset is visible.\n\n\n      for (i = 0, ilen = chart.data.datasets.length; i < ilen; ++i) {\n        if (chart.isDatasetVisible(i)) {\n          meta = chart.getDatasetMeta(i);\n\n          if (meta.xAxisID === me.id || meta.yAxisID === me.id) {\n            return true;\n          }\n        }\n      }\n\n      return false;\n    },\n\n    /**\n     * Actually draw the scale on the canvas\n     * @param {object} chartArea - the area of the chart to draw full grid lines on\n     */\n    draw: function draw(chartArea) {\n      var me = this;\n      var options = me.options;\n\n      if (!me._isVisible()) {\n        return;\n      }\n\n      var chart = me.chart;\n      var context = me.ctx;\n      var globalDefaults = core_defaults.global;\n      var defaultFontColor = globalDefaults.defaultFontColor;\n      var optionTicks = options.ticks.minor;\n      var optionMajorTicks = options.ticks.major || optionTicks;\n      var gridLines = options.gridLines;\n      var scaleLabel = options.scaleLabel;\n      var position = options.position;\n      var isRotated = me.labelRotation !== 0;\n      var isMirrored = optionTicks.mirror;\n      var isHorizontal = me.isHorizontal();\n      var parseFont = helpers$1.options._parseFont;\n      var ticks = optionTicks.display && optionTicks.autoSkip ? me._autoSkip(me.getTicks()) : me.getTicks();\n      var tickFontColor = valueOrDefault$9(optionTicks.fontColor, defaultFontColor);\n      var tickFont = parseFont(optionTicks);\n      var lineHeight = tickFont.lineHeight;\n      var majorTickFontColor = valueOrDefault$9(optionMajorTicks.fontColor, defaultFontColor);\n      var majorTickFont = parseFont(optionMajorTicks);\n      var tickPadding = optionTicks.padding;\n      var labelOffset = optionTicks.labelOffset;\n      var tl = gridLines.drawTicks ? gridLines.tickMarkLength : 0;\n      var scaleLabelFontColor = valueOrDefault$9(scaleLabel.fontColor, defaultFontColor);\n      var scaleLabelFont = parseFont(scaleLabel);\n      var scaleLabelPadding = helpers$1.options.toPadding(scaleLabel.padding);\n      var labelRotationRadians = helpers$1.toRadians(me.labelRotation);\n      var itemsToDraw = [];\n      var axisWidth = gridLines.drawBorder ? valueAtIndexOrDefault(gridLines.lineWidth, 0, 0) : 0;\n      var alignPixel = helpers$1._alignPixel;\n      var borderValue, tickStart, tickEnd;\n\n      if (position === 'top') {\n        borderValue = alignPixel(chart, me.bottom, axisWidth);\n        tickStart = me.bottom - tl;\n        tickEnd = borderValue - axisWidth / 2;\n      } else if (position === 'bottom') {\n        borderValue = alignPixel(chart, me.top, axisWidth);\n        tickStart = borderValue + axisWidth / 2;\n        tickEnd = me.top + tl;\n      } else if (position === 'left') {\n        borderValue = alignPixel(chart, me.right, axisWidth);\n        tickStart = me.right - tl;\n        tickEnd = borderValue - axisWidth / 2;\n      } else {\n        borderValue = alignPixel(chart, me.left, axisWidth);\n        tickStart = borderValue + axisWidth / 2;\n        tickEnd = me.left + tl;\n      }\n\n      var epsilon = 0.0000001; // 0.0000001 is margin in pixels for Accumulated error.\n\n      helpers$1.each(ticks, function (tick, index) {\n        // autoskipper skipped this tick (#4635)\n        if (helpers$1.isNullOrUndef(tick.label)) {\n          return;\n        }\n\n        var label = tick.label;\n        var lineWidth, lineColor, borderDash, borderDashOffset;\n\n        if (index === me.zeroLineIndex && options.offset === gridLines.offsetGridLines) {\n          // Draw the first index specially\n          lineWidth = gridLines.zeroLineWidth;\n          lineColor = gridLines.zeroLineColor;\n          borderDash = gridLines.zeroLineBorderDash || [];\n          borderDashOffset = gridLines.zeroLineBorderDashOffset || 0.0;\n        } else {\n          lineWidth = valueAtIndexOrDefault(gridLines.lineWidth, index);\n          lineColor = valueAtIndexOrDefault(gridLines.color, index);\n          borderDash = gridLines.borderDash || [];\n          borderDashOffset = gridLines.borderDashOffset || 0.0;\n        } // Common properties\n\n\n        var tx1, ty1, tx2, ty2, x1, y1, x2, y2, labelX, labelY, textOffset, textAlign;\n        var labelCount = helpers$1.isArray(label) ? label.length : 1;\n        var lineValue = getPixelForGridLine(me, index, gridLines.offsetGridLines);\n\n        if (isHorizontal) {\n          var labelYOffset = tl + tickPadding;\n\n          if (lineValue < me.left - epsilon) {\n            lineColor = 'rgba(0,0,0,0)';\n          }\n\n          tx1 = tx2 = x1 = x2 = alignPixel(chart, lineValue, lineWidth);\n          ty1 = tickStart;\n          ty2 = tickEnd;\n          labelX = me.getPixelForTick(index) + labelOffset; // x values for optionTicks (need to consider offsetLabel option)\n\n          if (position === 'top') {\n            y1 = alignPixel(chart, chartArea.top, axisWidth) + axisWidth / 2;\n            y2 = chartArea.bottom;\n            textOffset = ((!isRotated ? 0.5 : 1) - labelCount) * lineHeight;\n            textAlign = !isRotated ? 'center' : 'left';\n            labelY = me.bottom - labelYOffset;\n          } else {\n            y1 = chartArea.top;\n            y2 = alignPixel(chart, chartArea.bottom, axisWidth) - axisWidth / 2;\n            textOffset = (!isRotated ? 0.5 : 0) * lineHeight;\n            textAlign = !isRotated ? 'center' : 'right';\n            labelY = me.top + labelYOffset;\n          }\n        } else {\n          var labelXOffset = (isMirrored ? 0 : tl) + tickPadding;\n\n          if (lineValue < me.top - epsilon) {\n            lineColor = 'rgba(0,0,0,0)';\n          }\n\n          tx1 = tickStart;\n          tx2 = tickEnd;\n          ty1 = ty2 = y1 = y2 = alignPixel(chart, lineValue, lineWidth);\n          labelY = me.getPixelForTick(index) + labelOffset;\n          textOffset = (1 - labelCount) * lineHeight / 2;\n\n          if (position === 'left') {\n            x1 = alignPixel(chart, chartArea.left, axisWidth) + axisWidth / 2;\n            x2 = chartArea.right;\n            textAlign = isMirrored ? 'left' : 'right';\n            labelX = me.right - labelXOffset;\n          } else {\n            x1 = chartArea.left;\n            x2 = alignPixel(chart, chartArea.right, axisWidth) - axisWidth / 2;\n            textAlign = isMirrored ? 'right' : 'left';\n            labelX = me.left + labelXOffset;\n          }\n        }\n\n        itemsToDraw.push({\n          tx1: tx1,\n          ty1: ty1,\n          tx2: tx2,\n          ty2: ty2,\n          x1: x1,\n          y1: y1,\n          x2: x2,\n          y2: y2,\n          labelX: labelX,\n          labelY: labelY,\n          glWidth: lineWidth,\n          glColor: lineColor,\n          glBorderDash: borderDash,\n          glBorderDashOffset: borderDashOffset,\n          rotation: -1 * labelRotationRadians,\n          label: label,\n          major: tick.major,\n          textOffset: textOffset,\n          textAlign: textAlign\n        });\n      }); // Draw all of the tick labels, tick marks, and grid lines at the correct places\n\n      helpers$1.each(itemsToDraw, function (itemToDraw) {\n        var glWidth = itemToDraw.glWidth;\n        var glColor = itemToDraw.glColor;\n\n        if (gridLines.display && glWidth && glColor) {\n          context.save();\n          context.lineWidth = glWidth;\n          context.strokeStyle = glColor;\n\n          if (context.setLineDash) {\n            context.setLineDash(itemToDraw.glBorderDash);\n            context.lineDashOffset = itemToDraw.glBorderDashOffset;\n          }\n\n          context.beginPath();\n\n          if (gridLines.drawTicks) {\n            context.moveTo(itemToDraw.tx1, itemToDraw.ty1);\n            context.lineTo(itemToDraw.tx2, itemToDraw.ty2);\n          }\n\n          if (gridLines.drawOnChartArea) {\n            context.moveTo(itemToDraw.x1, itemToDraw.y1);\n            context.lineTo(itemToDraw.x2, itemToDraw.y2);\n          }\n\n          context.stroke();\n          context.restore();\n        }\n\n        if (optionTicks.display) {\n          // Make sure we draw text in the correct color and font\n          context.save();\n          context.translate(itemToDraw.labelX, itemToDraw.labelY);\n          context.rotate(itemToDraw.rotation);\n          context.font = itemToDraw.major ? majorTickFont.string : tickFont.string;\n          context.fillStyle = itemToDraw.major ? majorTickFontColor : tickFontColor;\n          context.textBaseline = 'middle';\n          context.textAlign = itemToDraw.textAlign;\n          var label = itemToDraw.label;\n          var y = itemToDraw.textOffset;\n\n          if (helpers$1.isArray(label)) {\n            for (var i = 0; i < label.length; ++i) {\n              // We just make sure the multiline element is a string here..\n              context.fillText('' + label[i], 0, y);\n              y += lineHeight;\n            }\n          } else {\n            context.fillText(label, 0, y);\n          }\n\n          context.restore();\n        }\n      });\n\n      if (scaleLabel.display) {\n        // Draw the scale label\n        var scaleLabelX;\n        var scaleLabelY;\n        var rotation = 0;\n        var halfLineHeight = scaleLabelFont.lineHeight / 2;\n\n        if (isHorizontal) {\n          scaleLabelX = me.left + (me.right - me.left) / 2; // midpoint of the width\n\n          scaleLabelY = position === 'bottom' ? me.bottom - halfLineHeight - scaleLabelPadding.bottom : me.top + halfLineHeight + scaleLabelPadding.top;\n        } else {\n          var isLeft = position === 'left';\n          scaleLabelX = isLeft ? me.left + halfLineHeight + scaleLabelPadding.top : me.right - halfLineHeight - scaleLabelPadding.top;\n          scaleLabelY = me.top + (me.bottom - me.top) / 2;\n          rotation = isLeft ? -0.5 * Math.PI : 0.5 * Math.PI;\n        }\n\n        context.save();\n        context.translate(scaleLabelX, scaleLabelY);\n        context.rotate(rotation);\n        context.textAlign = 'center';\n        context.textBaseline = 'middle';\n        context.fillStyle = scaleLabelFontColor; // render in correct colour\n\n        context.font = scaleLabelFont.string;\n        context.fillText(scaleLabel.labelString, 0, 0);\n        context.restore();\n      }\n\n      if (axisWidth) {\n        // Draw the line at the edge of the axis\n        var firstLineWidth = axisWidth;\n        var lastLineWidth = valueAtIndexOrDefault(gridLines.lineWidth, ticks.length - 1, 0);\n        var x1, x2, y1, y2;\n\n        if (isHorizontal) {\n          x1 = alignPixel(chart, me.left, firstLineWidth) - firstLineWidth / 2;\n          x2 = alignPixel(chart, me.right, lastLineWidth) + lastLineWidth / 2;\n          y1 = y2 = borderValue;\n        } else {\n          y1 = alignPixel(chart, me.top, firstLineWidth) - firstLineWidth / 2;\n          y2 = alignPixel(chart, me.bottom, lastLineWidth) + lastLineWidth / 2;\n          x1 = x2 = borderValue;\n        }\n\n        context.lineWidth = axisWidth;\n        context.strokeStyle = valueAtIndexOrDefault(gridLines.color, 0);\n        context.beginPath();\n        context.moveTo(x1, y1);\n        context.lineTo(x2, y2);\n        context.stroke();\n      }\n    }\n  });\n  var defaultConfig = {\n    position: 'bottom'\n  };\n  var scale_category = core_scale.extend({\n    /**\n    * Internal function to get the correct labels. If data.xLabels or data.yLabels are defined, use those\n    * else fall back to data.labels\n    * @private\n    */\n    getLabels: function getLabels() {\n      var data = this.chart.data;\n      return this.options.labels || (this.isHorizontal() ? data.xLabels : data.yLabels) || data.labels;\n    },\n    determineDataLimits: function determineDataLimits() {\n      var me = this;\n      var labels = me.getLabels();\n      me.minIndex = 0;\n      me.maxIndex = labels.length - 1;\n      var findIndex;\n\n      if (me.options.ticks.min !== undefined) {\n        // user specified min value\n        findIndex = labels.indexOf(me.options.ticks.min);\n        me.minIndex = findIndex !== -1 ? findIndex : me.minIndex;\n      }\n\n      if (me.options.ticks.max !== undefined) {\n        // user specified max value\n        findIndex = labels.indexOf(me.options.ticks.max);\n        me.maxIndex = findIndex !== -1 ? findIndex : me.maxIndex;\n      }\n\n      me.min = labels[me.minIndex];\n      me.max = labels[me.maxIndex];\n    },\n    buildTicks: function buildTicks() {\n      var me = this;\n      var labels = me.getLabels(); // If we are viewing some subset of labels, slice the original array\n\n      me.ticks = me.minIndex === 0 && me.maxIndex === labels.length - 1 ? labels : labels.slice(me.minIndex, me.maxIndex + 1);\n    },\n    getLabelForIndex: function getLabelForIndex(index, datasetIndex) {\n      var me = this;\n      var chart = me.chart;\n\n      if (chart.getDatasetMeta(datasetIndex).controller._getValueScaleId() === me.id) {\n        return me.getRightValue(chart.data.datasets[datasetIndex].data[index]);\n      }\n\n      return me.ticks[index - me.minIndex];\n    },\n    // Used to get data value locations.  Value can either be an index or a numerical value\n    getPixelForValue: function getPixelForValue(value, index) {\n      var me = this;\n      var offset = me.options.offset; // 1 is added because we need the length but we have the indexes\n\n      var offsetAmt = Math.max(me.maxIndex + 1 - me.minIndex - (offset ? 0 : 1), 1); // If value is a data object, then index is the index in the data array,\n      // not the index of the scale. We need to change that.\n\n      var valueCategory;\n\n      if (value !== undefined && value !== null) {\n        valueCategory = me.isHorizontal() ? value.x : value.y;\n      }\n\n      if (valueCategory !== undefined || value !== undefined && isNaN(index)) {\n        var labels = me.getLabels();\n        value = valueCategory || value;\n        var idx = labels.indexOf(value);\n        index = idx !== -1 ? idx : index;\n      }\n\n      if (me.isHorizontal()) {\n        var valueWidth = me.width / offsetAmt;\n        var widthOffset = valueWidth * (index - me.minIndex);\n\n        if (offset) {\n          widthOffset += valueWidth / 2;\n        }\n\n        return me.left + widthOffset;\n      }\n\n      var valueHeight = me.height / offsetAmt;\n      var heightOffset = valueHeight * (index - me.minIndex);\n\n      if (offset) {\n        heightOffset += valueHeight / 2;\n      }\n\n      return me.top + heightOffset;\n    },\n    getPixelForTick: function getPixelForTick(index) {\n      return this.getPixelForValue(this.ticks[index], index + this.minIndex, null);\n    },\n    getValueForPixel: function getValueForPixel(pixel) {\n      var me = this;\n      var offset = me.options.offset;\n      var value;\n      var offsetAmt = Math.max(me._ticks.length - (offset ? 0 : 1), 1);\n      var horz = me.isHorizontal();\n      var valueDimension = (horz ? me.width : me.height) / offsetAmt;\n      pixel -= horz ? me.left : me.top;\n\n      if (offset) {\n        pixel -= valueDimension / 2;\n      }\n\n      if (pixel <= 0) {\n        value = 0;\n      } else {\n        value = Math.round(pixel / valueDimension);\n      }\n\n      return value + me.minIndex;\n    },\n    getBasePixel: function getBasePixel() {\n      return this.bottom;\n    }\n  }); // INTERNAL: static default options, registered in src/index.js\n\n  var _defaults = defaultConfig;\n  scale_category._defaults = _defaults;\n  var noop = helpers$1.noop;\n  var isNullOrUndef = helpers$1.isNullOrUndef;\n  /**\n   * Generate a set of linear ticks\n   * @param generationOptions the options used to generate the ticks\n   * @param dataRange the range of the data\n   * @returns {number[]} array of tick values\n   */\n\n  function generateTicks(generationOptions, dataRange) {\n    var ticks = []; // To get a \"nice\" value for the tick spacing, we will use the appropriately named\n    // \"nice number\" algorithm. See https://stackoverflow.com/questions/8506881/nice-label-algorithm-for-charts-with-minimum-ticks\n    // for details.\n\n    var MIN_SPACING = 1e-14;\n    var stepSize = generationOptions.stepSize;\n    var unit = stepSize || 1;\n    var maxNumSpaces = generationOptions.maxTicks - 1;\n    var min = generationOptions.min;\n    var max = generationOptions.max;\n    var precision = generationOptions.precision;\n    var rmin = dataRange.min;\n    var rmax = dataRange.max;\n    var spacing = helpers$1.niceNum((rmax - rmin) / maxNumSpaces / unit) * unit;\n    var factor, niceMin, niceMax, numSpaces; // Beyond MIN_SPACING floating point numbers being to lose precision\n    // such that we can't do the math necessary to generate ticks\n\n    if (spacing < MIN_SPACING && isNullOrUndef(min) && isNullOrUndef(max)) {\n      return [rmin, rmax];\n    }\n\n    numSpaces = Math.ceil(rmax / spacing) - Math.floor(rmin / spacing);\n\n    if (numSpaces > maxNumSpaces) {\n      // If the calculated num of spaces exceeds maxNumSpaces, recalculate it\n      spacing = helpers$1.niceNum(numSpaces * spacing / maxNumSpaces / unit) * unit;\n    }\n\n    if (stepSize || isNullOrUndef(precision)) {\n      // If a precision is not specified, calculate factor based on spacing\n      factor = Math.pow(10, helpers$1._decimalPlaces(spacing));\n    } else {\n      // If the user specified a precision, round to that number of decimal places\n      factor = Math.pow(10, precision);\n      spacing = Math.ceil(spacing * factor) / factor;\n    }\n\n    niceMin = Math.floor(rmin / spacing) * spacing;\n    niceMax = Math.ceil(rmax / spacing) * spacing; // If min, max and stepSize is set and they make an evenly spaced scale use it.\n\n    if (stepSize) {\n      // If very close to our whole number, use it.\n      if (!isNullOrUndef(min) && helpers$1.almostWhole(min / spacing, spacing / 1000)) {\n        niceMin = min;\n      }\n\n      if (!isNullOrUndef(max) && helpers$1.almostWhole(max / spacing, spacing / 1000)) {\n        niceMax = max;\n      }\n    }\n\n    numSpaces = (niceMax - niceMin) / spacing; // If very close to our rounded value, use it.\n\n    if (helpers$1.almostEquals(numSpaces, Math.round(numSpaces), spacing / 1000)) {\n      numSpaces = Math.round(numSpaces);\n    } else {\n      numSpaces = Math.ceil(numSpaces);\n    }\n\n    niceMin = Math.round(niceMin * factor) / factor;\n    niceMax = Math.round(niceMax * factor) / factor;\n    ticks.push(isNullOrUndef(min) ? niceMin : min);\n\n    for (var j = 1; j < numSpaces; ++j) {\n      ticks.push(Math.round((niceMin + j * spacing) * factor) / factor);\n    }\n\n    ticks.push(isNullOrUndef(max) ? niceMax : max);\n    return ticks;\n  }\n\n  var scale_linearbase = core_scale.extend({\n    getRightValue: function getRightValue(value) {\n      if (typeof value === 'string') {\n        return +value;\n      }\n\n      return core_scale.prototype.getRightValue.call(this, value);\n    },\n    handleTickRangeOptions: function handleTickRangeOptions() {\n      var me = this;\n      var opts = me.options;\n      var tickOpts = opts.ticks; // If we are forcing it to begin at 0, but 0 will already be rendered on the chart,\n      // do nothing since that would make the chart weird. If the user really wants a weird chart\n      // axis, they can manually override it\n\n      if (tickOpts.beginAtZero) {\n        var minSign = helpers$1.sign(me.min);\n        var maxSign = helpers$1.sign(me.max);\n\n        if (minSign < 0 && maxSign < 0) {\n          // move the top up to 0\n          me.max = 0;\n        } else if (minSign > 0 && maxSign > 0) {\n          // move the bottom down to 0\n          me.min = 0;\n        }\n      }\n\n      var setMin = tickOpts.min !== undefined || tickOpts.suggestedMin !== undefined;\n      var setMax = tickOpts.max !== undefined || tickOpts.suggestedMax !== undefined;\n\n      if (tickOpts.min !== undefined) {\n        me.min = tickOpts.min;\n      } else if (tickOpts.suggestedMin !== undefined) {\n        if (me.min === null) {\n          me.min = tickOpts.suggestedMin;\n        } else {\n          me.min = Math.min(me.min, tickOpts.suggestedMin);\n        }\n      }\n\n      if (tickOpts.max !== undefined) {\n        me.max = tickOpts.max;\n      } else if (tickOpts.suggestedMax !== undefined) {\n        if (me.max === null) {\n          me.max = tickOpts.suggestedMax;\n        } else {\n          me.max = Math.max(me.max, tickOpts.suggestedMax);\n        }\n      }\n\n      if (setMin !== setMax) {\n        // We set the min or the max but not both.\n        // So ensure that our range is good\n        // Inverted or 0 length range can happen when\n        // ticks.min is set, and no datasets are visible\n        if (me.min >= me.max) {\n          if (setMin) {\n            me.max = me.min + 1;\n          } else {\n            me.min = me.max - 1;\n          }\n        }\n      }\n\n      if (me.min === me.max) {\n        me.max++;\n\n        if (!tickOpts.beginAtZero) {\n          me.min--;\n        }\n      }\n    },\n    getTickLimit: function getTickLimit() {\n      var me = this;\n      var tickOpts = me.options.ticks;\n      var stepSize = tickOpts.stepSize;\n      var maxTicksLimit = tickOpts.maxTicksLimit;\n      var maxTicks;\n\n      if (stepSize) {\n        maxTicks = Math.ceil(me.max / stepSize) - Math.floor(me.min / stepSize) + 1;\n      } else {\n        maxTicks = me._computeTickLimit();\n        maxTicksLimit = maxTicksLimit || 11;\n      }\n\n      if (maxTicksLimit) {\n        maxTicks = Math.min(maxTicksLimit, maxTicks);\n      }\n\n      return maxTicks;\n    },\n    _computeTickLimit: function _computeTickLimit() {\n      return Number.POSITIVE_INFINITY;\n    },\n    handleDirectionalChanges: noop,\n    buildTicks: function buildTicks() {\n      var me = this;\n      var opts = me.options;\n      var tickOpts = opts.ticks; // Figure out what the max number of ticks we can support it is based on the size of\n      // the axis area. For now, we say that the minimum tick spacing in pixels must be 40\n      // We also limit the maximum number of ticks to 11 which gives a nice 10 squares on\n      // the graph. Make sure we always have at least 2 ticks\n\n      var maxTicks = me.getTickLimit();\n      maxTicks = Math.max(2, maxTicks);\n      var numericGeneratorOptions = {\n        maxTicks: maxTicks,\n        min: tickOpts.min,\n        max: tickOpts.max,\n        precision: tickOpts.precision,\n        stepSize: helpers$1.valueOrDefault(tickOpts.fixedStepSize, tickOpts.stepSize)\n      };\n      var ticks = me.ticks = generateTicks(numericGeneratorOptions, me);\n      me.handleDirectionalChanges(); // At this point, we need to update our max and min given the tick values since we have expanded the\n      // range of the scale\n\n      me.max = helpers$1.max(ticks);\n      me.min = helpers$1.min(ticks);\n\n      if (tickOpts.reverse) {\n        ticks.reverse();\n        me.start = me.max;\n        me.end = me.min;\n      } else {\n        me.start = me.min;\n        me.end = me.max;\n      }\n    },\n    convertTicksToLabels: function convertTicksToLabels() {\n      var me = this;\n      me.ticksAsNumbers = me.ticks.slice();\n      me.zeroLineIndex = me.ticks.indexOf(0);\n      core_scale.prototype.convertTicksToLabels.call(me);\n    }\n  });\n  var defaultConfig$1 = {\n    position: 'left',\n    ticks: {\n      callback: core_ticks.formatters.linear\n    }\n  };\n  var scale_linear = scale_linearbase.extend({\n    determineDataLimits: function determineDataLimits() {\n      var me = this;\n      var opts = me.options;\n      var chart = me.chart;\n      var data = chart.data;\n      var datasets = data.datasets;\n      var isHorizontal = me.isHorizontal();\n      var DEFAULT_MIN = 0;\n      var DEFAULT_MAX = 1;\n\n      function IDMatches(meta) {\n        return isHorizontal ? meta.xAxisID === me.id : meta.yAxisID === me.id;\n      } // First Calculate the range\n\n\n      me.min = null;\n      me.max = null;\n      var hasStacks = opts.stacked;\n\n      if (hasStacks === undefined) {\n        helpers$1.each(datasets, function (dataset, datasetIndex) {\n          if (hasStacks) {\n            return;\n          }\n\n          var meta = chart.getDatasetMeta(datasetIndex);\n\n          if (chart.isDatasetVisible(datasetIndex) && IDMatches(meta) && meta.stack !== undefined) {\n            hasStacks = true;\n          }\n        });\n      }\n\n      if (opts.stacked || hasStacks) {\n        var valuesPerStack = {};\n        helpers$1.each(datasets, function (dataset, datasetIndex) {\n          var meta = chart.getDatasetMeta(datasetIndex);\n          var key = [meta.type, // we have a separate stack for stack=undefined datasets when the opts.stacked is undefined\n          opts.stacked === undefined && meta.stack === undefined ? datasetIndex : '', meta.stack].join('.');\n\n          if (valuesPerStack[key] === undefined) {\n            valuesPerStack[key] = {\n              positiveValues: [],\n              negativeValues: []\n            };\n          } // Store these per type\n\n\n          var positiveValues = valuesPerStack[key].positiveValues;\n          var negativeValues = valuesPerStack[key].negativeValues;\n\n          if (chart.isDatasetVisible(datasetIndex) && IDMatches(meta)) {\n            helpers$1.each(dataset.data, function (rawValue, index) {\n              var value = +me.getRightValue(rawValue);\n\n              if (isNaN(value) || meta.data[index].hidden) {\n                return;\n              }\n\n              positiveValues[index] = positiveValues[index] || 0;\n              negativeValues[index] = negativeValues[index] || 0;\n\n              if (opts.relativePoints) {\n                positiveValues[index] = 100;\n              } else if (value < 0) {\n                negativeValues[index] += value;\n              } else {\n                positiveValues[index] += value;\n              }\n            });\n          }\n        });\n        helpers$1.each(valuesPerStack, function (valuesForType) {\n          var values = valuesForType.positiveValues.concat(valuesForType.negativeValues);\n          var minVal = helpers$1.min(values);\n          var maxVal = helpers$1.max(values);\n          me.min = me.min === null ? minVal : Math.min(me.min, minVal);\n          me.max = me.max === null ? maxVal : Math.max(me.max, maxVal);\n        });\n      } else {\n        helpers$1.each(datasets, function (dataset, datasetIndex) {\n          var meta = chart.getDatasetMeta(datasetIndex);\n\n          if (chart.isDatasetVisible(datasetIndex) && IDMatches(meta)) {\n            helpers$1.each(dataset.data, function (rawValue, index) {\n              var value = +me.getRightValue(rawValue);\n\n              if (isNaN(value) || meta.data[index].hidden) {\n                return;\n              }\n\n              if (me.min === null) {\n                me.min = value;\n              } else if (value < me.min) {\n                me.min = value;\n              }\n\n              if (me.max === null) {\n                me.max = value;\n              } else if (value > me.max) {\n                me.max = value;\n              }\n            });\n          }\n        });\n      }\n\n      me.min = isFinite(me.min) && !isNaN(me.min) ? me.min : DEFAULT_MIN;\n      me.max = isFinite(me.max) && !isNaN(me.max) ? me.max : DEFAULT_MAX; // Common base implementation to handle ticks.min, ticks.max, ticks.beginAtZero\n\n      this.handleTickRangeOptions();\n    },\n    // Returns the maximum number of ticks based on the scale dimension\n    _computeTickLimit: function _computeTickLimit() {\n      var me = this;\n      var tickFont;\n\n      if (me.isHorizontal()) {\n        return Math.ceil(me.width / 40);\n      }\n\n      tickFont = helpers$1.options._parseFont(me.options.ticks);\n      return Math.ceil(me.height / tickFont.lineHeight);\n    },\n    // Called after the ticks are built. We need\n    handleDirectionalChanges: function handleDirectionalChanges() {\n      if (!this.isHorizontal()) {\n        // We are in a vertical orientation. The top value is the highest. So reverse the array\n        this.ticks.reverse();\n      }\n    },\n    getLabelForIndex: function getLabelForIndex(index, datasetIndex) {\n      return +this.getRightValue(this.chart.data.datasets[datasetIndex].data[index]);\n    },\n    // Utils\n    getPixelForValue: function getPixelForValue(value) {\n      // This must be called after fit has been run so that\n      // this.left, this.top, this.right, and this.bottom have been defined\n      var me = this;\n      var start = me.start;\n      var rightValue = +me.getRightValue(value);\n      var pixel;\n      var range = me.end - start;\n\n      if (me.isHorizontal()) {\n        pixel = me.left + me.width / range * (rightValue - start);\n      } else {\n        pixel = me.bottom - me.height / range * (rightValue - start);\n      }\n\n      return pixel;\n    },\n    getValueForPixel: function getValueForPixel(pixel) {\n      var me = this;\n      var isHorizontal = me.isHorizontal();\n      var innerDimension = isHorizontal ? me.width : me.height;\n      var offset = (isHorizontal ? pixel - me.left : me.bottom - pixel) / innerDimension;\n      return me.start + (me.end - me.start) * offset;\n    },\n    getPixelForTick: function getPixelForTick(index) {\n      return this.getPixelForValue(this.ticksAsNumbers[index]);\n    }\n  }); // INTERNAL: static default options, registered in src/index.js\n\n  var _defaults$1 = defaultConfig$1;\n  scale_linear._defaults = _defaults$1;\n  var valueOrDefault$a = helpers$1.valueOrDefault;\n  /**\n   * Generate a set of logarithmic ticks\n   * @param generationOptions the options used to generate the ticks\n   * @param dataRange the range of the data\n   * @returns {number[]} array of tick values\n   */\n\n  function generateTicks$1(generationOptions, dataRange) {\n    var ticks = [];\n    var tickVal = valueOrDefault$a(generationOptions.min, Math.pow(10, Math.floor(helpers$1.log10(dataRange.min))));\n    var endExp = Math.floor(helpers$1.log10(dataRange.max));\n    var endSignificand = Math.ceil(dataRange.max / Math.pow(10, endExp));\n    var exp, significand;\n\n    if (tickVal === 0) {\n      exp = Math.floor(helpers$1.log10(dataRange.minNotZero));\n      significand = Math.floor(dataRange.minNotZero / Math.pow(10, exp));\n      ticks.push(tickVal);\n      tickVal = significand * Math.pow(10, exp);\n    } else {\n      exp = Math.floor(helpers$1.log10(tickVal));\n      significand = Math.floor(tickVal / Math.pow(10, exp));\n    }\n\n    var precision = exp < 0 ? Math.pow(10, Math.abs(exp)) : 1;\n\n    do {\n      ticks.push(tickVal);\n      ++significand;\n\n      if (significand === 10) {\n        significand = 1;\n        ++exp;\n        precision = exp >= 0 ? 1 : precision;\n      }\n\n      tickVal = Math.round(significand * Math.pow(10, exp) * precision) / precision;\n    } while (exp < endExp || exp === endExp && significand < endSignificand);\n\n    var lastTick = valueOrDefault$a(generationOptions.max, tickVal);\n    ticks.push(lastTick);\n    return ticks;\n  }\n\n  var defaultConfig$2 = {\n    position: 'left',\n    // label settings\n    ticks: {\n      callback: core_ticks.formatters.logarithmic\n    }\n  }; // TODO(v3): change this to positiveOrDefault\n\n  function nonNegativeOrDefault(value, defaultValue) {\n    return helpers$1.isFinite(value) && value >= 0 ? value : defaultValue;\n  }\n\n  var scale_logarithmic = core_scale.extend({\n    determineDataLimits: function determineDataLimits() {\n      var me = this;\n      var opts = me.options;\n      var chart = me.chart;\n      var data = chart.data;\n      var datasets = data.datasets;\n      var isHorizontal = me.isHorizontal();\n\n      function IDMatches(meta) {\n        return isHorizontal ? meta.xAxisID === me.id : meta.yAxisID === me.id;\n      } // Calculate Range\n\n\n      me.min = null;\n      me.max = null;\n      me.minNotZero = null;\n      var hasStacks = opts.stacked;\n\n      if (hasStacks === undefined) {\n        helpers$1.each(datasets, function (dataset, datasetIndex) {\n          if (hasStacks) {\n            return;\n          }\n\n          var meta = chart.getDatasetMeta(datasetIndex);\n\n          if (chart.isDatasetVisible(datasetIndex) && IDMatches(meta) && meta.stack !== undefined) {\n            hasStacks = true;\n          }\n        });\n      }\n\n      if (opts.stacked || hasStacks) {\n        var valuesPerStack = {};\n        helpers$1.each(datasets, function (dataset, datasetIndex) {\n          var meta = chart.getDatasetMeta(datasetIndex);\n          var key = [meta.type, // we have a separate stack for stack=undefined datasets when the opts.stacked is undefined\n          opts.stacked === undefined && meta.stack === undefined ? datasetIndex : '', meta.stack].join('.');\n\n          if (chart.isDatasetVisible(datasetIndex) && IDMatches(meta)) {\n            if (valuesPerStack[key] === undefined) {\n              valuesPerStack[key] = [];\n            }\n\n            helpers$1.each(dataset.data, function (rawValue, index) {\n              var values = valuesPerStack[key];\n              var value = +me.getRightValue(rawValue); // invalid, hidden and negative values are ignored\n\n              if (isNaN(value) || meta.data[index].hidden || value < 0) {\n                return;\n              }\n\n              values[index] = values[index] || 0;\n              values[index] += value;\n            });\n          }\n        });\n        helpers$1.each(valuesPerStack, function (valuesForType) {\n          if (valuesForType.length > 0) {\n            var minVal = helpers$1.min(valuesForType);\n            var maxVal = helpers$1.max(valuesForType);\n            me.min = me.min === null ? minVal : Math.min(me.min, minVal);\n            me.max = me.max === null ? maxVal : Math.max(me.max, maxVal);\n          }\n        });\n      } else {\n        helpers$1.each(datasets, function (dataset, datasetIndex) {\n          var meta = chart.getDatasetMeta(datasetIndex);\n\n          if (chart.isDatasetVisible(datasetIndex) && IDMatches(meta)) {\n            helpers$1.each(dataset.data, function (rawValue, index) {\n              var value = +me.getRightValue(rawValue); // invalid, hidden and negative values are ignored\n\n              if (isNaN(value) || meta.data[index].hidden || value < 0) {\n                return;\n              }\n\n              if (me.min === null) {\n                me.min = value;\n              } else if (value < me.min) {\n                me.min = value;\n              }\n\n              if (me.max === null) {\n                me.max = value;\n              } else if (value > me.max) {\n                me.max = value;\n              }\n\n              if (value !== 0 && (me.minNotZero === null || value < me.minNotZero)) {\n                me.minNotZero = value;\n              }\n            });\n          }\n        });\n      } // Common base implementation to handle ticks.min, ticks.max\n\n\n      this.handleTickRangeOptions();\n    },\n    handleTickRangeOptions: function handleTickRangeOptions() {\n      var me = this;\n      var tickOpts = me.options.ticks;\n      var DEFAULT_MIN = 1;\n      var DEFAULT_MAX = 10;\n      me.min = nonNegativeOrDefault(tickOpts.min, me.min);\n      me.max = nonNegativeOrDefault(tickOpts.max, me.max);\n\n      if (me.min === me.max) {\n        if (me.min !== 0 && me.min !== null) {\n          me.min = Math.pow(10, Math.floor(helpers$1.log10(me.min)) - 1);\n          me.max = Math.pow(10, Math.floor(helpers$1.log10(me.max)) + 1);\n        } else {\n          me.min = DEFAULT_MIN;\n          me.max = DEFAULT_MAX;\n        }\n      }\n\n      if (me.min === null) {\n        me.min = Math.pow(10, Math.floor(helpers$1.log10(me.max)) - 1);\n      }\n\n      if (me.max === null) {\n        me.max = me.min !== 0 ? Math.pow(10, Math.floor(helpers$1.log10(me.min)) + 1) : DEFAULT_MAX;\n      }\n\n      if (me.minNotZero === null) {\n        if (me.min > 0) {\n          me.minNotZero = me.min;\n        } else if (me.max < 1) {\n          me.minNotZero = Math.pow(10, Math.floor(helpers$1.log10(me.max)));\n        } else {\n          me.minNotZero = DEFAULT_MIN;\n        }\n      }\n    },\n    buildTicks: function buildTicks() {\n      var me = this;\n      var tickOpts = me.options.ticks;\n      var reverse = !me.isHorizontal();\n      var generationOptions = {\n        min: nonNegativeOrDefault(tickOpts.min),\n        max: nonNegativeOrDefault(tickOpts.max)\n      };\n      var ticks = me.ticks = generateTicks$1(generationOptions, me); // At this point, we need to update our max and min given the tick values since we have expanded the\n      // range of the scale\n\n      me.max = helpers$1.max(ticks);\n      me.min = helpers$1.min(ticks);\n\n      if (tickOpts.reverse) {\n        reverse = !reverse;\n        me.start = me.max;\n        me.end = me.min;\n      } else {\n        me.start = me.min;\n        me.end = me.max;\n      }\n\n      if (reverse) {\n        ticks.reverse();\n      }\n    },\n    convertTicksToLabels: function convertTicksToLabels() {\n      this.tickValues = this.ticks.slice();\n      core_scale.prototype.convertTicksToLabels.call(this);\n    },\n    // Get the correct tooltip label\n    getLabelForIndex: function getLabelForIndex(index, datasetIndex) {\n      return +this.getRightValue(this.chart.data.datasets[datasetIndex].data[index]);\n    },\n    getPixelForTick: function getPixelForTick(index) {\n      return this.getPixelForValue(this.tickValues[index]);\n    },\n\n    /**\n     * Returns the value of the first tick.\n     * @param {number} value - The minimum not zero value.\n     * @return {number} The first tick value.\n     * @private\n     */\n    _getFirstTickValue: function _getFirstTickValue(value) {\n      var exp = Math.floor(helpers$1.log10(value));\n      var significand = Math.floor(value / Math.pow(10, exp));\n      return significand * Math.pow(10, exp);\n    },\n    getPixelForValue: function getPixelForValue(value) {\n      var me = this;\n      var tickOpts = me.options.ticks;\n      var reverse = tickOpts.reverse;\n      var log10 = helpers$1.log10;\n\n      var firstTickValue = me._getFirstTickValue(me.minNotZero);\n\n      var offset = 0;\n      var innerDimension, pixel, start, end, sign;\n      value = +me.getRightValue(value);\n\n      if (reverse) {\n        start = me.end;\n        end = me.start;\n        sign = -1;\n      } else {\n        start = me.start;\n        end = me.end;\n        sign = 1;\n      }\n\n      if (me.isHorizontal()) {\n        innerDimension = me.width;\n        pixel = reverse ? me.right : me.left;\n      } else {\n        innerDimension = me.height;\n        sign *= -1; // invert, since the upper-left corner of the canvas is at pixel (0, 0)\n\n        pixel = reverse ? me.top : me.bottom;\n      }\n\n      if (value !== start) {\n        if (start === 0) {\n          // include zero tick\n          offset = valueOrDefault$a(tickOpts.fontSize, core_defaults.global.defaultFontSize);\n          innerDimension -= offset;\n          start = firstTickValue;\n        }\n\n        if (value !== 0) {\n          offset += innerDimension / (log10(end) - log10(start)) * (log10(value) - log10(start));\n        }\n\n        pixel += sign * offset;\n      }\n\n      return pixel;\n    },\n    getValueForPixel: function getValueForPixel(pixel) {\n      var me = this;\n      var tickOpts = me.options.ticks;\n      var reverse = tickOpts.reverse;\n      var log10 = helpers$1.log10;\n\n      var firstTickValue = me._getFirstTickValue(me.minNotZero);\n\n      var innerDimension, start, end, value;\n\n      if (reverse) {\n        start = me.end;\n        end = me.start;\n      } else {\n        start = me.start;\n        end = me.end;\n      }\n\n      if (me.isHorizontal()) {\n        innerDimension = me.width;\n        value = reverse ? me.right - pixel : pixel - me.left;\n      } else {\n        innerDimension = me.height;\n        value = reverse ? pixel - me.top : me.bottom - pixel;\n      }\n\n      if (value !== start) {\n        if (start === 0) {\n          // include zero tick\n          var offset = valueOrDefault$a(tickOpts.fontSize, core_defaults.global.defaultFontSize);\n          value -= offset;\n          innerDimension -= offset;\n          start = firstTickValue;\n        }\n\n        value *= log10(end) - log10(start);\n        value /= innerDimension;\n        value = Math.pow(10, log10(start) + value);\n      }\n\n      return value;\n    }\n  }); // INTERNAL: static default options, registered in src/index.js\n\n  var _defaults$2 = defaultConfig$2;\n  scale_logarithmic._defaults = _defaults$2;\n  var valueOrDefault$b = helpers$1.valueOrDefault;\n  var valueAtIndexOrDefault$1 = helpers$1.valueAtIndexOrDefault;\n  var resolve$7 = helpers$1.options.resolve;\n  var defaultConfig$3 = {\n    display: true,\n    // Boolean - Whether to animate scaling the chart from the centre\n    animate: true,\n    position: 'chartArea',\n    angleLines: {\n      display: true,\n      color: 'rgba(0, 0, 0, 0.1)',\n      lineWidth: 1,\n      borderDash: [],\n      borderDashOffset: 0.0\n    },\n    gridLines: {\n      circular: false\n    },\n    // label settings\n    ticks: {\n      // Boolean - Show a backdrop to the scale label\n      showLabelBackdrop: true,\n      // String - The colour of the label backdrop\n      backdropColor: 'rgba(255,255,255,0.75)',\n      // Number - The backdrop padding above & below the label in pixels\n      backdropPaddingY: 2,\n      // Number - The backdrop padding to the side of the label in pixels\n      backdropPaddingX: 2,\n      callback: core_ticks.formatters.linear\n    },\n    pointLabels: {\n      // Boolean - if true, show point labels\n      display: true,\n      // Number - Point label font size in pixels\n      fontSize: 10,\n      // Function - Used to convert point labels\n      callback: function callback(label) {\n        return label;\n      }\n    }\n  };\n\n  function getValueCount(scale) {\n    var opts = scale.options;\n    return opts.angleLines.display || opts.pointLabels.display ? scale.chart.data.labels.length : 0;\n  }\n\n  function getTickBackdropHeight(opts) {\n    var tickOpts = opts.ticks;\n\n    if (tickOpts.display && opts.display) {\n      return valueOrDefault$b(tickOpts.fontSize, core_defaults.global.defaultFontSize) + tickOpts.backdropPaddingY * 2;\n    }\n\n    return 0;\n  }\n\n  function measureLabelSize(ctx, lineHeight, label) {\n    if (helpers$1.isArray(label)) {\n      return {\n        w: helpers$1.longestText(ctx, ctx.font, label),\n        h: label.length * lineHeight\n      };\n    }\n\n    return {\n      w: ctx.measureText(label).width,\n      h: lineHeight\n    };\n  }\n\n  function determineLimits(angle, pos, size, min, max) {\n    if (angle === min || angle === max) {\n      return {\n        start: pos - size / 2,\n        end: pos + size / 2\n      };\n    } else if (angle < min || angle > max) {\n      return {\n        start: pos - size,\n        end: pos\n      };\n    }\n\n    return {\n      start: pos,\n      end: pos + size\n    };\n  }\n  /**\n   * Helper function to fit a radial linear scale with point labels\n   */\n\n\n  function fitWithPointLabels(scale) {\n    // Right, this is really confusing and there is a lot of maths going on here\n    // The gist of the problem is here: https://gist.github.com/nnnick/696cc9c55f4b0beb8fe9\n    //\n    // Reaction: https://dl.dropboxusercontent.com/u/34601363/toomuchscience.gif\n    //\n    // Solution:\n    //\n    // We assume the radius of the polygon is half the size of the canvas at first\n    // at each index we check if the text overlaps.\n    //\n    // Where it does, we store that angle and that index.\n    //\n    // After finding the largest index and angle we calculate how much we need to remove\n    // from the shape radius to move the point inwards by that x.\n    //\n    // We average the left and right distances to get the maximum shape radius that can fit in the box\n    // along with labels.\n    //\n    // Once we have that, we can find the centre point for the chart, by taking the x text protrusion\n    // on each side, removing that from the size, halving it and adding the left x protrusion width.\n    //\n    // This will mean we have a shape fitted to the canvas, as large as it can be with the labels\n    // and position it in the most space efficient manner\n    //\n    // https://dl.dropboxusercontent.com/u/34601363/yeahscience.gif\n    var plFont = helpers$1.options._parseFont(scale.options.pointLabels); // Get maximum radius of the polygon. Either half the height (minus the text width) or half the width.\n    // Use this to calculate the offset + change. - Make sure L/R protrusion is at least 0 to stop issues with centre points\n\n\n    var furthestLimits = {\n      l: 0,\n      r: scale.width,\n      t: 0,\n      b: scale.height - scale.paddingTop\n    };\n    var furthestAngles = {};\n    var i, textSize, pointPosition;\n    scale.ctx.font = plFont.string;\n    scale._pointLabelSizes = [];\n    var valueCount = getValueCount(scale);\n\n    for (i = 0; i < valueCount; i++) {\n      pointPosition = scale.getPointPosition(i, scale.drawingArea + 5);\n      textSize = measureLabelSize(scale.ctx, plFont.lineHeight, scale.pointLabels[i] || '');\n      scale._pointLabelSizes[i] = textSize; // Add quarter circle to make degree 0 mean top of circle\n\n      var angleRadians = scale.getIndexAngle(i);\n      var angle = helpers$1.toDegrees(angleRadians) % 360;\n      var hLimits = determineLimits(angle, pointPosition.x, textSize.w, 0, 180);\n      var vLimits = determineLimits(angle, pointPosition.y, textSize.h, 90, 270);\n\n      if (hLimits.start < furthestLimits.l) {\n        furthestLimits.l = hLimits.start;\n        furthestAngles.l = angleRadians;\n      }\n\n      if (hLimits.end > furthestLimits.r) {\n        furthestLimits.r = hLimits.end;\n        furthestAngles.r = angleRadians;\n      }\n\n      if (vLimits.start < furthestLimits.t) {\n        furthestLimits.t = vLimits.start;\n        furthestAngles.t = angleRadians;\n      }\n\n      if (vLimits.end > furthestLimits.b) {\n        furthestLimits.b = vLimits.end;\n        furthestAngles.b = angleRadians;\n      }\n    }\n\n    scale.setReductions(scale.drawingArea, furthestLimits, furthestAngles);\n  }\n\n  function getTextAlignForAngle(angle) {\n    if (angle === 0 || angle === 180) {\n      return 'center';\n    } else if (angle < 180) {\n      return 'left';\n    }\n\n    return 'right';\n  }\n\n  function fillText(ctx, text, position, lineHeight) {\n    var y = position.y + lineHeight / 2;\n    var i, ilen;\n\n    if (helpers$1.isArray(text)) {\n      for (i = 0, ilen = text.length; i < ilen; ++i) {\n        ctx.fillText(text[i], position.x, y);\n        y += lineHeight;\n      }\n    } else {\n      ctx.fillText(text, position.x, y);\n    }\n  }\n\n  function adjustPointPositionForLabelHeight(angle, textSize, position) {\n    if (angle === 90 || angle === 270) {\n      position.y -= textSize.h / 2;\n    } else if (angle > 270 || angle < 90) {\n      position.y -= textSize.h;\n    }\n  }\n\n  function drawPointLabels(scale) {\n    var ctx = scale.ctx;\n    var opts = scale.options;\n    var angleLineOpts = opts.angleLines;\n    var gridLineOpts = opts.gridLines;\n    var pointLabelOpts = opts.pointLabels;\n    var lineWidth = valueOrDefault$b(angleLineOpts.lineWidth, gridLineOpts.lineWidth);\n    var lineColor = valueOrDefault$b(angleLineOpts.color, gridLineOpts.color);\n    var tickBackdropHeight = getTickBackdropHeight(opts);\n    ctx.save();\n    ctx.lineWidth = lineWidth;\n    ctx.strokeStyle = lineColor;\n\n    if (ctx.setLineDash) {\n      ctx.setLineDash(resolve$7([angleLineOpts.borderDash, gridLineOpts.borderDash, []]));\n      ctx.lineDashOffset = resolve$7([angleLineOpts.borderDashOffset, gridLineOpts.borderDashOffset, 0.0]);\n    }\n\n    var outerDistance = scale.getDistanceFromCenterForValue(opts.ticks.reverse ? scale.min : scale.max); // Point Label Font\n\n    var plFont = helpers$1.options._parseFont(pointLabelOpts);\n\n    ctx.font = plFont.string;\n    ctx.textBaseline = 'middle';\n\n    for (var i = getValueCount(scale) - 1; i >= 0; i--) {\n      if (angleLineOpts.display && lineWidth && lineColor) {\n        var outerPosition = scale.getPointPosition(i, outerDistance);\n        ctx.beginPath();\n        ctx.moveTo(scale.xCenter, scale.yCenter);\n        ctx.lineTo(outerPosition.x, outerPosition.y);\n        ctx.stroke();\n      }\n\n      if (pointLabelOpts.display) {\n        // Extra pixels out for some label spacing\n        var extra = i === 0 ? tickBackdropHeight / 2 : 0;\n        var pointLabelPosition = scale.getPointPosition(i, outerDistance + extra + 5); // Keep this in loop since we may support array properties here\n\n        var pointLabelFontColor = valueAtIndexOrDefault$1(pointLabelOpts.fontColor, i, core_defaults.global.defaultFontColor);\n        ctx.fillStyle = pointLabelFontColor;\n        var angleRadians = scale.getIndexAngle(i);\n        var angle = helpers$1.toDegrees(angleRadians);\n        ctx.textAlign = getTextAlignForAngle(angle);\n        adjustPointPositionForLabelHeight(angle, scale._pointLabelSizes[i], pointLabelPosition);\n        fillText(ctx, scale.pointLabels[i] || '', pointLabelPosition, plFont.lineHeight);\n      }\n    }\n\n    ctx.restore();\n  }\n\n  function drawRadiusLine(scale, gridLineOpts, radius, index) {\n    var ctx = scale.ctx;\n    var circular = gridLineOpts.circular;\n    var valueCount = getValueCount(scale);\n    var lineColor = valueAtIndexOrDefault$1(gridLineOpts.color, index - 1);\n    var lineWidth = valueAtIndexOrDefault$1(gridLineOpts.lineWidth, index - 1);\n    var pointPosition;\n\n    if (!circular && !valueCount || !lineColor || !lineWidth) {\n      return;\n    }\n\n    ctx.save();\n    ctx.strokeStyle = lineColor;\n    ctx.lineWidth = lineWidth;\n\n    if (ctx.setLineDash) {\n      ctx.setLineDash(gridLineOpts.borderDash || []);\n      ctx.lineDashOffset = gridLineOpts.borderDashOffset || 0.0;\n    }\n\n    ctx.beginPath();\n\n    if (circular) {\n      // Draw circular arcs between the points\n      ctx.arc(scale.xCenter, scale.yCenter, radius, 0, Math.PI * 2);\n    } else {\n      // Draw straight lines connecting each index\n      pointPosition = scale.getPointPosition(0, radius);\n      ctx.moveTo(pointPosition.x, pointPosition.y);\n\n      for (var i = 1; i < valueCount; i++) {\n        pointPosition = scale.getPointPosition(i, radius);\n        ctx.lineTo(pointPosition.x, pointPosition.y);\n      }\n    }\n\n    ctx.closePath();\n    ctx.stroke();\n    ctx.restore();\n  }\n\n  function numberOrZero(param) {\n    return helpers$1.isNumber(param) ? param : 0;\n  }\n\n  var scale_radialLinear = scale_linearbase.extend({\n    setDimensions: function setDimensions() {\n      var me = this; // Set the unconstrained dimension before label rotation\n\n      me.width = me.maxWidth;\n      me.height = me.maxHeight;\n      me.paddingTop = getTickBackdropHeight(me.options) / 2;\n      me.xCenter = Math.floor(me.width / 2);\n      me.yCenter = Math.floor((me.height - me.paddingTop) / 2);\n      me.drawingArea = Math.min(me.height - me.paddingTop, me.width) / 2;\n    },\n    determineDataLimits: function determineDataLimits() {\n      var me = this;\n      var chart = me.chart;\n      var min = Number.POSITIVE_INFINITY;\n      var max = Number.NEGATIVE_INFINITY;\n      helpers$1.each(chart.data.datasets, function (dataset, datasetIndex) {\n        if (chart.isDatasetVisible(datasetIndex)) {\n          var meta = chart.getDatasetMeta(datasetIndex);\n          helpers$1.each(dataset.data, function (rawValue, index) {\n            var value = +me.getRightValue(rawValue);\n\n            if (isNaN(value) || meta.data[index].hidden) {\n              return;\n            }\n\n            min = Math.min(value, min);\n            max = Math.max(value, max);\n          });\n        }\n      });\n      me.min = min === Number.POSITIVE_INFINITY ? 0 : min;\n      me.max = max === Number.NEGATIVE_INFINITY ? 0 : max; // Common base implementation to handle ticks.min, ticks.max, ticks.beginAtZero\n\n      me.handleTickRangeOptions();\n    },\n    // Returns the maximum number of ticks based on the scale dimension\n    _computeTickLimit: function _computeTickLimit() {\n      return Math.ceil(this.drawingArea / getTickBackdropHeight(this.options));\n    },\n    convertTicksToLabels: function convertTicksToLabels() {\n      var me = this;\n      scale_linearbase.prototype.convertTicksToLabels.call(me); // Point labels\n\n      me.pointLabels = me.chart.data.labels.map(me.options.pointLabels.callback, me);\n    },\n    getLabelForIndex: function getLabelForIndex(index, datasetIndex) {\n      return +this.getRightValue(this.chart.data.datasets[datasetIndex].data[index]);\n    },\n    fit: function fit() {\n      var me = this;\n      var opts = me.options;\n\n      if (opts.display && opts.pointLabels.display) {\n        fitWithPointLabels(me);\n      } else {\n        me.setCenterPoint(0, 0, 0, 0);\n      }\n    },\n\n    /**\n     * Set radius reductions and determine new radius and center point\n     * @private\n     */\n    setReductions: function setReductions(largestPossibleRadius, furthestLimits, furthestAngles) {\n      var me = this;\n      var radiusReductionLeft = furthestLimits.l / Math.sin(furthestAngles.l);\n      var radiusReductionRight = Math.max(furthestLimits.r - me.width, 0) / Math.sin(furthestAngles.r);\n      var radiusReductionTop = -furthestLimits.t / Math.cos(furthestAngles.t);\n      var radiusReductionBottom = -Math.max(furthestLimits.b - (me.height - me.paddingTop), 0) / Math.cos(furthestAngles.b);\n      radiusReductionLeft = numberOrZero(radiusReductionLeft);\n      radiusReductionRight = numberOrZero(radiusReductionRight);\n      radiusReductionTop = numberOrZero(radiusReductionTop);\n      radiusReductionBottom = numberOrZero(radiusReductionBottom);\n      me.drawingArea = Math.min(Math.floor(largestPossibleRadius - (radiusReductionLeft + radiusReductionRight) / 2), Math.floor(largestPossibleRadius - (radiusReductionTop + radiusReductionBottom) / 2));\n      me.setCenterPoint(radiusReductionLeft, radiusReductionRight, radiusReductionTop, radiusReductionBottom);\n    },\n    setCenterPoint: function setCenterPoint(leftMovement, rightMovement, topMovement, bottomMovement) {\n      var me = this;\n      var maxRight = me.width - rightMovement - me.drawingArea;\n      var maxLeft = leftMovement + me.drawingArea;\n      var maxTop = topMovement + me.drawingArea;\n      var maxBottom = me.height - me.paddingTop - bottomMovement - me.drawingArea;\n      me.xCenter = Math.floor((maxLeft + maxRight) / 2 + me.left);\n      me.yCenter = Math.floor((maxTop + maxBottom) / 2 + me.top + me.paddingTop);\n    },\n    getIndexAngle: function getIndexAngle(index) {\n      var angleMultiplier = Math.PI * 2 / getValueCount(this);\n      var startAngle = this.chart.options && this.chart.options.startAngle ? this.chart.options.startAngle : 0;\n      var startAngleRadians = startAngle * Math.PI * 2 / 360; // Start from the top instead of right, so remove a quarter of the circle\n\n      return index * angleMultiplier + startAngleRadians;\n    },\n    getDistanceFromCenterForValue: function getDistanceFromCenterForValue(value) {\n      var me = this;\n\n      if (value === null) {\n        return 0; // null always in center\n      } // Take into account half font size + the yPadding of the top value\n\n\n      var scalingFactor = me.drawingArea / (me.max - me.min);\n\n      if (me.options.ticks.reverse) {\n        return (me.max - value) * scalingFactor;\n      }\n\n      return (value - me.min) * scalingFactor;\n    },\n    getPointPosition: function getPointPosition(index, distanceFromCenter) {\n      var me = this;\n      var thisAngle = me.getIndexAngle(index) - Math.PI / 2;\n      return {\n        x: Math.cos(thisAngle) * distanceFromCenter + me.xCenter,\n        y: Math.sin(thisAngle) * distanceFromCenter + me.yCenter\n      };\n    },\n    getPointPositionForValue: function getPointPositionForValue(index, value) {\n      return this.getPointPosition(index, this.getDistanceFromCenterForValue(value));\n    },\n    getBasePosition: function getBasePosition() {\n      var me = this;\n      var min = me.min;\n      var max = me.max;\n      return me.getPointPositionForValue(0, me.beginAtZero ? 0 : min < 0 && max < 0 ? max : min > 0 && max > 0 ? min : 0);\n    },\n    draw: function draw() {\n      var me = this;\n      var opts = me.options;\n      var gridLineOpts = opts.gridLines;\n      var tickOpts = opts.ticks;\n\n      if (opts.display) {\n        var ctx = me.ctx;\n        var startAngle = this.getIndexAngle(0);\n\n        var tickFont = helpers$1.options._parseFont(tickOpts);\n\n        if (opts.angleLines.display || opts.pointLabels.display) {\n          drawPointLabels(me);\n        }\n\n        helpers$1.each(me.ticks, function (label, index) {\n          // Don't draw a centre value (if it is minimum)\n          if (index > 0 || tickOpts.reverse) {\n            var yCenterOffset = me.getDistanceFromCenterForValue(me.ticksAsNumbers[index]); // Draw circular lines around the scale\n\n            if (gridLineOpts.display && index !== 0) {\n              drawRadiusLine(me, gridLineOpts, yCenterOffset, index);\n            }\n\n            if (tickOpts.display) {\n              var tickFontColor = valueOrDefault$b(tickOpts.fontColor, core_defaults.global.defaultFontColor);\n              ctx.font = tickFont.string;\n              ctx.save();\n              ctx.translate(me.xCenter, me.yCenter);\n              ctx.rotate(startAngle);\n\n              if (tickOpts.showLabelBackdrop) {\n                var labelWidth = ctx.measureText(label).width;\n                ctx.fillStyle = tickOpts.backdropColor;\n                ctx.fillRect(-labelWidth / 2 - tickOpts.backdropPaddingX, -yCenterOffset - tickFont.size / 2 - tickOpts.backdropPaddingY, labelWidth + tickOpts.backdropPaddingX * 2, tickFont.size + tickOpts.backdropPaddingY * 2);\n              }\n\n              ctx.textAlign = 'center';\n              ctx.textBaseline = 'middle';\n              ctx.fillStyle = tickFontColor;\n              ctx.fillText(label, 0, -yCenterOffset);\n              ctx.restore();\n            }\n          }\n        });\n      }\n    }\n  }); // INTERNAL: static default options, registered in src/index.js\n\n  var _defaults$3 = defaultConfig$3;\n  scale_radialLinear._defaults = _defaults$3;\n  var valueOrDefault$c = helpers$1.valueOrDefault; // Integer constants are from the ES6 spec.\n\n  var MIN_INTEGER = Number.MIN_SAFE_INTEGER || -9007199254740991;\n  var MAX_INTEGER = Number.MAX_SAFE_INTEGER || 9007199254740991;\n  var INTERVALS = {\n    millisecond: {\n      common: true,\n      size: 1,\n      steps: [1, 2, 5, 10, 20, 50, 100, 250, 500]\n    },\n    second: {\n      common: true,\n      size: 1000,\n      steps: [1, 2, 5, 10, 15, 30]\n    },\n    minute: {\n      common: true,\n      size: 60000,\n      steps: [1, 2, 5, 10, 15, 30]\n    },\n    hour: {\n      common: true,\n      size: 3600000,\n      steps: [1, 2, 3, 6, 12]\n    },\n    day: {\n      common: true,\n      size: 86400000,\n      steps: [1, 2, 5]\n    },\n    week: {\n      common: false,\n      size: 604800000,\n      steps: [1, 2, 3, 4]\n    },\n    month: {\n      common: true,\n      size: 2.628e9,\n      steps: [1, 2, 3]\n    },\n    quarter: {\n      common: false,\n      size: 7.884e9,\n      steps: [1, 2, 3, 4]\n    },\n    year: {\n      common: true,\n      size: 3.154e10\n    }\n  };\n  var UNITS = Object.keys(INTERVALS);\n\n  function sorter(a, b) {\n    return a - b;\n  }\n\n  function arrayUnique(items) {\n    var hash = {};\n    var out = [];\n    var i, ilen, item;\n\n    for (i = 0, ilen = items.length; i < ilen; ++i) {\n      item = items[i];\n\n      if (!hash[item]) {\n        hash[item] = true;\n        out.push(item);\n      }\n    }\n\n    return out;\n  }\n  /**\n   * Returns an array of {time, pos} objects used to interpolate a specific `time` or position\n   * (`pos`) on the scale, by searching entries before and after the requested value. `pos` is\n   * a decimal between 0 and 1: 0 being the start of the scale (left or top) and 1 the other\n   * extremity (left + width or top + height). Note that it would be more optimized to directly\n   * store pre-computed pixels, but the scale dimensions are not guaranteed at the time we need\n   * to create the lookup table. The table ALWAYS contains at least two items: min and max.\n   *\n   * @param {number[]} timestamps - timestamps sorted from lowest to highest.\n   * @param {string} distribution - If 'linear', timestamps will be spread linearly along the min\n   * and max range, so basically, the table will contains only two items: {min, 0} and {max, 1}.\n   * If 'series', timestamps will be positioned at the same distance from each other. In this\n   * case, only timestamps that break the time linearity are registered, meaning that in the\n   * best case, all timestamps are linear, the table contains only min and max.\n   */\n\n\n  function buildLookupTable(timestamps, min, max, distribution) {\n    if (distribution === 'linear' || !timestamps.length) {\n      return [{\n        time: min,\n        pos: 0\n      }, {\n        time: max,\n        pos: 1\n      }];\n    }\n\n    var table = [];\n    var items = [min];\n    var i, ilen, prev, curr, next;\n\n    for (i = 0, ilen = timestamps.length; i < ilen; ++i) {\n      curr = timestamps[i];\n\n      if (curr > min && curr < max) {\n        items.push(curr);\n      }\n    }\n\n    items.push(max);\n\n    for (i = 0, ilen = items.length; i < ilen; ++i) {\n      next = items[i + 1];\n      prev = items[i - 1];\n      curr = items[i]; // only add points that breaks the scale linearity\n\n      if (prev === undefined || next === undefined || Math.round((next + prev) / 2) !== curr) {\n        table.push({\n          time: curr,\n          pos: i / (ilen - 1)\n        });\n      }\n    }\n\n    return table;\n  } // @see adapted from https://www.anujgakhar.com/2014/03/01/binary-search-in-javascript/\n\n\n  function lookup(table, key, value) {\n    var lo = 0;\n    var hi = table.length - 1;\n    var mid, i0, i1;\n\n    while (lo >= 0 && lo <= hi) {\n      mid = lo + hi >> 1;\n      i0 = table[mid - 1] || null;\n      i1 = table[mid];\n\n      if (!i0) {\n        // given value is outside table (before first item)\n        return {\n          lo: null,\n          hi: i1\n        };\n      } else if (i1[key] < value) {\n        lo = mid + 1;\n      } else if (i0[key] > value) {\n        hi = mid - 1;\n      } else {\n        return {\n          lo: i0,\n          hi: i1\n        };\n      }\n    } // given value is outside table (after last item)\n\n\n    return {\n      lo: i1,\n      hi: null\n    };\n  }\n  /**\n   * Linearly interpolates the given source `value` using the table items `skey` values and\n   * returns the associated `tkey` value. For example, interpolate(table, 'time', 42, 'pos')\n   * returns the position for a timestamp equal to 42. If value is out of bounds, values at\n   * index [0, 1] or [n - 1, n] are used for the interpolation.\n   */\n\n\n  function interpolate$1(table, skey, sval, tkey) {\n    var range = lookup(table, skey, sval); // Note: the lookup table ALWAYS contains at least 2 items (min and max)\n\n    var prev = !range.lo ? table[0] : !range.hi ? table[table.length - 2] : range.lo;\n    var next = !range.lo ? table[1] : !range.hi ? table[table.length - 1] : range.hi;\n    var span = next[skey] - prev[skey];\n    var ratio = span ? (sval - prev[skey]) / span : 0;\n    var offset = (next[tkey] - prev[tkey]) * ratio;\n    return prev[tkey] + offset;\n  }\n\n  function toTimestamp(scale, input) {\n    var adapter = scale._adapter;\n    var options = scale.options.time;\n    var parser = options.parser;\n    var format = parser || options.format;\n    var value = input;\n\n    if (typeof parser === 'function') {\n      value = parser(value);\n    } // Only parse if its not a timestamp already\n\n\n    if (!helpers$1.isFinite(value)) {\n      value = typeof format === 'string' ? adapter.parse(value, format) : adapter.parse(value);\n    }\n\n    if (value !== null) {\n      return +value;\n    } // Labels are in an incompatible format and no `parser` has been provided.\n    // The user might still use the deprecated `format` option for parsing.\n\n\n    if (!parser && typeof format === 'function') {\n      value = format(input); // `format` could return something else than a timestamp, if so, parse it\n\n      if (!helpers$1.isFinite(value)) {\n        value = adapter.parse(value);\n      }\n    }\n\n    return value;\n  }\n\n  function parse(scale, input) {\n    if (helpers$1.isNullOrUndef(input)) {\n      return null;\n    }\n\n    var options = scale.options.time;\n    var value = toTimestamp(scale, scale.getRightValue(input));\n\n    if (value === null) {\n      return value;\n    }\n\n    if (options.round) {\n      value = +scale._adapter.startOf(value, options.round);\n    }\n\n    return value;\n  }\n  /**\n   * Returns the number of unit to skip to be able to display up to `capacity` number of ticks\n   * in `unit` for the given `min` / `max` range and respecting the interval steps constraints.\n   */\n\n\n  function determineStepSize(min, max, unit, capacity) {\n    var range = max - min;\n    var interval = INTERVALS[unit];\n    var milliseconds = interval.size;\n    var steps = interval.steps;\n    var i, ilen, factor;\n\n    if (!steps) {\n      return Math.ceil(range / (capacity * milliseconds));\n    }\n\n    for (i = 0, ilen = steps.length; i < ilen; ++i) {\n      factor = steps[i];\n\n      if (Math.ceil(range / (milliseconds * factor)) <= capacity) {\n        break;\n      }\n    }\n\n    return factor;\n  }\n  /**\n   * Figures out what unit results in an appropriate number of auto-generated ticks\n   */\n\n\n  function determineUnitForAutoTicks(minUnit, min, max, capacity) {\n    var ilen = UNITS.length;\n    var i, interval, factor;\n\n    for (i = UNITS.indexOf(minUnit); i < ilen - 1; ++i) {\n      interval = INTERVALS[UNITS[i]];\n      factor = interval.steps ? interval.steps[interval.steps.length - 1] : MAX_INTEGER;\n\n      if (interval.common && Math.ceil((max - min) / (factor * interval.size)) <= capacity) {\n        return UNITS[i];\n      }\n    }\n\n    return UNITS[ilen - 1];\n  }\n  /**\n   * Figures out what unit to format a set of ticks with\n   */\n\n\n  function determineUnitForFormatting(scale, ticks, minUnit, min, max) {\n    var ilen = UNITS.length;\n    var i, unit;\n\n    for (i = ilen - 1; i >= UNITS.indexOf(minUnit); i--) {\n      unit = UNITS[i];\n\n      if (INTERVALS[unit].common && scale._adapter.diff(max, min, unit) >= ticks.length) {\n        return unit;\n      }\n    }\n\n    return UNITS[minUnit ? UNITS.indexOf(minUnit) : 0];\n  }\n\n  function determineMajorUnit(unit) {\n    for (var i = UNITS.indexOf(unit) + 1, ilen = UNITS.length; i < ilen; ++i) {\n      if (INTERVALS[UNITS[i]].common) {\n        return UNITS[i];\n      }\n    }\n  }\n  /**\n   * Generates a maximum of `capacity` timestamps between min and max, rounded to the\n   * `minor` unit, aligned on the `major` unit and using the given scale time `options`.\n   * Important: this method can return ticks outside the min and max range, it's the\n   * responsibility of the calling code to clamp values if needed.\n   */\n\n\n  function generate(scale, min, max, capacity) {\n    var adapter = scale._adapter;\n    var options = scale.options;\n    var timeOpts = options.time;\n    var minor = timeOpts.unit || determineUnitForAutoTicks(timeOpts.minUnit, min, max, capacity);\n    var major = determineMajorUnit(minor);\n    var stepSize = valueOrDefault$c(timeOpts.stepSize, timeOpts.unitStepSize);\n    var weekday = minor === 'week' ? timeOpts.isoWeekday : false;\n    var majorTicksEnabled = options.ticks.major.enabled;\n    var interval = INTERVALS[minor];\n    var first = min;\n    var last = max;\n    var ticks = [];\n    var time;\n\n    if (!stepSize) {\n      stepSize = determineStepSize(min, max, minor, capacity);\n    } // For 'week' unit, handle the first day of week option\n\n\n    if (weekday) {\n      first = +adapter.startOf(first, 'isoWeek', weekday);\n      last = +adapter.startOf(last, 'isoWeek', weekday);\n    } // Align first/last ticks on unit\n\n\n    first = +adapter.startOf(first, weekday ? 'day' : minor);\n    last = +adapter.startOf(last, weekday ? 'day' : minor); // Make sure that the last tick include max\n\n    if (last < max) {\n      last = +adapter.add(last, 1, minor);\n    }\n\n    time = first;\n\n    if (majorTicksEnabled && major && !weekday && !timeOpts.round) {\n      // Align the first tick on the previous `minor` unit aligned on the `major` unit:\n      // we first aligned time on the previous `major` unit then add the number of full\n      // stepSize there is between first and the previous major time.\n      time = +adapter.startOf(time, major);\n      time = +adapter.add(time, ~~((first - time) / (interval.size * stepSize)) * stepSize, minor);\n    }\n\n    for (; time < last; time = +adapter.add(time, stepSize, minor)) {\n      ticks.push(+time);\n    }\n\n    ticks.push(+time);\n    return ticks;\n  }\n  /**\n   * Returns the start and end offsets from edges in the form of {start, end}\n   * where each value is a relative width to the scale and ranges between 0 and 1.\n   * They add extra margins on the both sides by scaling down the original scale.\n   * Offsets are added when the `offset` option is true.\n   */\n\n\n  function computeOffsets(table, ticks, min, max, options) {\n    var start = 0;\n    var end = 0;\n    var first, last;\n\n    if (options.offset && ticks.length) {\n      if (!options.time.min) {\n        first = interpolate$1(table, 'time', ticks[0], 'pos');\n\n        if (ticks.length === 1) {\n          start = 1 - first;\n        } else {\n          start = (interpolate$1(table, 'time', ticks[1], 'pos') - first) / 2;\n        }\n      }\n\n      if (!options.time.max) {\n        last = interpolate$1(table, 'time', ticks[ticks.length - 1], 'pos');\n\n        if (ticks.length === 1) {\n          end = last;\n        } else {\n          end = (last - interpolate$1(table, 'time', ticks[ticks.length - 2], 'pos')) / 2;\n        }\n      }\n    }\n\n    return {\n      start: start,\n      end: end\n    };\n  }\n\n  function ticksFromTimestamps(scale, values, majorUnit) {\n    var ticks = [];\n    var i, ilen, value, major;\n\n    for (i = 0, ilen = values.length; i < ilen; ++i) {\n      value = values[i];\n      major = majorUnit ? value === +scale._adapter.startOf(value, majorUnit) : false;\n      ticks.push({\n        value: value,\n        major: major\n      });\n    }\n\n    return ticks;\n  }\n\n  var defaultConfig$4 = {\n    position: 'bottom',\n\n    /**\n     * Data distribution along the scale:\n     * - 'linear': data are spread according to their time (distances can vary),\n     * - 'series': data are spread at the same distance from each other.\n     * @see https://github.com/chartjs/Chart.js/pull/4507\n     * @since 2.7.0\n     */\n    distribution: 'linear',\n\n    /**\n     * Scale boundary strategy (bypassed by min/max time options)\n     * - `data`: make sure data are fully visible, ticks outside are removed\n     * - `ticks`: make sure ticks are fully visible, data outside are truncated\n     * @see https://github.com/chartjs/Chart.js/pull/4556\n     * @since 2.7.0\n     */\n    bounds: 'data',\n    adapters: {},\n    time: {\n      parser: false,\n      // false == a pattern string from https://momentjs.com/docs/#/parsing/string-format/ or a custom callback that converts its argument to a moment\n      format: false,\n      // DEPRECATED false == date objects, moment object, callback or a pattern string from https://momentjs.com/docs/#/parsing/string-format/\n      unit: false,\n      // false == automatic or override with week, month, year, etc.\n      round: false,\n      // none, or override with week, month, year, etc.\n      displayFormat: false,\n      // DEPRECATED\n      isoWeekday: false,\n      // override week start day - see https://momentjs.com/docs/#/get-set/iso-weekday/\n      minUnit: 'millisecond',\n      displayFormats: {}\n    },\n    ticks: {\n      autoSkip: false,\n\n      /**\n       * Ticks generation input values:\n       * - 'auto': generates \"optimal\" ticks based on scale size and time options.\n       * - 'data': generates ticks from data (including labels from data {t|x|y} objects).\n       * - 'labels': generates ticks from user given `data.labels` values ONLY.\n       * @see https://github.com/chartjs/Chart.js/pull/4507\n       * @since 2.7.0\n       */\n      source: 'auto',\n      major: {\n        enabled: false\n      }\n    }\n  };\n  var scale_time = core_scale.extend({\n    initialize: function initialize() {\n      this.mergeTicksOptions();\n      core_scale.prototype.initialize.call(this);\n    },\n    update: function update() {\n      var me = this;\n      var options = me.options;\n      var time = options.time || (options.time = {});\n      var adapter = me._adapter = new core_adapters._date(options.adapters.date); // DEPRECATIONS: output a message only one time per update\n\n      if (time.format) {\n        console.warn('options.time.format is deprecated and replaced by options.time.parser.');\n      } // Backward compatibility: before introducing adapter, `displayFormats` was\n      // supposed to contain *all* unit/string pairs but this can't be resolved\n      // when loading the scale (adapters are loaded afterward), so let's populate\n      // missing formats on update\n\n\n      helpers$1.mergeIf(time.displayFormats, adapter.formats());\n      return core_scale.prototype.update.apply(me, arguments);\n    },\n\n    /**\n     * Allows data to be referenced via 't' attribute\n     */\n    getRightValue: function getRightValue(rawValue) {\n      if (rawValue && rawValue.t !== undefined) {\n        rawValue = rawValue.t;\n      }\n\n      return core_scale.prototype.getRightValue.call(this, rawValue);\n    },\n    determineDataLimits: function determineDataLimits() {\n      var me = this;\n      var chart = me.chart;\n      var adapter = me._adapter;\n      var timeOpts = me.options.time;\n      var unit = timeOpts.unit || 'day';\n      var min = MAX_INTEGER;\n      var max = MIN_INTEGER;\n      var timestamps = [];\n      var datasets = [];\n      var labels = [];\n      var i, j, ilen, jlen, data, timestamp;\n      var dataLabels = chart.data.labels || []; // Convert labels to timestamps\n\n      for (i = 0, ilen = dataLabels.length; i < ilen; ++i) {\n        labels.push(parse(me, dataLabels[i]));\n      } // Convert data to timestamps\n\n\n      for (i = 0, ilen = (chart.data.datasets || []).length; i < ilen; ++i) {\n        if (chart.isDatasetVisible(i)) {\n          data = chart.data.datasets[i].data; // Let's consider that all data have the same format.\n\n          if (helpers$1.isObject(data[0])) {\n            datasets[i] = [];\n\n            for (j = 0, jlen = data.length; j < jlen; ++j) {\n              timestamp = parse(me, data[j]);\n              timestamps.push(timestamp);\n              datasets[i][j] = timestamp;\n            }\n          } else {\n            for (j = 0, jlen = labels.length; j < jlen; ++j) {\n              timestamps.push(labels[j]);\n            }\n\n            datasets[i] = labels.slice(0);\n          }\n        } else {\n          datasets[i] = [];\n        }\n      }\n\n      if (labels.length) {\n        // Sort labels **after** data have been converted\n        labels = arrayUnique(labels).sort(sorter);\n        min = Math.min(min, labels[0]);\n        max = Math.max(max, labels[labels.length - 1]);\n      }\n\n      if (timestamps.length) {\n        timestamps = arrayUnique(timestamps).sort(sorter);\n        min = Math.min(min, timestamps[0]);\n        max = Math.max(max, timestamps[timestamps.length - 1]);\n      }\n\n      min = parse(me, timeOpts.min) || min;\n      max = parse(me, timeOpts.max) || max; // In case there is no valid min/max, set limits based on unit time option\n\n      min = min === MAX_INTEGER ? +adapter.startOf(Date.now(), unit) : min;\n      max = max === MIN_INTEGER ? +adapter.endOf(Date.now(), unit) + 1 : max; // Make sure that max is strictly higher than min (required by the lookup table)\n\n      me.min = Math.min(min, max);\n      me.max = Math.max(min + 1, max); // PRIVATE\n\n      me._horizontal = me.isHorizontal();\n      me._table = [];\n      me._timestamps = {\n        data: timestamps,\n        datasets: datasets,\n        labels: labels\n      };\n    },\n    buildTicks: function buildTicks() {\n      var me = this;\n      var min = me.min;\n      var max = me.max;\n      var options = me.options;\n      var timeOpts = options.time;\n      var timestamps = [];\n      var ticks = [];\n      var i, ilen, timestamp;\n\n      switch (options.ticks.source) {\n        case 'data':\n          timestamps = me._timestamps.data;\n          break;\n\n        case 'labels':\n          timestamps = me._timestamps.labels;\n          break;\n\n        case 'auto':\n        default:\n          timestamps = generate(me, min, max, me.getLabelCapacity(min), options);\n      }\n\n      if (options.bounds === 'ticks' && timestamps.length) {\n        min = timestamps[0];\n        max = timestamps[timestamps.length - 1];\n      } // Enforce limits with user min/max options\n\n\n      min = parse(me, timeOpts.min) || min;\n      max = parse(me, timeOpts.max) || max; // Remove ticks outside the min/max range\n\n      for (i = 0, ilen = timestamps.length; i < ilen; ++i) {\n        timestamp = timestamps[i];\n\n        if (timestamp >= min && timestamp <= max) {\n          ticks.push(timestamp);\n        }\n      }\n\n      me.min = min;\n      me.max = max; // PRIVATE\n\n      me._unit = timeOpts.unit || determineUnitForFormatting(me, ticks, timeOpts.minUnit, me.min, me.max);\n      me._majorUnit = determineMajorUnit(me._unit);\n      me._table = buildLookupTable(me._timestamps.data, min, max, options.distribution);\n      me._offsets = computeOffsets(me._table, ticks, min, max, options);\n\n      if (options.ticks.reverse) {\n        ticks.reverse();\n      }\n\n      return ticksFromTimestamps(me, ticks, me._majorUnit);\n    },\n    getLabelForIndex: function getLabelForIndex(index, datasetIndex) {\n      var me = this;\n      var adapter = me._adapter;\n      var data = me.chart.data;\n      var timeOpts = me.options.time;\n      var label = data.labels && index < data.labels.length ? data.labels[index] : '';\n      var value = data.datasets[datasetIndex].data[index];\n\n      if (helpers$1.isObject(value)) {\n        label = me.getRightValue(value);\n      }\n\n      if (timeOpts.tooltipFormat) {\n        return adapter.format(toTimestamp(me, label), timeOpts.tooltipFormat);\n      }\n\n      if (typeof label === 'string') {\n        return label;\n      }\n\n      return adapter.format(toTimestamp(me, label), timeOpts.displayFormats.datetime);\n    },\n\n    /**\n     * Function to format an individual tick mark\n     * @private\n     */\n    tickFormatFunction: function tickFormatFunction(time, index, ticks, format) {\n      var me = this;\n      var adapter = me._adapter;\n      var options = me.options;\n      var formats = options.time.displayFormats;\n      var minorFormat = formats[me._unit];\n      var majorUnit = me._majorUnit;\n      var majorFormat = formats[majorUnit];\n      var majorTime = +adapter.startOf(time, majorUnit);\n      var majorTickOpts = options.ticks.major;\n      var major = majorTickOpts.enabled && majorUnit && majorFormat && time === majorTime;\n      var label = adapter.format(time, format ? format : major ? majorFormat : minorFormat);\n      var tickOpts = major ? majorTickOpts : options.ticks.minor;\n      var formatter = valueOrDefault$c(tickOpts.callback, tickOpts.userCallback);\n      return formatter ? formatter(label, index, ticks) : label;\n    },\n    convertTicksToLabels: function convertTicksToLabels(ticks) {\n      var labels = [];\n      var i, ilen;\n\n      for (i = 0, ilen = ticks.length; i < ilen; ++i) {\n        labels.push(this.tickFormatFunction(ticks[i].value, i, ticks));\n      }\n\n      return labels;\n    },\n\n    /**\n     * @private\n     */\n    getPixelForOffset: function getPixelForOffset(time) {\n      var me = this;\n      var isReverse = me.options.ticks.reverse;\n      var size = me._horizontal ? me.width : me.height;\n      var start = me._horizontal ? isReverse ? me.right : me.left : isReverse ? me.bottom : me.top;\n      var pos = interpolate$1(me._table, 'time', time, 'pos');\n      var offset = size * (me._offsets.start + pos) / (me._offsets.start + 1 + me._offsets.end);\n      return isReverse ? start - offset : start + offset;\n    },\n    getPixelForValue: function getPixelForValue(value, index, datasetIndex) {\n      var me = this;\n      var time = null;\n\n      if (index !== undefined && datasetIndex !== undefined) {\n        time = me._timestamps.datasets[datasetIndex][index];\n      }\n\n      if (time === null) {\n        time = parse(me, value);\n      }\n\n      if (time !== null) {\n        return me.getPixelForOffset(time);\n      }\n    },\n    getPixelForTick: function getPixelForTick(index) {\n      var ticks = this.getTicks();\n      return index >= 0 && index < ticks.length ? this.getPixelForOffset(ticks[index].value) : null;\n    },\n    getValueForPixel: function getValueForPixel(pixel) {\n      var me = this;\n      var size = me._horizontal ? me.width : me.height;\n      var start = me._horizontal ? me.left : me.top;\n      var pos = (size ? (pixel - start) / size : 0) * (me._offsets.start + 1 + me._offsets.start) - me._offsets.end;\n      var time = interpolate$1(me._table, 'pos', pos, 'time'); // DEPRECATION, we should return time directly\n\n      return me._adapter._create(time);\n    },\n\n    /**\n     * Crude approximation of what the label width might be\n     * @private\n     */\n    getLabelWidth: function getLabelWidth(label) {\n      var me = this;\n      var ticksOpts = me.options.ticks;\n      var tickLabelWidth = me.ctx.measureText(label).width;\n      var angle = helpers$1.toRadians(ticksOpts.maxRotation);\n      var cosRotation = Math.cos(angle);\n      var sinRotation = Math.sin(angle);\n      var tickFontSize = valueOrDefault$c(ticksOpts.fontSize, core_defaults.global.defaultFontSize);\n      return tickLabelWidth * cosRotation + tickFontSize * sinRotation;\n    },\n\n    /**\n     * @private\n     */\n    getLabelCapacity: function getLabelCapacity(exampleTime) {\n      var me = this; // pick the longest format (milliseconds) for guestimation\n\n      var format = me.options.time.displayFormats.millisecond;\n      var exampleLabel = me.tickFormatFunction(exampleTime, 0, [], format);\n      var tickLabelWidth = me.getLabelWidth(exampleLabel);\n      var innerWidth = me.isHorizontal() ? me.width : me.height;\n      var capacity = Math.floor(innerWidth / tickLabelWidth);\n      return capacity > 0 ? capacity : 1;\n    }\n  }); // INTERNAL: static default options, registered in src/index.js\n\n  var _defaults$4 = defaultConfig$4;\n  scale_time._defaults = _defaults$4;\n  var scales = {\n    category: scale_category,\n    linear: scale_linear,\n    logarithmic: scale_logarithmic,\n    radialLinear: scale_radialLinear,\n    time: scale_time\n  };\n  var FORMATS = {\n    datetime: 'MMM D, YYYY, h:mm:ss a',\n    millisecond: 'h:mm:ss.SSS a',\n    second: 'h:mm:ss a',\n    minute: 'h:mm a',\n    hour: 'hA',\n    day: 'MMM D',\n    week: 'll',\n    month: 'MMM YYYY',\n    quarter: '[Q]Q - YYYY',\n    year: 'YYYY'\n  };\n\n  core_adapters._date.override(typeof moment === 'function' ? {\n    _id: 'moment',\n    // DEBUG ONLY\n    formats: function formats() {\n      return FORMATS;\n    },\n    parse: function parse(value, format) {\n      if (typeof value === 'string' && typeof format === 'string') {\n        value = moment(value, format);\n      } else if (!(value instanceof moment)) {\n        value = moment(value);\n      }\n\n      return value.isValid() ? value.valueOf() : null;\n    },\n    format: function format(time, _format) {\n      return moment(time).format(_format);\n    },\n    add: function add(time, amount, unit) {\n      return moment(time).add(amount, unit).valueOf();\n    },\n    diff: function diff(max, min, unit) {\n      return moment.duration(moment(max).diff(moment(min))).as(unit);\n    },\n    startOf: function startOf(time, unit, weekday) {\n      time = moment(time);\n\n      if (unit === 'isoWeek') {\n        return time.isoWeekday(weekday).valueOf();\n      }\n\n      return time.startOf(unit).valueOf();\n    },\n    endOf: function endOf(time, unit) {\n      return moment(time).endOf(unit).valueOf();\n    },\n    // DEPRECATIONS\n\n    /**\n     * Provided for backward compatibility with scale.getValueForPixel().\n     * @deprecated since version 2.8.0\n     * @todo remove at version 3\n     * @private\n     */\n    _create: function _create(time) {\n      return moment(time);\n    }\n  } : {});\n\n  core_defaults._set('global', {\n    plugins: {\n      filler: {\n        propagate: true\n      }\n    }\n  });\n\n  var mappers = {\n    dataset: function dataset(source) {\n      var index = source.fill;\n      var chart = source.chart;\n      var meta = chart.getDatasetMeta(index);\n      var visible = meta && chart.isDatasetVisible(index);\n      var points = visible && meta.dataset._children || [];\n      var length = points.length || 0;\n      return !length ? null : function (point, i) {\n        return i < length && points[i]._view || null;\n      };\n    },\n    boundary: function boundary(source) {\n      var boundary = source.boundary;\n      var x = boundary ? boundary.x : null;\n      var y = boundary ? boundary.y : null;\n      return function (point) {\n        return {\n          x: x === null ? point.x : x,\n          y: y === null ? point.y : y\n        };\n      };\n    }\n  }; // @todo if (fill[0] === '#')\n\n  function decodeFill(el, index, count) {\n    var model = el._model || {};\n    var fill = model.fill;\n    var target;\n\n    if (fill === undefined) {\n      fill = !!model.backgroundColor;\n    }\n\n    if (fill === false || fill === null) {\n      return false;\n    }\n\n    if (fill === true) {\n      return 'origin';\n    }\n\n    target = parseFloat(fill, 10);\n\n    if (isFinite(target) && Math.floor(target) === target) {\n      if (fill[0] === '-' || fill[0] === '+') {\n        target = index + target;\n      }\n\n      if (target === index || target < 0 || target >= count) {\n        return false;\n      }\n\n      return target;\n    }\n\n    switch (fill) {\n      // compatibility\n      case 'bottom':\n        return 'start';\n\n      case 'top':\n        return 'end';\n\n      case 'zero':\n        return 'origin';\n      // supported boundaries\n\n      case 'origin':\n      case 'start':\n      case 'end':\n        return fill;\n      // invalid fill values\n\n      default:\n        return false;\n    }\n  }\n\n  function computeBoundary(source) {\n    var model = source.el._model || {};\n    var scale = source.el._scale || {};\n    var fill = source.fill;\n    var target = null;\n    var horizontal;\n\n    if (isFinite(fill)) {\n      return null;\n    } // Backward compatibility: until v3, we still need to support boundary values set on\n    // the model (scaleTop, scaleBottom and scaleZero) because some external plugins and\n    // controllers might still use it (e.g. the Smith chart).\n\n\n    if (fill === 'start') {\n      target = model.scaleBottom === undefined ? scale.bottom : model.scaleBottom;\n    } else if (fill === 'end') {\n      target = model.scaleTop === undefined ? scale.top : model.scaleTop;\n    } else if (model.scaleZero !== undefined) {\n      target = model.scaleZero;\n    } else if (scale.getBasePosition) {\n      target = scale.getBasePosition();\n    } else if (scale.getBasePixel) {\n      target = scale.getBasePixel();\n    }\n\n    if (target !== undefined && target !== null) {\n      if (target.x !== undefined && target.y !== undefined) {\n        return target;\n      }\n\n      if (helpers$1.isFinite(target)) {\n        horizontal = scale.isHorizontal();\n        return {\n          x: horizontal ? target : null,\n          y: horizontal ? null : target\n        };\n      }\n    }\n\n    return null;\n  }\n\n  function resolveTarget(sources, index, propagate) {\n    var source = sources[index];\n    var fill = source.fill;\n    var visited = [index];\n    var target;\n\n    if (!propagate) {\n      return fill;\n    }\n\n    while (fill !== false && visited.indexOf(fill) === -1) {\n      if (!isFinite(fill)) {\n        return fill;\n      }\n\n      target = sources[fill];\n\n      if (!target) {\n        return false;\n      }\n\n      if (target.visible) {\n        return fill;\n      }\n\n      visited.push(fill);\n      fill = target.fill;\n    }\n\n    return false;\n  }\n\n  function createMapper(source) {\n    var fill = source.fill;\n    var type = 'dataset';\n\n    if (fill === false) {\n      return null;\n    }\n\n    if (!isFinite(fill)) {\n      type = 'boundary';\n    }\n\n    return mappers[type](source);\n  }\n\n  function isDrawable(point) {\n    return point && !point.skip;\n  }\n\n  function drawArea(ctx, curve0, curve1, len0, len1) {\n    var i;\n\n    if (!len0 || !len1) {\n      return;\n    } // building first area curve (normal)\n\n\n    ctx.moveTo(curve0[0].x, curve0[0].y);\n\n    for (i = 1; i < len0; ++i) {\n      helpers$1.canvas.lineTo(ctx, curve0[i - 1], curve0[i]);\n    } // joining the two area curves\n\n\n    ctx.lineTo(curve1[len1 - 1].x, curve1[len1 - 1].y); // building opposite area curve (reverse)\n\n    for (i = len1 - 1; i > 0; --i) {\n      helpers$1.canvas.lineTo(ctx, curve1[i], curve1[i - 1], true);\n    }\n  }\n\n  function doFill(ctx, points, mapper, view, color, loop) {\n    var count = points.length;\n    var span = view.spanGaps;\n    var curve0 = [];\n    var curve1 = [];\n    var len0 = 0;\n    var len1 = 0;\n    var i, ilen, index, p0, p1, d0, d1;\n    ctx.beginPath();\n\n    for (i = 0, ilen = count + !!loop; i < ilen; ++i) {\n      index = i % count;\n      p0 = points[index]._view;\n      p1 = mapper(p0, index, view);\n      d0 = isDrawable(p0);\n      d1 = isDrawable(p1);\n\n      if (d0 && d1) {\n        len0 = curve0.push(p0);\n        len1 = curve1.push(p1);\n      } else if (len0 && len1) {\n        if (!span) {\n          drawArea(ctx, curve0, curve1, len0, len1);\n          len0 = len1 = 0;\n          curve0 = [];\n          curve1 = [];\n        } else {\n          if (d0) {\n            curve0.push(p0);\n          }\n\n          if (d1) {\n            curve1.push(p1);\n          }\n        }\n      }\n    }\n\n    drawArea(ctx, curve0, curve1, len0, len1);\n    ctx.closePath();\n    ctx.fillStyle = color;\n    ctx.fill();\n  }\n\n  var plugin_filler = {\n    id: 'filler',\n    afterDatasetsUpdate: function afterDatasetsUpdate(chart, options) {\n      var count = (chart.data.datasets || []).length;\n      var propagate = options.propagate;\n      var sources = [];\n      var meta, i, el, source;\n\n      for (i = 0; i < count; ++i) {\n        meta = chart.getDatasetMeta(i);\n        el = meta.dataset;\n        source = null;\n\n        if (el && el._model && el instanceof elements.Line) {\n          source = {\n            visible: chart.isDatasetVisible(i),\n            fill: decodeFill(el, i, count),\n            chart: chart,\n            el: el\n          };\n        }\n\n        meta.$filler = source;\n        sources.push(source);\n      }\n\n      for (i = 0; i < count; ++i) {\n        source = sources[i];\n\n        if (!source) {\n          continue;\n        }\n\n        source.fill = resolveTarget(sources, i, propagate);\n        source.boundary = computeBoundary(source);\n        source.mapper = createMapper(source);\n      }\n    },\n    beforeDatasetDraw: function beforeDatasetDraw(chart, args) {\n      var meta = args.meta.$filler;\n\n      if (!meta) {\n        return;\n      }\n\n      var ctx = chart.ctx;\n      var el = meta.el;\n      var view = el._view;\n      var points = el._children || [];\n      var mapper = meta.mapper;\n      var color = view.backgroundColor || core_defaults.global.defaultColor;\n\n      if (mapper && color && points.length) {\n        helpers$1.canvas.clipArea(ctx, chart.chartArea);\n        doFill(ctx, points, mapper, view, color, el._loop);\n        helpers$1.canvas.unclipArea(ctx);\n      }\n    }\n  };\n  var noop$1 = helpers$1.noop;\n  var valueOrDefault$d = helpers$1.valueOrDefault;\n\n  core_defaults._set('global', {\n    legend: {\n      display: true,\n      position: 'top',\n      fullWidth: true,\n      reverse: false,\n      weight: 1000,\n      // a callback that will handle\n      onClick: function onClick(e, legendItem) {\n        var index = legendItem.datasetIndex;\n        var ci = this.chart;\n        var meta = ci.getDatasetMeta(index); // See controller.isDatasetVisible comment\n\n        meta.hidden = meta.hidden === null ? !ci.data.datasets[index].hidden : null; // We hid a dataset ... rerender the chart\n\n        ci.update();\n      },\n      onHover: null,\n      onLeave: null,\n      labels: {\n        boxWidth: 40,\n        padding: 10,\n        // Generates labels shown in the legend\n        // Valid properties to return:\n        // text : text to display\n        // fillStyle : fill of coloured box\n        // strokeStyle: stroke of coloured box\n        // hidden : if this legend item refers to a hidden item\n        // lineCap : cap style for line\n        // lineDash\n        // lineDashOffset :\n        // lineJoin :\n        // lineWidth :\n        generateLabels: function generateLabels(chart) {\n          var data = chart.data;\n          return helpers$1.isArray(data.datasets) ? data.datasets.map(function (dataset, i) {\n            return {\n              text: dataset.label,\n              fillStyle: !helpers$1.isArray(dataset.backgroundColor) ? dataset.backgroundColor : dataset.backgroundColor[0],\n              hidden: !chart.isDatasetVisible(i),\n              lineCap: dataset.borderCapStyle,\n              lineDash: dataset.borderDash,\n              lineDashOffset: dataset.borderDashOffset,\n              lineJoin: dataset.borderJoinStyle,\n              lineWidth: dataset.borderWidth,\n              strokeStyle: dataset.borderColor,\n              pointStyle: dataset.pointStyle,\n              // Below is extra data used for toggling the datasets\n              datasetIndex: i\n            };\n          }, this) : [];\n        }\n      }\n    },\n    legendCallback: function legendCallback(chart) {\n      var text = [];\n      text.push('<ul class=\"' + chart.id + '-legend\">');\n\n      for (var i = 0; i < chart.data.datasets.length; i++) {\n        text.push('<li><span style=\"background-color:' + chart.data.datasets[i].backgroundColor + '\"></span>');\n\n        if (chart.data.datasets[i].label) {\n          text.push(chart.data.datasets[i].label);\n        }\n\n        text.push('</li>');\n      }\n\n      text.push('</ul>');\n      return text.join('');\n    }\n  });\n  /**\n   * Helper function to get the box width based on the usePointStyle option\n   * @param {object} labelopts - the label options on the legend\n   * @param {number} fontSize - the label font size\n   * @return {number} width of the color box area\n   */\n\n\n  function getBoxWidth(labelOpts, fontSize) {\n    return labelOpts.usePointStyle && labelOpts.boxWidth > fontSize ? fontSize : labelOpts.boxWidth;\n  }\n  /**\n   * IMPORTANT: this class is exposed publicly as Chart.Legend, backward compatibility required!\n   */\n\n\n  var Legend = core_element.extend({\n    initialize: function initialize(config) {\n      helpers$1.extend(this, config); // Contains hit boxes for each dataset (in dataset order)\n\n      this.legendHitBoxes = [];\n      /**\n      \t * @private\n      \t */\n\n      this._hoveredItem = null; // Are we in doughnut mode which has a different data type\n\n      this.doughnutMode = false;\n    },\n    // These methods are ordered by lifecycle. Utilities then follow.\n    // Any function defined here is inherited by all legend types.\n    // Any function can be extended by the legend type\n    beforeUpdate: noop$1,\n    update: function update(maxWidth, maxHeight, margins) {\n      var me = this; // Update Lifecycle - Probably don't want to ever extend or overwrite this function ;)\n\n      me.beforeUpdate(); // Absorb the master measurements\n\n      me.maxWidth = maxWidth;\n      me.maxHeight = maxHeight;\n      me.margins = margins; // Dimensions\n\n      me.beforeSetDimensions();\n      me.setDimensions();\n      me.afterSetDimensions(); // Labels\n\n      me.beforeBuildLabels();\n      me.buildLabels();\n      me.afterBuildLabels(); // Fit\n\n      me.beforeFit();\n      me.fit();\n      me.afterFit(); //\n\n      me.afterUpdate();\n      return me.minSize;\n    },\n    afterUpdate: noop$1,\n    //\n    beforeSetDimensions: noop$1,\n    setDimensions: function setDimensions() {\n      var me = this; // Set the unconstrained dimension before label rotation\n\n      if (me.isHorizontal()) {\n        // Reset position before calculating rotation\n        me.width = me.maxWidth;\n        me.left = 0;\n        me.right = me.width;\n      } else {\n        me.height = me.maxHeight; // Reset position before calculating rotation\n\n        me.top = 0;\n        me.bottom = me.height;\n      } // Reset padding\n\n\n      me.paddingLeft = 0;\n      me.paddingTop = 0;\n      me.paddingRight = 0;\n      me.paddingBottom = 0; // Reset minSize\n\n      me.minSize = {\n        width: 0,\n        height: 0\n      };\n    },\n    afterSetDimensions: noop$1,\n    //\n    beforeBuildLabels: noop$1,\n    buildLabels: function buildLabels() {\n      var me = this;\n      var labelOpts = me.options.labels || {};\n      var legendItems = helpers$1.callback(labelOpts.generateLabels, [me.chart], me) || [];\n\n      if (labelOpts.filter) {\n        legendItems = legendItems.filter(function (item) {\n          return labelOpts.filter(item, me.chart.data);\n        });\n      }\n\n      if (me.options.reverse) {\n        legendItems.reverse();\n      }\n\n      me.legendItems = legendItems;\n    },\n    afterBuildLabels: noop$1,\n    //\n    beforeFit: noop$1,\n    fit: function fit() {\n      var me = this;\n      var opts = me.options;\n      var labelOpts = opts.labels;\n      var display = opts.display;\n      var ctx = me.ctx;\n\n      var labelFont = helpers$1.options._parseFont(labelOpts);\n\n      var fontSize = labelFont.size; // Reset hit boxes\n\n      var hitboxes = me.legendHitBoxes = [];\n      var minSize = me.minSize;\n      var isHorizontal = me.isHorizontal();\n\n      if (isHorizontal) {\n        minSize.width = me.maxWidth; // fill all the width\n\n        minSize.height = display ? 10 : 0;\n      } else {\n        minSize.width = display ? 10 : 0;\n        minSize.height = me.maxHeight; // fill all the height\n      } // Increase sizes here\n\n\n      if (display) {\n        ctx.font = labelFont.string;\n\n        if (isHorizontal) {\n          // Labels\n          // Width of each line of legend boxes. Labels wrap onto multiple lines when there are too many to fit on one\n          var lineWidths = me.lineWidths = [0];\n          var totalHeight = 0;\n          ctx.textAlign = 'left';\n          ctx.textBaseline = 'top';\n          helpers$1.each(me.legendItems, function (legendItem, i) {\n            var boxWidth = getBoxWidth(labelOpts, fontSize);\n            var width = boxWidth + fontSize / 2 + ctx.measureText(legendItem.text).width;\n\n            if (i === 0 || lineWidths[lineWidths.length - 1] + width + labelOpts.padding > minSize.width) {\n              totalHeight += fontSize + labelOpts.padding;\n              lineWidths[lineWidths.length - (i > 0 ? 0 : 1)] = labelOpts.padding;\n            } // Store the hitbox width and height here. Final position will be updated in `draw`\n\n\n            hitboxes[i] = {\n              left: 0,\n              top: 0,\n              width: width,\n              height: fontSize\n            };\n            lineWidths[lineWidths.length - 1] += width + labelOpts.padding;\n          });\n          minSize.height += totalHeight;\n        } else {\n          var vPadding = labelOpts.padding;\n          var columnWidths = me.columnWidths = [];\n          var totalWidth = labelOpts.padding;\n          var currentColWidth = 0;\n          var currentColHeight = 0;\n          var itemHeight = fontSize + vPadding;\n          helpers$1.each(me.legendItems, function (legendItem, i) {\n            var boxWidth = getBoxWidth(labelOpts, fontSize);\n            var itemWidth = boxWidth + fontSize / 2 + ctx.measureText(legendItem.text).width; // If too tall, go to new column\n\n            if (i > 0 && currentColHeight + itemHeight > minSize.height - vPadding) {\n              totalWidth += currentColWidth + labelOpts.padding;\n              columnWidths.push(currentColWidth); // previous column width\n\n              currentColWidth = 0;\n              currentColHeight = 0;\n            } // Get max width\n\n\n            currentColWidth = Math.max(currentColWidth, itemWidth);\n            currentColHeight += itemHeight; // Store the hitbox width and height here. Final position will be updated in `draw`\n\n            hitboxes[i] = {\n              left: 0,\n              top: 0,\n              width: itemWidth,\n              height: fontSize\n            };\n          });\n          totalWidth += currentColWidth;\n          columnWidths.push(currentColWidth);\n          minSize.width += totalWidth;\n        }\n      }\n\n      me.width = minSize.width;\n      me.height = minSize.height;\n    },\n    afterFit: noop$1,\n    // Shared Methods\n    isHorizontal: function isHorizontal() {\n      return this.options.position === 'top' || this.options.position === 'bottom';\n    },\n    // Actually draw the legend on the canvas\n    draw: function draw() {\n      var me = this;\n      var opts = me.options;\n      var labelOpts = opts.labels;\n      var globalDefaults = core_defaults.global;\n      var defaultColor = globalDefaults.defaultColor;\n      var lineDefault = globalDefaults.elements.line;\n      var legendWidth = me.width;\n      var lineWidths = me.lineWidths;\n\n      if (opts.display) {\n        var ctx = me.ctx;\n        var fontColor = valueOrDefault$d(labelOpts.fontColor, globalDefaults.defaultFontColor);\n\n        var labelFont = helpers$1.options._parseFont(labelOpts);\n\n        var fontSize = labelFont.size;\n        var cursor; // Canvas setup\n\n        ctx.textAlign = 'left';\n        ctx.textBaseline = 'middle';\n        ctx.lineWidth = 0.5;\n        ctx.strokeStyle = fontColor; // for strikethrough effect\n\n        ctx.fillStyle = fontColor; // render in correct colour\n\n        ctx.font = labelFont.string;\n        var boxWidth = getBoxWidth(labelOpts, fontSize);\n        var hitboxes = me.legendHitBoxes; // current position\n\n        var drawLegendBox = function drawLegendBox(x, y, legendItem) {\n          if (isNaN(boxWidth) || boxWidth <= 0) {\n            return;\n          } // Set the ctx for the box\n\n\n          ctx.save();\n          var lineWidth = valueOrDefault$d(legendItem.lineWidth, lineDefault.borderWidth);\n          ctx.fillStyle = valueOrDefault$d(legendItem.fillStyle, defaultColor);\n          ctx.lineCap = valueOrDefault$d(legendItem.lineCap, lineDefault.borderCapStyle);\n          ctx.lineDashOffset = valueOrDefault$d(legendItem.lineDashOffset, lineDefault.borderDashOffset);\n          ctx.lineJoin = valueOrDefault$d(legendItem.lineJoin, lineDefault.borderJoinStyle);\n          ctx.lineWidth = lineWidth;\n          ctx.strokeStyle = valueOrDefault$d(legendItem.strokeStyle, defaultColor);\n\n          if (ctx.setLineDash) {\n            // IE 9 and 10 do not support line dash\n            ctx.setLineDash(valueOrDefault$d(legendItem.lineDash, lineDefault.borderDash));\n          }\n\n          if (opts.labels && opts.labels.usePointStyle) {\n            // Recalculate x and y for drawPoint() because its expecting\n            // x and y to be center of figure (instead of top left)\n            var radius = boxWidth * Math.SQRT2 / 2;\n            var centerX = x + boxWidth / 2;\n            var centerY = y + fontSize / 2; // Draw pointStyle as legend symbol\n\n            helpers$1.canvas.drawPoint(ctx, legendItem.pointStyle, radius, centerX, centerY);\n          } else {\n            // Draw box as legend symbol\n            if (lineWidth !== 0) {\n              ctx.strokeRect(x, y, boxWidth, fontSize);\n            }\n\n            ctx.fillRect(x, y, boxWidth, fontSize);\n          }\n\n          ctx.restore();\n        };\n\n        var fillText = function fillText(x, y, legendItem, textWidth) {\n          var halfFontSize = fontSize / 2;\n          var xLeft = boxWidth + halfFontSize + x;\n          var yMiddle = y + halfFontSize;\n          ctx.fillText(legendItem.text, xLeft, yMiddle);\n\n          if (legendItem.hidden) {\n            // Strikethrough the text if hidden\n            ctx.beginPath();\n            ctx.lineWidth = 2;\n            ctx.moveTo(xLeft, yMiddle);\n            ctx.lineTo(xLeft + textWidth, yMiddle);\n            ctx.stroke();\n          }\n        }; // Horizontal\n\n\n        var isHorizontal = me.isHorizontal();\n\n        if (isHorizontal) {\n          cursor = {\n            x: me.left + (legendWidth - lineWidths[0]) / 2 + labelOpts.padding,\n            y: me.top + labelOpts.padding,\n            line: 0\n          };\n        } else {\n          cursor = {\n            x: me.left + labelOpts.padding,\n            y: me.top + labelOpts.padding,\n            line: 0\n          };\n        }\n\n        var itemHeight = fontSize + labelOpts.padding;\n        helpers$1.each(me.legendItems, function (legendItem, i) {\n          var textWidth = ctx.measureText(legendItem.text).width;\n          var width = boxWidth + fontSize / 2 + textWidth;\n          var x = cursor.x;\n          var y = cursor.y; // Use (me.left + me.minSize.width) and (me.top + me.minSize.height)\n          // instead of me.right and me.bottom because me.width and me.height\n          // may have been changed since me.minSize was calculated\n\n          if (isHorizontal) {\n            if (i > 0 && x + width + labelOpts.padding > me.left + me.minSize.width) {\n              y = cursor.y += itemHeight;\n              cursor.line++;\n              x = cursor.x = me.left + (legendWidth - lineWidths[cursor.line]) / 2 + labelOpts.padding;\n            }\n          } else if (i > 0 && y + itemHeight > me.top + me.minSize.height) {\n            x = cursor.x = x + me.columnWidths[cursor.line] + labelOpts.padding;\n            y = cursor.y = me.top + labelOpts.padding;\n            cursor.line++;\n          }\n\n          drawLegendBox(x, y, legendItem);\n          hitboxes[i].left = x;\n          hitboxes[i].top = y; // Fill the actual label\n\n          fillText(x, y, legendItem, textWidth);\n\n          if (isHorizontal) {\n            cursor.x += width + labelOpts.padding;\n          } else {\n            cursor.y += itemHeight;\n          }\n        });\n      }\n    },\n\n    /**\n     * @private\n     */\n    _getLegendItemAt: function _getLegendItemAt(x, y) {\n      var me = this;\n      var i, hitBox, lh;\n\n      if (x >= me.left && x <= me.right && y >= me.top && y <= me.bottom) {\n        // See if we are touching one of the dataset boxes\n        lh = me.legendHitBoxes;\n\n        for (i = 0; i < lh.length; ++i) {\n          hitBox = lh[i];\n\n          if (x >= hitBox.left && x <= hitBox.left + hitBox.width && y >= hitBox.top && y <= hitBox.top + hitBox.height) {\n            // Touching an element\n            return me.legendItems[i];\n          }\n        }\n      }\n\n      return null;\n    },\n\n    /**\n     * Handle an event\n     * @private\n     * @param {IEvent} event - The event to handle\n     */\n    handleEvent: function handleEvent(e) {\n      var me = this;\n      var opts = me.options;\n      var type = e.type === 'mouseup' ? 'click' : e.type;\n      var hoveredItem;\n\n      if (type === 'mousemove') {\n        if (!opts.onHover && !opts.onLeave) {\n          return;\n        }\n      } else if (type === 'click') {\n        if (!opts.onClick) {\n          return;\n        }\n      } else {\n        return;\n      } // Chart event already has relative position in it\n\n\n      hoveredItem = me._getLegendItemAt(e.x, e.y);\n\n      if (type === 'click') {\n        if (hoveredItem && opts.onClick) {\n          // use e.native for backwards compatibility\n          opts.onClick.call(me, e.native, hoveredItem);\n        }\n      } else {\n        if (opts.onLeave && hoveredItem !== me._hoveredItem) {\n          if (me._hoveredItem) {\n            opts.onLeave.call(me, e.native, me._hoveredItem);\n          }\n\n          me._hoveredItem = hoveredItem;\n        }\n\n        if (opts.onHover && hoveredItem) {\n          // use e.native for backwards compatibility\n          opts.onHover.call(me, e.native, hoveredItem);\n        }\n      }\n    }\n  });\n\n  function createNewLegendAndAttach(chart, legendOpts) {\n    var legend = new Legend({\n      ctx: chart.ctx,\n      options: legendOpts,\n      chart: chart\n    });\n    core_layouts.configure(chart, legend, legendOpts);\n    core_layouts.addBox(chart, legend);\n    chart.legend = legend;\n  }\n\n  var plugin_legend = {\n    id: 'legend',\n\n    /**\n     * Backward compatibility: since 2.1.5, the legend is registered as a plugin, making\n     * Chart.Legend obsolete. To avoid a breaking change, we export the Legend as part of\n     * the plugin, which one will be re-exposed in the chart.js file.\n     * https://github.com/chartjs/Chart.js/pull/2640\n     * @private\n     */\n    _element: Legend,\n    beforeInit: function beforeInit(chart) {\n      var legendOpts = chart.options.legend;\n\n      if (legendOpts) {\n        createNewLegendAndAttach(chart, legendOpts);\n      }\n    },\n    beforeUpdate: function beforeUpdate(chart) {\n      var legendOpts = chart.options.legend;\n      var legend = chart.legend;\n\n      if (legendOpts) {\n        helpers$1.mergeIf(legendOpts, core_defaults.global.legend);\n\n        if (legend) {\n          core_layouts.configure(chart, legend, legendOpts);\n          legend.options = legendOpts;\n        } else {\n          createNewLegendAndAttach(chart, legendOpts);\n        }\n      } else if (legend) {\n        core_layouts.removeBox(chart, legend);\n        delete chart.legend;\n      }\n    },\n    afterEvent: function afterEvent(chart, e) {\n      var legend = chart.legend;\n\n      if (legend) {\n        legend.handleEvent(e);\n      }\n    }\n  };\n  var noop$2 = helpers$1.noop;\n\n  core_defaults._set('global', {\n    title: {\n      display: false,\n      fontStyle: 'bold',\n      fullWidth: true,\n      padding: 10,\n      position: 'top',\n      text: '',\n      weight: 2000 // by default greater than legend (1000) to be above\n\n    }\n  });\n  /**\n   * IMPORTANT: this class is exposed publicly as Chart.Legend, backward compatibility required!\n   */\n\n\n  var Title = core_element.extend({\n    initialize: function initialize(config) {\n      var me = this;\n      helpers$1.extend(me, config); // Contains hit boxes for each dataset (in dataset order)\n\n      me.legendHitBoxes = [];\n    },\n    // These methods are ordered by lifecycle. Utilities then follow.\n    beforeUpdate: noop$2,\n    update: function update(maxWidth, maxHeight, margins) {\n      var me = this; // Update Lifecycle - Probably don't want to ever extend or overwrite this function ;)\n\n      me.beforeUpdate(); // Absorb the master measurements\n\n      me.maxWidth = maxWidth;\n      me.maxHeight = maxHeight;\n      me.margins = margins; // Dimensions\n\n      me.beforeSetDimensions();\n      me.setDimensions();\n      me.afterSetDimensions(); // Labels\n\n      me.beforeBuildLabels();\n      me.buildLabels();\n      me.afterBuildLabels(); // Fit\n\n      me.beforeFit();\n      me.fit();\n      me.afterFit(); //\n\n      me.afterUpdate();\n      return me.minSize;\n    },\n    afterUpdate: noop$2,\n    //\n    beforeSetDimensions: noop$2,\n    setDimensions: function setDimensions() {\n      var me = this; // Set the unconstrained dimension before label rotation\n\n      if (me.isHorizontal()) {\n        // Reset position before calculating rotation\n        me.width = me.maxWidth;\n        me.left = 0;\n        me.right = me.width;\n      } else {\n        me.height = me.maxHeight; // Reset position before calculating rotation\n\n        me.top = 0;\n        me.bottom = me.height;\n      } // Reset padding\n\n\n      me.paddingLeft = 0;\n      me.paddingTop = 0;\n      me.paddingRight = 0;\n      me.paddingBottom = 0; // Reset minSize\n\n      me.minSize = {\n        width: 0,\n        height: 0\n      };\n    },\n    afterSetDimensions: noop$2,\n    //\n    beforeBuildLabels: noop$2,\n    buildLabels: noop$2,\n    afterBuildLabels: noop$2,\n    //\n    beforeFit: noop$2,\n    fit: function fit() {\n      var me = this;\n      var opts = me.options;\n      var display = opts.display;\n      var minSize = me.minSize;\n      var lineCount = helpers$1.isArray(opts.text) ? opts.text.length : 1;\n\n      var fontOpts = helpers$1.options._parseFont(opts);\n\n      var textSize = display ? lineCount * fontOpts.lineHeight + opts.padding * 2 : 0;\n\n      if (me.isHorizontal()) {\n        minSize.width = me.maxWidth; // fill all the width\n\n        minSize.height = textSize;\n      } else {\n        minSize.width = textSize;\n        minSize.height = me.maxHeight; // fill all the height\n      }\n\n      me.width = minSize.width;\n      me.height = minSize.height;\n    },\n    afterFit: noop$2,\n    // Shared Methods\n    isHorizontal: function isHorizontal() {\n      var pos = this.options.position;\n      return pos === 'top' || pos === 'bottom';\n    },\n    // Actually draw the title block on the canvas\n    draw: function draw() {\n      var me = this;\n      var ctx = me.ctx;\n      var opts = me.options;\n\n      if (opts.display) {\n        var fontOpts = helpers$1.options._parseFont(opts);\n\n        var lineHeight = fontOpts.lineHeight;\n        var offset = lineHeight / 2 + opts.padding;\n        var rotation = 0;\n        var top = me.top;\n        var left = me.left;\n        var bottom = me.bottom;\n        var right = me.right;\n        var maxWidth, titleX, titleY;\n        ctx.fillStyle = helpers$1.valueOrDefault(opts.fontColor, core_defaults.global.defaultFontColor); // render in correct colour\n\n        ctx.font = fontOpts.string; // Horizontal\n\n        if (me.isHorizontal()) {\n          titleX = left + (right - left) / 2; // midpoint of the width\n\n          titleY = top + offset;\n          maxWidth = right - left;\n        } else {\n          titleX = opts.position === 'left' ? left + offset : right - offset;\n          titleY = top + (bottom - top) / 2;\n          maxWidth = bottom - top;\n          rotation = Math.PI * (opts.position === 'left' ? -0.5 : 0.5);\n        }\n\n        ctx.save();\n        ctx.translate(titleX, titleY);\n        ctx.rotate(rotation);\n        ctx.textAlign = 'center';\n        ctx.textBaseline = 'middle';\n        var text = opts.text;\n\n        if (helpers$1.isArray(text)) {\n          var y = 0;\n\n          for (var i = 0; i < text.length; ++i) {\n            ctx.fillText(text[i], 0, y, maxWidth);\n            y += lineHeight;\n          }\n        } else {\n          ctx.fillText(text, 0, 0, maxWidth);\n        }\n\n        ctx.restore();\n      }\n    }\n  });\n\n  function createNewTitleBlockAndAttach(chart, titleOpts) {\n    var title = new Title({\n      ctx: chart.ctx,\n      options: titleOpts,\n      chart: chart\n    });\n    core_layouts.configure(chart, title, titleOpts);\n    core_layouts.addBox(chart, title);\n    chart.titleBlock = title;\n  }\n\n  var plugin_title = {\n    id: 'title',\n\n    /**\n     * Backward compatibility: since 2.1.5, the title is registered as a plugin, making\n     * Chart.Title obsolete. To avoid a breaking change, we export the Title as part of\n     * the plugin, which one will be re-exposed in the chart.js file.\n     * https://github.com/chartjs/Chart.js/pull/2640\n     * @private\n     */\n    _element: Title,\n    beforeInit: function beforeInit(chart) {\n      var titleOpts = chart.options.title;\n\n      if (titleOpts) {\n        createNewTitleBlockAndAttach(chart, titleOpts);\n      }\n    },\n    beforeUpdate: function beforeUpdate(chart) {\n      var titleOpts = chart.options.title;\n      var titleBlock = chart.titleBlock;\n\n      if (titleOpts) {\n        helpers$1.mergeIf(titleOpts, core_defaults.global.title);\n\n        if (titleBlock) {\n          core_layouts.configure(chart, titleBlock, titleOpts);\n          titleBlock.options = titleOpts;\n        } else {\n          createNewTitleBlockAndAttach(chart, titleOpts);\n        }\n      } else if (titleBlock) {\n        core_layouts.removeBox(chart, titleBlock);\n        delete chart.titleBlock;\n      }\n    }\n  };\n  var plugins = {};\n  var filler = plugin_filler;\n  var legend = plugin_legend;\n  var title = plugin_title;\n  plugins.filler = filler;\n  plugins.legend = legend;\n  plugins.title = title;\n  /**\n   * @namespace Chart\n   */\n\n  core_controller.helpers = helpers$1; // @todo dispatch these helpers into appropriated helpers/helpers.* file and write unit tests!\n\n  core_helpers(core_controller);\n  core_controller._adapters = core_adapters;\n  core_controller.Animation = core_animation;\n  core_controller.animationService = core_animations;\n  core_controller.controllers = controllers;\n  core_controller.DatasetController = core_datasetController;\n  core_controller.defaults = core_defaults;\n  core_controller.Element = core_element;\n  core_controller.elements = elements;\n  core_controller.Interaction = core_interaction;\n  core_controller.layouts = core_layouts;\n  core_controller.platform = platform;\n  core_controller.plugins = core_plugins;\n  core_controller.Scale = core_scale;\n  core_controller.scaleService = core_scaleService;\n  core_controller.Ticks = core_ticks;\n  core_controller.Tooltip = core_tooltip; // Register built-in scales\n\n  core_controller.helpers.each(scales, function (scale, type) {\n    core_controller.scaleService.registerScaleType(type, scale, scale._defaults);\n  }); // Load to register built-in adapters (as side effects)\n  // Loading built-in plugins\n\n  for (var k in plugins) {\n    if (plugins.hasOwnProperty(k)) {\n      core_controller.plugins.register(plugins[k]);\n    }\n  }\n\n  core_controller.platform.initialize();\n  var src = core_controller;\n\n  if (typeof window !== 'undefined') {\n    window.Chart = core_controller;\n  } // DEPRECATIONS\n\n  /**\n   * Provided for backward compatibility, not available anymore\n   * @namespace Chart.Chart\n   * @deprecated since version 2.8.0\n   * @todo remove at version 3\n   * @private\n   */\n\n\n  core_controller.Chart = core_controller;\n  /**\n   * Provided for backward compatibility, not available anymore\n   * @namespace Chart.Legend\n   * @deprecated since version 2.1.5\n   * @todo remove at version 3\n   * @private\n   */\n\n  core_controller.Legend = plugins.legend._element;\n  /**\n   * Provided for backward compatibility, not available anymore\n   * @namespace Chart.Title\n   * @deprecated since version 2.1.5\n   * @todo remove at version 3\n   * @private\n   */\n\n  core_controller.Title = plugins.title._element;\n  /**\n   * Provided for backward compatibility, use Chart.plugins instead\n   * @namespace Chart.pluginService\n   * @deprecated since version 2.1.5\n   * @todo remove at version 3\n   * @private\n   */\n\n  core_controller.pluginService = core_controller.plugins;\n  /**\n   * Provided for backward compatibility, inheriting from Chart.PlugingBase has no\n   * effect, instead simply create/register plugins via plain JavaScript objects.\n   * @interface Chart.PluginBase\n   * @deprecated since version 2.5.0\n   * @todo remove at version 3\n   * @private\n   */\n\n  core_controller.PluginBase = core_controller.Element.extend({});\n  /**\n   * Provided for backward compatibility, use Chart.helpers.canvas instead.\n   * @namespace Chart.canvasHelpers\n   * @deprecated since version 2.6.0\n   * @todo remove at version 3\n   * @private\n   */\n\n  core_controller.canvasHelpers = core_controller.helpers.canvas;\n  /**\n   * Provided for backward compatibility, use Chart.layouts instead.\n   * @namespace Chart.layoutService\n   * @deprecated since version 2.7.3\n   * @todo remove at version 3\n   * @private\n   */\n\n  core_controller.layoutService = core_controller.layouts;\n  /**\n   * Provided for backward compatibility, not available anymore.\n   * @namespace Chart.LinearScaleBase\n   * @deprecated since version 2.8\n   * @todo remove at version 3\n   * @private\n   */\n\n  core_controller.LinearScaleBase = scale_linearbase;\n  /**\n   * Provided for backward compatibility, instead we should create a new Chart\n   * by setting the type in the config (`new Chart(id, {type: '{chart-type}'}`).\n   * @deprecated since version 2.8.0\n   * @todo remove at version 3\n   */\n\n  core_controller.helpers.each(['Bar', 'Bubble', 'Doughnut', 'Line', 'PolarArea', 'Radar', 'Scatter'], function (klass) {\n    core_controller[klass] = function (ctx, cfg) {\n      return new core_controller(ctx, core_controller.helpers.merge(cfg || {}, {\n        type: klass.charAt(0).toLowerCase() + klass.slice(1)\n      }));\n    };\n  });\n  return src;\n});","/**\n * Checks if `value` is classified as an `Array` object.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is an array, else `false`.\n * @example\n *\n * _.isArray([1, 2, 3]);\n * // => true\n *\n * _.isArray(document.body.children);\n * // => false\n *\n * _.isArray('abc');\n * // => false\n *\n * _.isArray(_.noop);\n * // => false\n */\nvar isArray = Array.isArray;\nmodule.exports = isArray;"],"sourceRoot":""}